{"version":3,"sources":["utils/history.js","config.js","navigation/styles.js","Dashboard/styles.js","reportComponents/CampaignStyles.js","Dashboard/components/CampaignsReport.js","Dashboard/components/AutoEmailsDashboardReport.js","components/DateRange.js","components/DateRangePicker.js","utils/CustomNumber.js","utils/NumberFormatter.js","Dashboard/index.js","utils/dateFormatter.js","EmailTemplates/logic/columns.js","EmailTemplates/components/EmailTemplateSelect.js","EmailTemplates/index.js","utils/formHtmlGenerator.js","features/tagsSlice.js","components/Tags.js","EmailForm/index.js","features/subscribers/reloadAudienceReportSlice.js","features/subscribers/subscriberManagementDrawerSlice.js","utils/apiHelper.js","Audiance/components/audienceReportHeader.js","features/subscribers/selectedSubscribersForDelete.js","features/subscribers/subscriberDetailsDrawer.js","Audiance/components/columnActions.js","utils/ValueValidations.js","features/ImportSubscribers/importSubscribersTransformedDataSlice.js","Audiance/components/importComponents/FieldTypesSelect.js","EmailBuilder/styles.js","EmailBuilder/Elements/TextElement.js","Audiance/logic/columns.js","components/DeleteDialog.js","Audiance/components/updateSubscriber.js","Audiance/components/importComponents/ImportedContacts.js","Audiance/components/importSubscribers.js","components/EmailTemplateSelect.js","features/sendingEmailsSlice.js","components/SendingEmail.js","Audiance/components/sendEmailsByTags.js","Audiance/components/sendEmailsForSubscribers.js","Audiance/index.js","EmailTemplate/styles.js","components/LoadingButton.js","EmailBuilder/Elements/MailgenElement.js","EmailBuilder/Elements/TitleElement.js","EmailBuilder/Elements/SocialElement.js","EmailBuilder/Elements/ImageElement.js","EmailBuilder/Elements/DividerElement.js","EmailBuilder/BuilderStyleOptions/ElementsLayout.js","EmailBuilder/Layouts/DoubleLayout.js","EmailBuilder/Layouts/SingleLayout.js","EmailBuilder/Layouts/TripleLayout.js","EmailBuilder/Layouts/DoubleLeftLongLayout.js","EmailBuilder/Layouts/DoubleRightLongLayout.js","EmailBuilder/BuilderStyleOptions/RowsLayout.js","EmailBuilder/BuilderStyleOptions/BuilderStyleFactory.js","EmailBuilder/builderData.js","EmailBuilder/HtmlElements/TitleHtmlElement.js","EmailBuilder/Element.js","EmailBuilder/HtmlLayouts/HtmlSingleLayout.js","EmailBuilder/HtmlLayouts/HtmlDoubleLayout.js","EmailBuilder/HtmlLayouts/HtmlTripleLayout.js","EmailBuilder/Logic/DroppingRowsManager.js","EmailBuilder/Logic/DroppingElementsManager.js","EmailBuilder/Logic/DroppingManager.js","EmailBuilder/EmailBuilder.js","EmailTemplate/index.js","SimpleEmailTemplate/components/MergeTags.js","SimpleEmailTemplate/index.js","Campaigns/components/CampaignActivation.js","Campaigns/logic/columns.js","Campaigns/index.js","NewsLetter/sources/types.js","NewsLetter/styles.js","components/Select.js","NewsLetter/components/checkbox.js","NewsLetter/components/LastDayOfMonth.js","NewsLetter/components/DayOfWeek.js","NewsLetter/components/DayOfMonth.js","NewsLetter/index.js","features/scheduledCampaigns/scheduledCampaignGeneralSlice.js","ScheduledCampaign/components/GeneralDetails.js","features/scheduledCampaigns/scheduledCampaignSchedulingSlice.js","ScheduledCampaign/components/SchedulingDetails.js","features/scheduledCampaigns/scheduledCampaignSenderDetailsSlice.js","ScheduledCampaign/components/SenderDetails.js","ScheduledCampaign/logic/modelBuilder.js","ScheduledCampaign/logic/scheduledCampaignsValidations.js","features/scheduledCampaigns/validationSlice.js","ScheduledCampaign/index.js","CampaignPageLoader/index.js","AutoEmails/logic/columns.js","features/autoEmails/autoEmailGeneralDetailsSlice.js","features/autoEmails/autoEmailSenderDetailsSlice.js","features/autoEmails/autoEmailValidationsSlice.js","AutoEmails/index.js","AutoWelcomeEmail/components/GeneralDetails.js","AutoWelcomeEmail/components/SenderDetails.js","AutoWelcomeEmail/index.js","AutoWelcomeEmail/AutoEmailLoader.js","Profile/components/PasswordManagement.js","Profile/components/StripeCheckoutForm.js","Profile/components/StripeCheckout.js","utils/taxOptions.js","Profile/components/RemoveDiscount.js","Profile/components/Tiers.js","Profile/components/BillingInformation.js","utils/contriesProvider.js","Profile/components/GeneralInformation.js","Profile/components/SendingSettings.js","Profile/index.js","navigation/components/rightHeaderItems.js","navigation/components/leftHeaderItems.js","EmailTemplateBuilder V2/index.js","navigation/LeftNavigation.js","Onboarding/SubscriberType.js","features/onboarding/onboardingSlice.js","store/store.js","Onboarding/EmailNotVerified.js","Onboarding/components/OnboadingImportSubscriber.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","getConfig","audience","configJson","domain","clientId","scope","useStyles","makeStyles","theme","logo","marginTop","marginBottom","background","paddingBottom","siteLayoutBackground","boxShadow","content","width","padding","spacing","mixins","toolbar","main","flexGrow","ContainerWrapper","styled","div","ReportTitle","span","AnalyticsTitle","columns","title","dataIndex","key","render","text","id","name","url","process","target","href","SelectOutlined","value","color","_","emailTemplateType","emailTemplateId","emailTemplateName","emailTemplateTypeUrl","CampaignsReport","props","rows","loading","useState","current","pageSize","pagination","setPagination","dataSource","onChange","newPagination","style","textDecoration","AutoEmailsDashboardReport","DateRange","from","to","this","To","From","RangeTypes","transform","fromDate","Date","setDate","getDate","date","firstDayLastMonth","getFullYear","getMonth","firstDayCurrentMonth","lastDay","DateRangePicker","handler","selectedRangeType","setSelectedRangeType","customDateRangeDisabled","setCustomDateRangeDisabled","onRangeTypeChange","range","filter","x","rangeValid","validate","valid","useEffect","justify","gutter","defaultValue","placeholder","momentVal","dateStr","isValid","disabled","placement","CustomNumber","number","formatter","format","NumberFormatter","ranges","divider","suffix","i","length","toString","Dashboard","activeCampaigns","audienceSize","counts","setCounts","campaignsDetails","autoEmailsDetails","analytics","setAnalytics","loadingRange","setLoadingRange","loadingCounts","setLoadingCounts","dateRange","setDateRange","getAccessTokenSilently","useAuth0","config","getCounts","a","accessToken","fetch","method","headers","Authorization","then","res","json","response","catch","console","log","message","getActivity","moment","utc","border","Value","formatDate","params","toLocaleDateString","year","month","day","getTemplatesReportColumns","openEmailTemplateUpdate","val","templateType","type","onClick","icon","EditOutlined","menu","items","FormOutlined","label","rel","DragOutlined","EmailTemplateSelect","overlay","arrow","pointAtCenter","PlusOutlined","EmailTemplatesReport","setLoading","emailTemplates","setEmailTemplates","history","useHistory","callApi","templates","push","pathname","search","state","generateHtml","data","baseUrl","additionalData","firstNameIncluded","lastNameIncluded","phoneNumberIncluded","birthDateIncluded","__html","u","tags","join","replace","c","r","Math","random","initialState","tagsSlice","createSlice","reducers","updateSelectedTags","action","payload","resetSelectedTags","actions","Tags","customReload","status","disabledTags","dispatch","useDispatch","selectedTags","useSelector","selector","tagsSource","setTagsSource","mode","textAlign","selected","map","index","Option","includes","AlertTitle","ListItem","li","CreateForm","customerId","setCustomerId","firstName","lastName","birthDate","phoneNumber","fields","setFields","setPageLoading","err","buildFormModel","uId","description","float","defaultChecked","dangerouslySetInnerHTML","lang","TextArea","reload","reloadAudienceReportSlice","setShouldReload","importOpened","sendEmailsByTags","sendEmailsForSubscribers","subscriberManagementDrawerSlice","setSubscriberManagementDrawerState","options","requestOptions","body","JSON","stringify","request","successCallback","errorCallback","Container","LeftContainer","RightContainer","AudienceReportHeader","subscribersManagerDrawerState","subscriberManagementDrawer","downloadAudience","csvExporter","ExportToCsv","fieldSeparator","quoteStrings","decimalSeparator","showLabels","showTitle","useTextFile","useBom","useKeysAsHeaders","filename","modifiedAudience","extraParamsObject","parse","extra","birthday","dayOfBirth","monthOfBirth","modifiedObj","generateCsv","exportAudience","error","ExportOutlined","ImportOutlined","shape","RedoOutlined","trigger","e","preventDefault","MoreOutlined","openWarning","selectedSubscribersForDeleteSlice","addSubscribersForDelete","resetAddedSubscriberForDelete","Object","assign","drawerOpened","subscriberId","subscriberDetailsDrawerSlice","updateSubscriberDetailsDrawer","ColumnActions","DeleteOutlined","danger","validateEmail","email","test","trim","imported","modifiedFieldsValues","importSubscribersTransformedDataSlice","updateImportSubscribersTransformedData","updateSingleTransformedField","updateImportedAudienceData","FieldTypesSelect","defaultSelected","currentKey","importSubscribersTransformedData","usedFields","setUsedFields","usedValues","entries","OptGroup","elementBlock","height","display","marginLeft","marginRight","borderColor","borderRadius","dropArea","InnerContainer","Text","Title","TextElement","onDragStart","draggable","getAudienceColumns","bounceStatus","badgeText","isSubscribed","CheckOutlined","CloseOutlined","getImportedContactsColumns","headerTitle","getGeneric","DeleteDialog","selectedSubscribersForDelete","onExecute","onClose","executeAndClose","okButtonProps","visible","onOk","onCancel","subscriberType","freeze","NotSubscribed","Subscribed","subscriberTypeOptions","WarningMessageContainer","reason","WarningMessage","fontWeight","ErrorMessage","UpdateSubscriber","drawerState","subscriberDetailsDrawer","tagsState","reloadTags","setReloadTags","screen","saveButton","dateSubscribed","subscriber","setSubscriber","validations","setValidations","areFieldsValid","currentValidationResult","values","some","getSubscriberData","onUpdate","isSuccessful","spinning","bounceReason","event","Array","months","unsubscribedFromEmail","ImportedContacts","importedSubscribers","setColumns","localReportData","setLocalReportData","fieldsTransformations","setFieldsTransformations","subscribers","emailAddressFieldName","propertyNames","keys","forEach","propertyName","setupEmailAddress","result","obj","transformationArray","originalKey","transformedKey","importedSubscriber","staticColumns","newColumns","templateState","setupColumns","scroll","ImportSubscribers","subscribersEndState","importErrorMessage","setImportErrorMessage","areSubscribers","model","setModel","authorization","beforeUpload","file","isCsv","Upload","LIST_IGNORE","info","success","fileReader","FileReader","readAsText","originFileObj","onloadend","fileResult","recordsArray","strData","strDelimiter","objPattern","RegExp","arrData","arrMatches","exec","strMatchedDelimiter","strMatchedValue","CSVToArray","records","header","headerIndex","handleOk","subscribersListForSave","modifiedFieldValue","splited","split","checked","isSuccess","errorMessage","footer","orientation","plain","UploadOutlined","showIcon","source","setSource","getTemplates","template","size","sendingEmailsSlice","updateSendingEmails","resetSendingEmails","SendingEmail","selectedSendingEmails","sendingEmails","sendingEmailsSource","setSendingEmailsSource","allowClear","window","open","SendEmailsByTags","sendingEmailState","subject","senderName","senderEmail","replyToSendingEmail","SendEmailsForSubscribers","selectedSubscribers","Audience","shouldReload","reloadAudienceReport","subscriberManagementState","setAudience","setSelectedSubscribers","totalPages","setTotalPages","sendEmails","buttonsDisabled","setButtonsDisabled","page","setPage","getAudience","rowSelection","selectedRowKeys","getCheckboxProps","record","SendOutlined","pageNumber","total","showSizeChanger","showQuickJumper","save","backgroundColor","margin","fieldsContainer","withStyles","button","unit","paddingLeft","input","circularProgress","classes","Button","CircularProgress","className","Image","img","MailgenElement","src","location","protocol","host","TitleElement","SocialElement","fontSize","ImageElement","HorizontalLine","hr","DividerElement","ElementsLayout","drag","ev","dataTransfer","setData","DoubleLayout","SingleLayout","TripleLayout","LeftInnerContainer","RightInnerContainer","DoubleLeftLongLayout","DoubleRightLongLayout","RowsLayout","BuilderStyleFactory","selectedOption","builderData","elements","parentId","elementIds","columnOrder","firstColId","TitleHtmlElement","Element","element","draggableId","provided","draggableProps","dragHandleProps","ref","innerRef","Wrapper","HtmlElementsList","Empty","OptionsWrapper","Handle","HtmlSingleLayout","column","droppableId","droppableProps","elementId","HtmlDoubleLayout","firstColumn","secondColumn","getContainerType","hasLongWidthPart","lengthType","dimensions","HtmlTripleLayout","thirdColumn","renderElements","DroppingRowsManager","builderState","nextId","Guid","newGuid","StringGuid","secondColId","thirdColId","targetId","getData","getSingleLayoutState","getDoubleLayoutState","getTrippleLayoutState","getDoubleLeftLongLayout","getDoubleRightLongLayout","DroppingElementsManager","DroppingManager","_droppingRowsManager","_droppingElementsManager","typeData","drop","BuilderStyleButtonsWrapper","DropArea","DropAreaWrapper","EmailBuilder","React","selectedStyleOption","setSelectedStyleOption","setBuilderState","dropRows","attributes","targetElementId","newId","newElement","dropElement","renderLayouts","xs","columnsArray","list","grouped","flat","reduce","rv","renderSingleLayout","renderDoubleLayout","renderTripleLayout","ToggleButtonGroup","newAlignment","handleStyleOptionChange","ToggleButton","textTransform","onDrop","onDragOver","onDragEnd","destination","start","finish","startElementIds","splice","newStartColumn","finishElementIds","newFinishColumn","newBuilderState","newElementIds","newColumn","newColumnOrder","copyOfMoved","newState","direction","clear","EmailTemplate","styles","emailEditorRef","useRef","query","queryString","setName","saveInProgress","setSaveInProgress","errorOnUpsert","setErrorOnUpsert","fieldsErrorState","setFieldsErrorState","execute","html","Grid","container","item","Collapse","in","Alert","severity","IconButton","aria-label","sx","mb","TextField","helperText","LoadingButton","editor","exportHtml","design","startIcon","MergeTags","isModalVisible","setIsModalVisible","itemLayout","renderItem","Item","Meta","SimpleEmailTemplate","EditorState","createEmpty","editorState","setEditorState","validateFields","draftToHtml","convertToRaw","getCurrentContent","baseHtml","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","prefix","WarningOutlined","editorStyle","onEditorStateChange","CampaignActivation","buttonTypes","Start","Stop","Ended","row","activeButton","setActiveButton","onStart","onStop","StopOutlined","PlayCircleOutlined","renderButton","getCampaignColumns","openCampaignUpdate","hour","minute","campaigns","setCampaigns","getCampaigns","types","repeatTypes","endTypes","root","minWidth","formControl","selectEmpty","bullet","pos","backdrop","zIndex","drawer","SelectCustom","labelName","optionsSource","setOptionsSource","FormControl","InputLabel","Select","displayEmpty","inputProps","MenuItem","CheckboxCustom","StyledCheckbox","Checkbox","FormControlLabel","control","LastDayOfMonth","selectedRepeatType","justifyContent","alignItems","Tooltip","DaysOfWeek","Typography","DayOfMonth","Newsletter","disableScheduling","setSubject","setSenderName","setSenderEmail","rssUrl","setRssUrl","selectedEmailTemplate","setSelectedEmailTemplate","setSelectedRepeatType","selectedEndType","setSelectedEndType","selectedEndDate","setSelectedEndDate","selectedEndTime","setSelectedEndTime","dayOfWeek","setDayOfWeek","setTags","onlyLastDayOfMonth","enableOpenRate","enableClickTracking","setState","selectedDate","setSelectedDate","selectedDay","setSelectedDay","buttonDisabled","setButtonDisabled","campaignId","handleCheckboxChange","campaign","repeatType","weekDay","repeatTime","dayOfMonth","endDate","endTime","upsert","endType","Card","CardContent","md","align","Divider","utils","DateFnsUtils","KeyboardButtonProps","CardActions","variant","scheduledCampaignGeneralSlice","updateGeneralDetails","resetGeneralDetails","GeneralDetails","scheduledCampaignGeneral","scheduledCampaignValidations","isUpdateMode","time","scheduledCampaignSchedulingSlice","updateSchedulingDetails","resetSchedulingDetails","SchedulingDetails","scheduledCampaignScheduling","dateString","disabledDate","startOf","timeString","scheduledCampaignSenderDetailsSlice","updateSenderDetails","resetSenderDetails","SenderDetails","scheduledCampaignSenderDetails","newVal","getGeneralDetailsModel","getSenderDetailsModel","getSchedulingDetails","fullDate","validateStringLength","definedLength","stringNotNull","str","scheduledCampaignValidationSlice","updateScheduledCampaignValidation","resetScheduledCampaignValidation","ScheduledOneTime","general","scheduling","senderDetails","sendingEmailId","setIsUpdateMode","validationResult","openNotificationWithIcon","notification","momentDate","momentTime","replyToSendingEmailId","hours","minutes","CampaignPageLoader","selectedType","setSelectedType","schedulingSectionDisabled","setSchedulingSectionDisabled","getCampaignData","pointerEvents","opacity","Error","renderType","getAutoEmailsReportColumns","openAutoEmailUpdate","autoEmailGeneralDetailsSlice","updateAutoEmailGeneralDetails","resetAutoEmailGeneralDetails","autoEmailSenderDetailsSlice","updateAutoEmailSenderDetails","resetAutoEmailSenderDetails","autoEmailValidationsSlice","updateAutoEmailValidation","resetAutoEmailValidations","AutomationsReport","autoEmails","setAutoEmails","getAutoEmails","autoEmailId","generalDetails","autoEmailGeneralDetails","autoEmailValidations","usedTags","setUsedTags","InfoCircleOutlined","autoEmailSenderDetails","AutoWelcomeEmail","generalDetailsState","senderDetailsState","sendingEmail","AutoEmailTypes","AutoEmailLoader","getAutoEmailData","autoEmail","PasswordManagement","resetPasswordDisabled","setResetPasswordDisabled","StripeCheckoutForm","stripe","useStripe","useElements","submitAction","submitDisabled","onSubmit","htmlType","StripeCheckout","stripePromise","loadStripe","taxData","Id","Country","TaxCode","TaxIdText","Example","taxOptions","Index","confirm","Modal","RemoveDiscount","codeId","setDiscount","onDelete","ExclamationCircleOutlined","okText","okType","cancelText","Tiers","tiers","upgradeDisabled","discount","price","setPrice","discountPrice","setDiscountPrice","subscribersVolume","setSubscribersVolume","upgradeClicked","setUpgradeClicked","allowedEmails","setAllowedEmails","onVolumeChange","volume","flatAmount","emails","upTo","formattedPrice","substring","discountLeftOver","Number","percentageOff","uri","errorHandler","callback","changeAvailability","upgrade","quantity","RocketOutlined","code","expirationDate","addonBefore","MinusOutlined","addonAfter","BillingInformation","setFailed","useMessage","messageApi","contextHolder","setErrorMessage","setTiers","taxTypePlaceholder","setTypePlaceholder","setUpgradeDisabled","discountChecked","setDiscountChecked","validationState","setValidationState","taxCodeIndex","businessName","taxId","taxCode","addressCountry","addressCity","addressLine1","addressLine2","addressPostalCode","addressState","numberOfSubscribers","amount","discountCode","billingInfo","setBillingInfo","updateCustomerDetailsDisabled","buttonsAvailability","setButtonsAvailability","getTaxCodeData","getPrices","getCustomerDetails","businessDetails","discountCodeInfo","taxCodeData","tax","address","countryCode","city","postalCode","customerCreated","cardAdded","confirmCard","clientSecret","paymentMethod","confirmCardSetup","payment_method","setupIntent","validateBillingDetails","businessNameValid","countryCodeIsValid","every","updateBillingDetails","paymentMethodResponse","undefined","updateCustomerDetails","createPaymentMethod","card","getElement","CardElement","setTaxCodeData","replaceAll","toUpperCase","CountryCode","CountryName","Anchor","GeneralInformation","isActive","accountDetails","setAccountDetails","cancelButtonLoading","setCancelButtonLoading","cancelMessage","messages","setMessages","cancel","getAccountDetails","subscriptionStatus","subscribersCount","quota","percent","onConfirm","accountType","plan","subscribersQuantity","emailsSentForPeriod","allowedEmailsCount","getDatasource","invoiceUrl","SendingSettings","setSendingEmails","selectedSendingEmailForDelete","setSelectedSendingEmailForDelete","deleteModalOpen","setDeleteModalOpen","sendingEmailForAdd","setSendingEmailForAdd","addEmailDrawerOpened","setAddEmailDrawerOpened","tableLoading","addEmailButton","deleteSendingEmail","SendingEmailId","addSendingEmail","top","TabPane","Tabs","Profile","activeKey","setActiveKey","tab","onTabClick","tabPosition","WalletOutlined","SettingOutlined","ApiOutlined","AnchorContainer","RightHeaderItems","UserOutlined","renderTitle","innerVal","LeftHeaderItems","dropdownMatchSelectWidth","filterOption","inputValue","option","indexOf","EmailTemplateBuilder","setEditor","validation","setValidation","replaceLast","find","string","lastIndex","lastIndexOf","finalHtml","getEditorHtml","htmlFirstReplaced","images","initEditor","grapesjs","init","plugins","assetManager","assets","upload","uploadText","pluginsOpts","modalTitleImport","setComponents","runCommand","Header","Layout","Content","Sider","getItem","children","RadiusSettingOutlined","BarChartOutlined","UsergroupAddOutlined","ClockCircleOutlined","ScheduleOutlined","CalendarOutlined","MailOutlined","ToolOutlined","LogoutOutlined","LeftNavigation","collapsed","setCollapsed","logout","minHeight","collapsible","onCollapse","defaultSelectedKeys","defaultOpenKeys","exact","path","EmailTemplates","Campaigns","importSubscribers","simpleTemplate","amazonSesIntegration","onboardingSlice","updateOnboarding","configureStore","reducer","scheduledCampaignGeneralReducer","scheduledCampaignSchedulingReducer","scheduledCampaignSenderDetailsReducer","tagsReducer","sendingEmailsReducer","scheduledCampaignValidationReducer","selectedSubscribersForDeleteReducer","reloadAudienceReportReducer","subscriberDetailsDrawerReducer","subscriberManagementDrawerReducer","autoEmailGeneralDetailsReducer","autoEmailSenderDetailsReducer","autoEmailValidationsReducer","onboarding","onboardingReducer","importSubscribersTransformedDataReducer","middleware","getDefaultMiddleware","serializableCheck","h1","Subtitle","p","EmailNotVerified","SmileOutlined","subTitle","Panel","App","providerConfig","redirectUri","origin","onRedirectCallback","appState","returnTo","MainView","LoadingView","AppStructure","emailVerified","setEmailVerified","emailVerifiedCheckLoaded","setEmailVerifiedCheckLoaded","customerIdExists","setCustomerIdExists","customerIdLoaded","setCustomerIdLoaded","showLoadingView","setShowLoadingView","isLoading","isAuthenticated","loginWithRedirect","getIdTokenClaims","store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","rootElement","document","getElementById","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b06ad6c.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();","import configJson from \"./auth_config.json\";\r\n\r\nexport function getConfig() {\r\n  // Configure the audience here. By default, it will take whatever is in the config\r\n  // (specified by the `audience` key) unless it's the default value of \"YOUR_API_IDENTIFIER\" (which\r\n  // is what you get sometimes by using the Auth0 sample download tool from the quickstart page, if you\r\n  // don't have an API).\r\n  // If this resolves to `null`, the API page changes to show some helpful info about what to do\r\n  // with the audience.\r\n  const audience =\r\n    configJson.audience && configJson.audience !== \"YOUR_API_IDENTIFIER\"\r\n      ? configJson.audience\r\n      : null;\r\n\r\n  return {\r\n    domain: configJson.domain,\r\n    clientId: configJson.clientId,\r\n    scope: configJson.scope,\r\n    ...(audience ? { audience } : null),\r\n    \r\n  };\r\n}\r\n","import {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n        logo: {\r\n            // height: 40,\r\n            marginTop: 10,\r\n            marginBottom: 30,\r\n            background: 'rgba(255, 255, 255, 0.3)',\r\n            paddingBottom: 5\r\n        },\r\n\r\n        siteLayoutBackground: {\r\n            background: '#fff',\r\n            boxShadow: 'rgb(0 0 0 / 15%) 0px 1px 4px -1px'\r\n        }\r\n    }\r\n))\r\n\r\nexport default useStyles","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        width: '100%',\r\n        padding: theme.spacing(2, 3, 0, 31),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    main: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\nexport default useStyles","import styled from \"styled-components\";\r\n\r\nexport const ContainerWrapper = styled.div`\r\n    border: 1px solid #e6ebf1;\r\n    background-color: white;\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    color: #fafafb !important;\r\n`;\r\n\r\nexport const ReportTitle = styled.span`\r\n    color: #1a3353;\r\n    float: left;\r\n    padding-bottom: 20px;\r\n    font-weight: 700;\r\n    font-size: 17px;\r\n`;\r\n\r\nexport const AnalyticsTitle = styled.span`\r\n    color: #1a3353;\r\n    font-weight: 700;\r\n    font-size: 17px;\r\n`;","import { Table, Tag } from 'antd';\r\nimport React, {useState} from 'react';\r\nimport {ContainerWrapper, ReportTitle} from \"../../reportComponents/CampaignStyles\";\r\nimport {SelectOutlined} from \"@ant-design/icons\";\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        render: (text, {id, name}) => {\r\n            const url = `${process.env.REACT_APP_BASE_URL}/campaign?mode=update&campaignId=${id}`\r\n            return <a target=\"_blank\" href={url}>{name} &nbsp; <SelectOutlined /></a>\r\n        },\r\n    },\r\n    {\r\n        title: 'Emails Sent',\r\n        dataIndex: 'emailsSent',\r\n        key: 'emailsSent',\r\n        render: (text) => {\r\n            return `${text}`;\r\n        }\r\n    },\r\n    {\r\n        title: 'Open Rate',\r\n        dataIndex: 'openRate',\r\n        key: 'openRate',\r\n        render: (value) => {\r\n            let color = 'green'\r\n            if (value >= 40 && value < 60) {\r\n                color = 'orange'\r\n            }\r\n\r\n            if(value >= 0 && value < 40){\r\n                color = \"red\"\r\n            }\r\n\r\n            return <Tag color={color} key={value}> {value}% </Tag>;\r\n        }\r\n    },\r\n    {\r\n        title: 'Template Type',\r\n        key: 'emailTemplateType',\r\n        dataIndex: 'emailTemplateType',\r\n        render: (value) => value == 0 ? 'Simple Template' : 'Drag & Drop Builder'\r\n    },\r\n    {\r\n        title: 'Template',\r\n        key: 'emailTemplateName',\r\n        render: (_, {emailTemplateType, emailTemplateId, emailTemplateName}) => {\r\n            const emailTemplateTypeUrl = emailTemplateType == 0 ? 'simple-template' : 'template';\r\n            const url = `${process.env.REACT_APP_BASE_URL}/${emailTemplateTypeUrl}?mode=update&id=${emailTemplateId}`\r\n            return <a target=\"_blank\" href={url}>\r\n                {emailTemplateName} &nbsp;\r\n                <SelectOutlined />\r\n            </a>\r\n        },\r\n    },\r\n];\r\n\r\nconst CampaignsReport = (props) => {\r\n    const {rows, loading} = props\r\n    const [pagination, setPagination] = useState({\r\n        current: 1,\r\n        pageSize: 5\r\n    })\r\n    \r\n    const onTableChange = (newPagination) => {\r\n        setPagination({...newPagination})\r\n    }\r\n    \r\n    return <>\r\n        <ContainerWrapper>\r\n            <Table\r\n                title={() => <ReportTitle>Campaigns</ReportTitle>}\r\n                loading={loading}\r\n                columns={columns}\r\n                dataSource={rows}\r\n                pagination={pagination}\r\n                onChange={onTableChange}\r\n            />     \r\n        </ContainerWrapper>\r\n    </>\r\n}\r\n\r\nexport default CampaignsReport;","import {Table} from 'antd';\r\nimport React, {useState} from 'react';\r\nimport {ContainerWrapper, ReportTitle} from \"../../reportComponents/CampaignStyles\";\r\nimport {SelectOutlined} from \"@ant-design/icons\";\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        render: (text, {id, name}) => {\r\n            const url = `${process.env.REACT_APP_BASE_URL}/campaign?mode=update&campaignId=${id}`\r\n            return <a target=\"_blank\" style={{textDecoration: 'none', color: '#009be5'}} href={url}>{name} &nbsp; <SelectOutlined /></a>\r\n        },\r\n    },\r\n    {\r\n        title: 'Emails Sent',\r\n        dataIndex: 'emailsSent',\r\n        key: 'emailsSent',\r\n        render: (text) => {\r\n            return `${text}`;\r\n        }\r\n    },\r\n    {\r\n        title: 'Template Type',\r\n        key: 'emailTemplateType',\r\n        dataIndex: 'emailTemplateType',\r\n        render: (value) => value == 0 ? 'Simple Template' : 'Drag & Drop Builder'\r\n    },\r\n    {\r\n        title: 'Template',\r\n        key: 'emailTemplateName',\r\n        render: (_, {emailTemplateType, emailTemplateId, emailTemplateName}) => {\r\n            const emailTemplateTypeUrl = emailTemplateType == 0 ? 'simple-template' : 'template';\r\n            const url = `${process.env.REACT_APP_BASE_URL}/${emailTemplateTypeUrl}?mode=update&id=${emailTemplateId}`\r\n            return <a target=\"_blank\" href={url}>\r\n                {emailTemplateName} &nbsp;\r\n                <SelectOutlined />\r\n            </a>\r\n        },\r\n    },\r\n];\r\n\r\nconst AutoEmailsDashboardReport = (props) => {\r\n    const {rows, loading} = props\r\n\r\n    const [pagination, setPagination] = useState({\r\n        current: 1,\r\n        pageSize: 5\r\n    })\r\n\r\n    const onTableChange = (newPagination) => {\r\n        setPagination({...newPagination})\r\n    }\r\n\r\n    return <>\r\n        <ContainerWrapper>\r\n            <Table\r\n                title={() => <ReportTitle>Automated Emails</ReportTitle>}\r\n                loading={loading}\r\n                columns={columns}\r\n                dataSource={rows}\r\n                pagination={pagination}\r\n                onChange={onTableChange}\r\n            />\r\n        </ContainerWrapper>\r\n    </>\r\n}\r\n\r\nexport default AutoEmailsDashboardReport;","class DateRange{\r\n    constructor(from, to) {\r\n        this.from = from\r\n        this.to = to\r\n    }\r\n    \r\n    get From () { \r\n        return this.from\r\n    };\r\n\r\n    get To () {\r\n        return this.to\r\n    };\r\n    \r\n    validate(){\r\n        return this.To >= this.From\r\n    }\r\n}\r\n\r\nexport default DateRange","import React, {useEffect, useState} from 'react'\r\nimport DateRange from \"./DateRange\";\r\nimport {Col, DatePicker, Row, Select} from \"antd\";\r\nimport {Option} from \"antd/es/mentions\";\r\n\r\nconst RangeTypes = [{\r\n    id: 0,\r\n    name: 'Last 30 Days',\r\n    transform: () => {\r\n        let fromDate = new Date()\r\n        fromDate.setDate(fromDate.getDate() - 30)\r\n\r\n        return new DateRange(fromDate, new Date())\r\n    }\r\n}, {\r\n    id: 1,\r\n    name: 'Last 7 Days',\r\n    transform: () => {\r\n        let fromDate = new Date()\r\n        fromDate.setDate(fromDate.getDate() - 7)\r\n\r\n        return new DateRange(fromDate, new Date())\r\n    }\r\n}, {\r\n    id: 2,\r\n    name: 'Last Month',\r\n    transform: () => {\r\n        const date = new Date();\r\n        const firstDayLastMonth = new Date(date.getFullYear(), date.getMonth() - 1, 1);\r\n        const firstDayCurrentMonth = new Date(date.getFullYear(), date.getMonth(), 1);\r\n        const lastDay = new Date(firstDayCurrentMonth.getFullYear(), firstDayCurrentMonth.getMonth(), firstDayCurrentMonth.getDate() - 1);\r\n        return new DateRange(firstDayLastMonth, lastDay)\r\n    }\r\n}, {\r\n    id: 3,\r\n    name: 'Custom',\r\n    transform: () => {\r\n        let fromDate = new Date()\r\n        fromDate.setDate(fromDate.getDate() - 30)\r\n\r\n        return new DateRange(fromDate, new Date())\r\n    }\r\n}]\r\n\r\nconst DateRangePicker = (props) => {\r\n    const {\r\n        value,\r\n        handler\r\n    } = props\r\n\r\n    const [selectedRangeType, setSelectedRangeType] = useState(0)\r\n    const [customDateRangeDisabled, setCustomDateRangeDisabled] = useState(true)\r\n\r\n    const onRangeTypeChange = (value) => {\r\n        setSelectedRangeType(value)\r\n\r\n        if (value === 3) {\r\n            setCustomDateRangeDisabled(false)\r\n        } else {\r\n            setCustomDateRangeDisabled(true)\r\n        }\r\n\r\n        const range = RangeTypes.filter(x => x.id === value)[0].transform()\r\n        const rangeValid = range.validate()\r\n        handler({\r\n            range: {\r\n                from: range.From,\r\n                to: range.To\r\n            },\r\n            valid: rangeValid\r\n        })\r\n    }\r\n\r\n    const onFromDateChanged = (momentVal, dateStr) => {\r\n        const isValid = new DateRange(dateStr, value.range.to).validate()\r\n        handler({\r\n            range: {\r\n                ...value.range,\r\n                from: dateStr\r\n            },\r\n            valid: isValid\r\n        });\r\n    }\r\n    \r\n    const onToDateChanged = (momentVal, dateStr) => {\r\n        const isValid = new DateRange(value.range.from, dateStr).validate()\r\n        handler({\r\n            range: {\r\n                ...value.range,\r\n                to: dateStr\r\n            },\r\n            valid: isValid\r\n        });\r\n    }\r\n\r\n    useEffect(() => onRangeTypeChange(selectedRangeType), [])\r\n\r\n    return <>\r\n        <Row justify=\"start\" gutter={[16, 42]}>\r\n            <Col>\r\n                <Select\r\n                    defaultValue={0}\r\n                    style={{\r\n                        width: 120,\r\n                    }}\r\n                    onChange={onRangeTypeChange}\r\n                >\r\n                    <Option value={0}>Last 30 Days</Option>\r\n                    <Option value={1}>Last 7 Days</Option>\r\n                    <Option value={2}>Last Month</Option>\r\n                    <Option value={3}>Custom</Option>\r\n                </Select>\r\n            </Col>\r\n            <Col span={8}>\r\n                <DatePicker\r\n                    placeholder=\"From\"\r\n                    onChange={onFromDateChanged}\r\n                    defaultValue={value.range.from}    \r\n                    disabled={customDateRangeDisabled} \r\n                    placement={'bottomLeft'} />\r\n            </Col>\r\n            <Col span={8}>\r\n                <DatePicker\r\n                    placeholder=\"To\"\r\n                    onChange={onToDateChanged}\r\n                    defaultValue={value.range.to}    \r\n                    disabled={customDateRangeDisabled} \r\n                    placement={'bottomLeft'} />\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default DateRangePicker","class CustomNumber{\r\n    constructor(number, formatter) {\r\n        this.number = number;\r\n        this.formatter = formatter;\r\n    }\r\n    \r\n    get Value() {\r\n        if (this.formatter){\r\n            return this.formatter.format(this.number)\r\n        }\r\n        \r\n        return this.number;\r\n    }\r\n}\r\n\r\nexport default CustomNumber","class NumberFormatter{\r\n    constructor() {\r\n        this.ranges = [\r\n            { divider: 1e9 , suffix: 'B' },\r\n            { divider: 1e6 , suffix: 'M' },\r\n            { divider: 1e3 , suffix: 'k' }\r\n        ]\r\n    }\r\n    \r\n    format(number) {\r\n        for (let i = 0; i < this.ranges.length; i++) {\r\n            if (number >= this.ranges[i].divider) {\r\n                return (number / this.ranges[i].divider).toString() + this.ranges[i].suffix;\r\n            }\r\n        }\r\n        return number.toString();\r\n    }\r\n}\r\n\r\nexport default NumberFormatter","import React, {useEffect, useState} from \"react\"\r\nimport useStyles from \"./styles\";\r\nimport CampaignsReport from \"./components/CampaignsReport\";\r\nimport AutoEmailsDashboardReport from \"./components/AutoEmailsDashboardReport\";\r\nimport DateRangePicker from \"../components/DateRangePicker\";\r\nimport CustomNumber from \"../utils/CustomNumber\";\r\nimport NumberFormatter from \"../utils/NumberFormatter\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {getConfig} from \"../config\";\r\nimport moment from \"moment\";\r\nimport {Card, Col, Row, Statistic} from \"antd\";\r\nimport {AnalyticsTitle, ContainerWrapper} from \"../reportComponents/CampaignStyles\";\r\n\r\nconst Dashboard = () => {\r\n    const styles = useStyles();\r\n    const [counts, setCounts] = useState({activeCampaigns: 0, audienceSize: 0})\r\n    const [analytics, setAnalytics] = useState({campaignsDetails: [], autoEmailsDetails: []})\r\n    const [loadingRange, setLoadingRange] = useState(false)\r\n    const [loadingCounts, setLoadingCounts] = useState(false)\r\n    const [dateRange, setDateRange] = useState({\r\n        range: {\r\n            from: null,\r\n            to: null\r\n        },\r\n        valid: true\r\n    })\r\n    const {getAccessTokenSilently} = useAuth0();\r\n\r\n    const config = getConfig()\r\n\r\n    const getCounts = async () => {\r\n        setLoadingCounts(true)\r\n        const accessToken = await getAccessTokenSilently({\r\n            audience: config.audience,\r\n            scope: \"read:current_user\",\r\n        });\r\n\r\n        fetch(`${process.env.REACT_APP_API_BASE}/dashboard/GetDashboardCounts`, {\r\n            method: 'get',\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                setCounts({activeCampaigns: response.activeCampaigns, audienceSize: response.audienceSize})\r\n                setLoadingCounts(false)\r\n            })\r\n            .catch(x => console.log(x.message))\r\n    }\r\n\r\n    const getActivity = async () => {\r\n        if (!dateRange.valid)\r\n            return\r\n\r\n        setLoadingRange(true)\r\n        const accessToken = await getAccessTokenSilently({\r\n            audience: config.audience,\r\n            scope: \"read:current_user\",\r\n        });\r\n\r\n        const from = moment(dateRange.range.from).utc().format()\r\n        const to = moment(dateRange.range.to).utc().format()\r\n\r\n        fetch(`${process.env.REACT_APP_API_BASE}/dashboard/GetActivity?from=${from}&to=${to}`, {\r\n            method: 'get',\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                setAnalytics({\r\n                    campaignsDetails: response.campaignsDetails,\r\n                    autoEmailsDetails: response.autoEmailsDetails\r\n                })\r\n                setLoadingRange(false)\r\n            })\r\n            .catch(x => console.log(x.message))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCounts()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (dateRange.range.from && dateRange.range.to) {\r\n            getActivity()\r\n        }\r\n\r\n    }, [dateRange])\r\n\r\n    return <>\r\n        <Row gutter={[16, 24]}>\r\n            <Col span={12}>\r\n                <ContainerWrapper>\r\n                    <Card style={{border: 'none'}}>\r\n                        <Statistic\r\n                            title={<AnalyticsTitle>Active Campaigns</AnalyticsTitle>}\r\n                            value={counts.activeCampaigns}\r\n                            loading={loadingCounts}/>\r\n                    </Card>\r\n                </ContainerWrapper>\r\n            </Col>\r\n            <Col span={12}>\r\n                <ContainerWrapper>\r\n                    <Card style={{border: 'none'}}>\r\n                        <Statistic\r\n                            title={<AnalyticsTitle>Audience Size</AnalyticsTitle>}\r\n                            value={new CustomNumber(counts.audienceSize, new NumberFormatter()).Value}\r\n                            loading={loadingCounts}/>\r\n                    </Card>\r\n                </ContainerWrapper>\r\n            </Col>\r\n            <Col span={8}>\r\n                <DateRangePicker value={dateRange} handler={setDateRange}/>\r\n            </Col>\r\n        </Row>\r\n        <Row justify={\"start\"} gutter={[16, 24]} style={{marginTop: 20}}>\r\n            <Col span={24}>\r\n                <div>\r\n                    <CampaignsReport loading={loadingRange} rows={analytics.campaignsDetails}/>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        <Row justify={\"start\"} gutter={[16, 24]} style={{marginTop: 10}}>\r\n            <Col span={24}>\r\n                <div>\r\n                    <AutoEmailsDashboardReport loading={loadingRange} rows={analytics.autoEmailsDetails}/>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default Dashboard","function formatDate(params){\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' }\r\n    return new Date(params.value).toLocaleDateString(\"en-US\", options)\r\n}\r\n\r\nfunction formatDateTime(params){\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' }\r\n    return new Date(params.value).toLocaleDateString(\"en-US\", options)\r\n}\r\n\r\nexport {formatDate, formatDateTime}","import {formatDate} from \"../../utils/dateFormatter\";\r\nimport React from \"react\";\r\nimport {Button, Tag} from \"antd\";\r\nimport {EditOutlined} from \"@ant-design/icons\";\r\n\r\nexport const columns = {\r\n    getTemplatesReportColumns: (openEmailTemplateUpdate) => {\r\n        return [\r\n            {\r\n                dataIndex: 'name',\r\n                title: 'Name',\r\n                key: 'name'\r\n            },\r\n            {\r\n                dataIndex: 'createdOn',\r\n                title: 'Created Date',\r\n                key: 'date',\r\n                render: (value) => {\r\n                    return formatDate({value: value})\r\n                }\r\n            },\r\n            {\r\n                dataIndex: 'templateType',\r\n                title: 'Type',\r\n                key: 'templateType',\r\n                render: (value) => {\r\n                    if (value === 0) {\r\n                        return <Tag color=\"#2db7f5\">Simple Template</Tag>\r\n                    }\r\n                    if (value === 1) {\r\n                        return <Tag color=\"#9C27B0\">Drag & Drop</Tag>\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                dataIndex: 'modify',\r\n                title: 'Modify',\r\n                key: 'modify',\r\n                render: (val, {id, templateType}) => {\r\n                    debugger\r\n                    return <>\r\n                        <Button\r\n                            type=\"circle\"\r\n                            onClick={(x) => openEmailTemplateUpdate(id, templateType)}\r\n                            icon={<EditOutlined />}\r\n                        />\r\n                    </>\r\n                }\r\n            }];\r\n    }\r\n}\r\n\r\nexport const {getTemplatesReportColumns} = columns;","import React from 'react';\r\nimport {Button, Dropdown, Menu} from \"antd\";\r\nimport {DragOutlined, FormOutlined, PlusOutlined} from \"@ant-design/icons\";\r\nconst menu = (\r\n    <Menu\r\n        items={[\r\n            {\r\n                key: '1',\r\n                icon: <FormOutlined />,\r\n                label: (\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/simple-template\">\r\n                        Create a simple template\r\n                    </a>\r\n                ),\r\n            },\r\n            {\r\n                key: '2',\r\n                icon: <DragOutlined />,\r\n                label: (\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/drag-and-drop   \">\r\n                        Drag & Drop Builder\r\n                    </a>\r\n                ),\r\n            }\r\n        ]}\r\n    />\r\n);\r\n\r\nconst EmailTemplateSelect = () => {\r\n    return <>\r\n        <Dropdown\r\n            overlay={menu}\r\n            placement=\"bottom\"\r\n            arrow={{\r\n                pointAtCenter: true,\r\n            }}\r\n        >\r\n            <Button icon={<PlusOutlined />}>Create</Button>\r\n        </Dropdown>\r\n    </>\r\n}\r\n\r\nexport default EmailTemplateSelect;","import React, {useEffect, useState} from \"react\"\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getConfig} from \"../config\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {Button, Col, Row, Table} from \"antd\";\r\nimport {ContainerWrapper, ReportTitle} from \"../reportComponents/CampaignStyles\";\r\nimport {PlusOutlined} from \"@ant-design/icons\";\r\nimport {getTemplatesReportColumns} from \"./logic/columns\";\r\nimport EmailTemplateSelect from \"./components/EmailTemplateSelect\";\r\n\r\nconst EmailTemplatesReport = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [emailTemplates, setEmailTemplates] = useState([])\r\n    const {getAccessTokenSilently} = useAuth0();\r\n\r\n    const history = useHistory()\r\n    const config = getConfig()\r\n\r\n    // TODO: refactor it as a hook somehow\r\n    const callApi = async () => {\r\n        const accessToken = await getAccessTokenSilently({\r\n            audience: config.audience,\r\n            scope: \"read:current_user\",\r\n        });\r\n\r\n        fetch(`${process.env.REACT_APP_API_BASE}/emailTemplates/getTemplates`, {\r\n            method: 'get',\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                setEmailTemplates(response.templates)\r\n                setLoading(false)\r\n            })\r\n            .catch(x => console.log(x.message))\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        callApi()\r\n    }, [])\r\n\r\n    const openEmailTemplateUpdate = (id, templateType) => {\r\n        history.push({\r\n            pathname: templateType === 0 ? '/simple-template' : 'drag-and-drop',\r\n            search: `?id=${id}`,\r\n            state: null\r\n        })\r\n    }\r\n\r\n    return <>\r\n        <Row gutter={[16, 24]} style={{marginTop: 20}}>\r\n            <Col span={24}>\r\n                <div>\r\n                    <ContainerWrapper>\r\n                        <Row gutter={[16, 16]}>\r\n                            <Col span={8}>\r\n                                <ReportTitle>Email Templates</ReportTitle>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[16, 16]}>\r\n                            <Col span={2}>\r\n                                <EmailTemplateSelect />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Table\r\n                                    loading={loading}\r\n                                    columns={getTemplatesReportColumns((id, templateType) => openEmailTemplateUpdate(id, templateType))}\r\n                                    dataSource={emailTemplates}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </ContainerWrapper>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default EmailTemplatesReport","function createGuid()\r\n{\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        let r = Math.random()*16|0, v = c === 'x' ? r : (r&0x3|0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\n\r\nexport default function generateHtml(data, baseUrl) {\r\n    let additionalData = ''\r\n\r\n    if (data.firstNameIncluded) {\r\n        additionalData += `\r\n        <div>\r\n            <label for=\"firstName\">First Name:</label>\r\n            <input name=\"firstName\" type=\"text\" value=\"\" placeholder=\"First name...\" /></div>`\r\n    }\r\n\r\n    if (data.lastNameIncluded) {\r\n        additionalData += `\r\n        <div>\r\n            <label for=\"lastName\">Last Name:</label>\r\n            <input name=\"lastName\" type=\"text\" value=\"\" placeholder=\"Last name\" />\r\n        </div>`\r\n    }\r\n\r\n    if (data.phoneNumberIncluded) {\r\n        additionalData += `\r\n            <div>\r\n                <label for=\"phoneNumber\">PhoneNumber:</label>\r\n                <input name=\"phoneNumber\" type=\"tel\" value=\"\" placeholder=\"Phone Number...\" />\r\n            </div>`\r\n    }\r\n\r\n    if (data.birthDateIncluded) {\r\n        additionalData += `\r\n            <div>\r\n                <label>Birthday</label>\r\n                <input style=\"width: 50px\" name=\"dayOfBirth\" type=\"number\" value=\"\" placeholder=\"DD\" />\r\n                <span>/</span>\r\n                <input style=\"width: 50px\" name=\"monthOfBirth\" type=\"number\" value=\"\" placeholder=\"MM\" />\r\n            </div>`\r\n    }\r\n\r\n    const html = `\r\n        <h1>Subscribe</h1>\r\n        <div>\r\n            <iframe name=\"hiddenFrame\" width=\"0\" height=\"0\" border=\"0\" style=\"display: none;\"></iframe>\r\n        </div>\r\n        <form method=\"post\" target=\"hiddenFrame\" action=\"${baseUrl}/subscribers/subscribe?u=${data.u}\">\r\n            <label for=\"email\">Email:</label>\r\n            <input name=\"email\" type=\"email\" value=\"\" placeholder=\"Please enter your email here..\" />\r\n            ${additionalData}\r\n            <input type=\"submit\" value=\"Submit\" />\r\n            <div style=\"display: none\">\r\n                <input name=\"tags\" type=\"text\" value=\"${data.tags.join(',')}\">\r\n            </div>\r\n            <!-- Do not remove this! The purpose of it is to restrict bots and fake signups.  -->\r\n            <div style=\"display: none; position: absolute; left: -10000px\">\r\n                <input name=\"honey\" type=\"text\" value=\"${createGuid()}\">\r\n            </div>\r\n        </form>`\r\n\r\n    return {\r\n        __html: html\r\n    };\r\n}","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [];\r\n\r\nexport const tagsSlice = createSlice({\r\n    name: 'tags',\r\n    initialState: () => initialState,\r\n    reducers: {\r\n        updateSelectedTags: (state, action) => {\r\n            return [...action.payload];\r\n        },\r\n        resetSelectedTags: (state, action) => {\r\n            return [];\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    updateSelectedTags,\r\n    resetSelectedTags} = tagsSlice.actions\r\nexport default tagsSlice.reducer","import React, {useEffect, useState} from 'react'\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {getConfig} from \"../config\";\r\nimport {Select} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateSelectedTags} from \"../features/tagsSlice\";\r\n\r\nconst Tags = (props) => {\r\n    const {customReload, status, disabledTags} = props;\r\n    const dispatch = useDispatch();\r\n    const selectedTags = useSelector(selector => selector.tags)\r\n    const [tagsSource, setTagsSource] = useState([])\r\n    const {getAccessTokenSilently} = useAuth0();\r\n\r\n    const config = getConfig()\r\n\r\n    const callApi = async () => {\r\n        const accessToken = await getAccessTokenSilently({\r\n            audience: config.audience,\r\n            scope: \"read:current_user\",\r\n        });\r\n\r\n        fetch(`${process.env.REACT_APP_API_BASE}/tags/getTags`, {\r\n            method: 'get',\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                setTagsSource(response)\r\n            })\r\n            .catch(x => console.log(x.message))\r\n    }\r\n\r\n    useEffect(() => callApi(), [])\r\n\r\n    useEffect(() => {\r\n        if (customReload){\r\n            callApi()\r\n        }\r\n    }, [customReload])\r\n\r\n    return <>\r\n        <Select\r\n            status={status ? status : \"\"}\r\n            mode=\"tags\" \r\n            style={{ width: '100%', textAlign: 'left' }} \r\n            placeholder=\"Select Tags...\"\r\n            value={selectedTags}\r\n            onChange={(selected) => {\r\n                dispatch(updateSelectedTags(selected))\r\n            }}\r\n        >\r\n            {tagsSource.map((x, index) => {\r\n                if (!disabledTags){\r\n                    return <Select.Option value={x} key={index}>{x}</Select.Option>;\r\n                }\r\n                return <Select.Option disabled={disabledTags.includes(x)} value={x} key={index}>{x}</Select.Option>;\r\n            })}\r\n        </Select>\r\n    </>\r\n}\r\n\r\nexport default Tags","import * as React from 'react'\r\nimport generateHtml from '../utils/formHtmlGenerator';\r\nimport {useEffect, useState} from \"react\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {getConfig} from \"../config\";\r\nimport {Alert, Card, Col, Row, Space, Switch} from \"antd\";\r\nimport Tags from \"../components/Tags\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\nimport styled from \"styled-components\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport const AlertTitle = styled.span`\r\n    color: #1a3353;\r\n    font-weight: 700;\r\n    font-size: 17px;\r\n    display: block;\r\n    text-align: left;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n    color: #1a3353;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n`;\r\n\r\nconst CreateForm = () => {\r\n    const {getAccessTokenSilently} = useAuth0();\r\n    const config = getConfig()\r\n    const tags = useSelector(x => x.tags)\r\n    const [customerId, setCustomerId] = useState('')\r\n    const [fields, setFields] = useState({\r\n        firstName: true,\r\n        lastName: true,\r\n        birthDate: true,\r\n        phoneNumber: true\r\n    })\r\n    const [pageLoading, setPageLoading] = useState(false)\r\n\r\n    const callApi = async () => {\r\n        setPageLoading(true)\r\n        const accessToken = await getAccessTokenSilently({\r\n            audience: config.audience,\r\n            scope: \"read:current_user\",\r\n        });\r\n\r\n        fetch(`${process.env.REACT_APP_API_BASE}/customer/getCustomerId`, {\r\n            method: 'get',\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                setCustomerId(response.id)\r\n                setPageLoading(false)\r\n            })\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    const buildFormModel = (uId) => {\r\n        return {\r\n            u: uId,\r\n            firstNameIncluded: fields.firstName,\r\n            lastNameIncluded: fields.lastName,\r\n            birthDateIncluded: fields.birthDate,\r\n            phoneNumberIncluded: fields.phoneNumber,\r\n            tags: tags\r\n        }\r\n    }\r\n\r\n    useEffect(() => callApi(), [])\r\n\r\n    useEffect(() => {\r\n        generateHtml(buildFormModel(customerId))\r\n    }, [fields, tags])\r\n\r\n    return <>\r\n        <Row gutter={[16, 16]}>\r\n            <Col span={24}>\r\n                <Alert\r\n                    message={<AlertTitle>How to use the forms</AlertTitle>}\r\n                    description={<>\r\n                        <ol style={{\r\n                            textAlign: 'left'\r\n                        }}>\r\n                            <ListItem>Select the tags that you want your subscribers to be tagged with</ListItem>\r\n                            <ListItem>Select which fields you want to collect from your subscribers</ListItem>\r\n                            <ListItem>Copy the generated html</ListItem>\r\n                            <ListItem>Paste it in your website and style it according to your website design using CSS</ListItem>\r\n                        </ol>\r\n                    </>}\r\n                    type=\"info\"\r\n                />\r\n            </Col>\r\n        </Row>\r\n        <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n            <Col span={8}>\r\n                <Card>\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <Tags/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginTop: 10}}>\r\n                        <Col span={24}>\r\n                            <div style={{float: 'left'}}>\r\n                                <Space>\r\n                                    <Switch onChange={(val) => {\r\n                                        setFields({\r\n                                            ...fields,\r\n                                            firstName: val\r\n                                        })\r\n                                    }} defaultChecked/>\r\n                                    <span>First Name</span>\r\n                                </Space>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginTop: 10}}>\r\n                        <Col span={24}>\r\n                            <div style={{float: 'left'}}>\r\n                                <Space>\r\n                                    <Switch onChange={(val) => {\r\n                                        setFields({\r\n                                            ...fields,\r\n                                            lastName: val\r\n                                        })\r\n                                    }} defaultChecked/>\r\n                                    <span>Last Name</span>\r\n                                </Space>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginTop: 10}}>\r\n                        <Col span={24}>\r\n                            <div style={{float: 'left'}}>\r\n                                <Space>\r\n                                    <Switch onChange={(val) => {\r\n                                        setFields({\r\n                                            ...fields,\r\n                                            birthDate: val\r\n                                        })\r\n                                    }} defaultChecked/>\r\n                                    <span>Birth Date</span>\r\n                                </Space>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginTop: 10}}>\r\n                        <Col span={24}>\r\n                            <div style={{float: 'left'}}>\r\n                                <Space>\r\n                                    <Switch onChange={(val) => {\r\n                                        setFields({\r\n                                            ...fields,\r\n                                            phoneNumber: val\r\n                                        })\r\n                                    }} defaultChecked/>\r\n                                    <span>Phone Number</span>\r\n                                </Space>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n            <Col span={8}>\r\n                <Card>\r\n                    <div style={{textAlign: 'left'}} dangerouslySetInnerHTML={generateHtml(buildFormModel(customerId), process.env.REACT_APP_API_BASE)} />\r\n                </Card>\r\n            </Col>\r\n            <Col span={8}>\r\n                <pre lang=\"html\">\r\n                    <TextArea rows={20} value={generateHtml(buildFormModel(customerId), process.env.REACT_APP_API_BASE).__html.replace(/</g, '<').replace(/>/g, '>')} />\r\n                </pre>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default CreateForm","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    reload: false\r\n};\r\n\r\nexport const reloadAudienceReportSlice = createSlice({\r\n    name: 'reloadAudienceReport',\r\n    initialState: () => initialState,\r\n    reducers: {\r\n        setShouldReload: (state, action) => {\r\n            state.reload = action.payload.reload;\r\n            return state;\r\n        },\r\n    }\r\n})\r\n\r\nexport const { setShouldReload } = reloadAudienceReportSlice.actions\r\nexport default reloadAudienceReportSlice.reducer","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    importOpened: false,\r\n    sendEmailsByTags: false,\r\n    sendEmailsForSubscribers: false\r\n};\r\n\r\nexport const subscriberManagementDrawerSlice = createSlice({\r\n    name: 'subscriberManagementDrawer',\r\n    initialState: () => initialState,\r\n    reducers: {\r\n        setSubscriberManagementDrawerState: (state, action) => {\r\n            state.importOpened = action.payload.importOpened;\r\n            state.sendEmailsByTags = action.payload.sendEmailsByTags;\r\n            state.sendEmailsForSubscribers = action.payload.sendEmailsForSubscribers\r\n            \r\n            return state;\r\n        },\r\n    }\r\n})\r\n\r\nexport const { setSubscriberManagementDrawerState } = subscriberManagementDrawerSlice.actions\r\nexport default subscriberManagementDrawerSlice.reducer","import {getConfig} from \"../config\";\r\n\r\nexport const apiHelper = {\r\n    callApi: async (getAccessTokenSilently, options) => {\r\n        const config = getConfig()\r\n        const accessToken = await getAccessTokenSilently({\r\n            audience: config.audience,\r\n            scope: \"read:current_user\",\r\n        });\r\n        \r\n        const requestOptions = {\r\n            method: options.method,\r\n            headers: {\r\n                ...options.headers,\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                Authorization: `Bearer ${accessToken}`\r\n            },\r\n            body: JSON.stringify(options.request)\r\n        }\r\n        \r\n        fetch(options.url, requestOptions)\r\n            .then(response => response.json())\r\n            .then(options.successCallback)\r\n            .catch(err => options.errorCallback(err))\r\n    }\r\n}\r\n\r\nexport const { callApi } = apiHelper;\r\n","import React from 'react';\r\nimport {ReportTitle} from \"../../reportComponents/CampaignStyles\";\r\nimport {Button, Dropdown, Menu, Space, Tooltip} from \"antd\";\r\nimport {MoreOutlined, RedoOutlined, ExportOutlined, ImportOutlined} from \"@ant-design/icons\";\r\nimport styled from 'styled-components';\r\nimport {setShouldReload} from \"../../features/subscribers/reloadAudienceReportSlice\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setSubscriberManagementDrawerState} from \"../../features/subscribers/subscriberManagementDrawerSlice\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {callApi} from \"../../utils/apiHelper\";\r\nimport {ExportToCsv} from \"export-to-csv\";\r\n\r\nconst Container = styled.div`\r\n`;\r\n\r\nconst LeftContainer = styled.div`\r\n`;\r\n\r\nconst RightContainer = styled.div`\r\n    float:right\r\n`;\r\n\r\nconst AudienceReportHeader = () => {\r\n    const dispatch = useDispatch()\r\n    const subscribersManagerDrawerState = useSelector(x => x.subscriberManagementDrawer)\r\n    const {getAccessTokenSilently} = useAuth0();\r\n    \r\n    const onImportClick = () => {\r\n        dispatch(setSubscriberManagementDrawerState({\r\n            ...subscribersManagerDrawerState,\r\n            importOpened: true\r\n        }))\r\n    }\r\n    \r\n    const downloadAudience = (audience) => {\r\n        const options = {\r\n            fieldSeparator: ',',\r\n            quoteStrings: '\"',\r\n            decimalSeparator: '.',\r\n            showLabels: true,\r\n            showTitle: false,\r\n            useTextFile: false,\r\n            useBom: true,\r\n            useKeysAsHeaders: true,\r\n            filename: 'Export Audience'\r\n        };\r\n        \r\n        const csvExporter = new ExportToCsv(options);\r\n\r\n        let modifiedAudience = audience.map(x => {\r\n            const extraParamsObject = JSON.parse(x.extra)\r\n            const birthday = `${x.dayOfBirth}/${x.monthOfBirth}`;\r\n            \r\n            const modifiedObj = {\r\n                ...x,\r\n                ...extraParamsObject,\r\n                tags: x.tags.join(','),\r\n                birthday: !x.dayOfBirth || !x.monthOfBirth ? null : birthday\r\n            };\r\n\r\n            delete modifiedObj.extra\r\n            delete modifiedObj.dayOfBirth\r\n            delete modifiedObj.monthOfBirth\r\n            \r\n            return modifiedObj;\r\n        })\r\n        \r\n        debugger\r\n        csvExporter.generateCsv(modifiedAudience);\r\n    }\r\n\r\n    const exportAudience = async () => {\r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/subscribers/all`,\r\n            method: 'get',\r\n            successCallback: downloadAudience,\r\n            errorCallback: (error) => {}\r\n        })\r\n    }\r\n    \r\n    const menu = (\r\n        <Menu\r\n            items={[\r\n                {\r\n                    label: <a onClick={exportAudience}>Export</a>,\r\n                    key: '0',\r\n                    icon: <ExportOutlined />\r\n                },\r\n                {\r\n                    label: <a onClick={onImportClick}>Import</a>,\r\n                    key: '1',\r\n                    icon: <ImportOutlined />\r\n                }\r\n            ]}\r\n        />\r\n    );\r\n    \r\n    return <>\r\n        <Container>\r\n            <LeftContainer>\r\n                <ReportTitle>Audience</ReportTitle>\r\n            </LeftContainer>\r\n            <RightContainer>\r\n                <Space>\r\n                    <Tooltip title=\"Refresh\">\r\n                        <Button onClick={() => dispatch(setShouldReload({reload: true})) } shape=\"circle\" icon={<RedoOutlined />} />\r\n                    </Tooltip>\r\n                    <Tooltip title=\"More Actions\">\r\n                        <Dropdown overlay={menu} trigger={['click']}>\r\n                            <a onClick={(e) => e.preventDefault()}>\r\n                                <Button shape=\"circle\" icon={<MoreOutlined />} />\r\n                            </a>\r\n                        </Dropdown>\r\n                    </Tooltip>\r\n                </Space>\r\n            </RightContainer>\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default AudienceReportHeader;","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    openWarning: false,\r\n    audience: []\r\n};\r\n\r\nexport const selectedSubscribersForDeleteSlice = createSlice({\r\n    name: 'selectedSubscribersForDelete',\r\n    initialState: () => initialState,\r\n    reducers: {\r\n        addSubscribersForDelete: (state, action) => {\r\n            state.openWarning = action.payload.openWarning;\r\n            state.audience = action.payload.audience;\r\n            \r\n            return state;\r\n        },\r\n        resetAddedSubscriberForDelete: (state, action) => Object.assign(state, initialState)\r\n    }\r\n})\r\n\r\nexport const {\r\n    addSubscribersForDelete,\r\n    resetAddedSubscriberForDelete} = selectedSubscribersForDeleteSlice.actions\r\nexport default selectedSubscribersForDeleteSlice.reducer","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    drawerOpened: false,\r\n    subscriberId: ''\r\n};\r\n\r\nexport const subscriberDetailsDrawerSlice = createSlice({\r\n    name: 'subscriberDetailsDrawer',\r\n    initialState: () => initialState,\r\n    reducers: {\r\n        updateSubscriberDetailsDrawer: (state, action) => {\r\n            state.drawerOpened = action.payload.drawerOpened;\r\n            state.subscriberId = action.payload.subscriberId;\r\n            \r\n            return state;\r\n        },\r\n    }\r\n})\r\n\r\nexport const { updateSubscriberDetailsDrawer } = subscriberDetailsDrawerSlice.actions\r\nexport default subscriberDetailsDrawerSlice.reducer","import React from \"react\";\r\nimport {Button, Dropdown, Menu} from \"antd\";\r\nimport {MoreOutlined, EditOutlined, DeleteOutlined} from \"@ant-design/icons\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addSubscribersForDelete} from \"../../features/subscribers/selectedSubscribersForDelete\";\r\nimport {updateSubscriberDetailsDrawer} from \"../../features/subscribers/subscriberDetailsDrawer\";\r\n\r\nconst ColumnActions = (props) => {\r\n    const {subscriberId} = props;\r\n    const dispatch = useDispatch()\r\n    \r\n    const onDelete = () => {\r\n        dispatch(addSubscribersForDelete({\r\n            openWarning: true,\r\n            audience: [subscriberId]\r\n        }))\r\n    }\r\n    \r\n    const onEdit = () => {\r\n        dispatch(updateSubscriberDetailsDrawer({\r\n            drawerOpened: true,\r\n            subscriberId: subscriberId\r\n        }))\r\n    }\r\n    \r\n    const menu = (\r\n        <Menu\r\n            items={[\r\n                {\r\n                    label: <a onClick={onEdit}>Update</a>,\r\n                    key: '0',\r\n                    icon: <EditOutlined />\r\n                },\r\n                {\r\n                    label: <a onClick={onDelete}>Delete</a>,\r\n                    key: '1',\r\n                    icon: <DeleteOutlined />,\r\n                    danger: true\r\n                }\r\n            ]}\r\n        />\r\n    );\r\n    \r\n    return <>\r\n        <Dropdown overlay={menu} trigger={['click']}>\r\n            <a onClick={(e) => e.preventDefault()}>\r\n                <Button shape=\"circle\" icon={<MoreOutlined />} />\r\n            </a>\r\n        </Dropdown>\r\n    </>\r\n}\r\n\r\nexport default ColumnActions;","export default function validateEmail(email){\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email.trim())\r\n}","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    imported: [],\r\n    modifiedFieldsValues: {email: ''}\r\n};\r\n\r\nexport const importSubscribersTransformedDataSlice = createSlice({\r\n    name: 'importSubscribersTransformedData',\r\n    initialState: () => initialState,\r\n    reducers: {\r\n        updateImportSubscribersTransformedData: (state, action) => {\r\n            return {\r\n                ...state,\r\n                imported: [...action.payload.imported],\r\n                modifiedFieldsValues: {\r\n                    ...action.payload.modifiedFieldsValues\r\n                }\r\n            };\r\n        },\r\n        updateSingleTransformedField: (state, action) => {\r\n            state.modifiedFieldsValues[action.payload.key] = action.payload.value;\r\n            return state;\r\n        },\r\n        updateImportedAudienceData: (state, action) => {\r\n            state.imported = action.payload;\r\n            return state;\r\n        }\r\n    }\r\n})\r\n\r\nexport const { \r\n    updateImportSubscribersTransformedData,\r\n    updateSingleTransformedField,\r\n    updateImportedAudienceData\r\n} = importSubscribersTransformedDataSlice.actions;\r\nexport default importSubscribersTransformedDataSlice.reducer;","import {Select} from \"antd\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    updateSingleTransformedField\r\n} from \"../../../features/ImportSubscribers/importSubscribersTransformedDataSlice\";\r\n\r\nconst FieldTypesSelect = ({defaultSelected, disabled, currentKey}) => {\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(x => x.importSubscribersTransformedData)\r\n    const [usedFields, setUsedFields] = useState([])\r\n    \r\n    const onChange = (val) => {\r\n        dispatch(updateSingleTransformedField({\r\n            key: currentKey,\r\n            value: val\r\n        }))\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const usedValues = Object.entries(state.modifiedFieldsValues).map(x => {\r\n            return x[1]\r\n        })\r\n        \r\n        setUsedFields(usedValues)\r\n    }, [state.modifiedFieldsValues])\r\n    \r\n    return <>\r\n        <Select\r\n            onChange={onChange}    \r\n            disabled={disabled} \r\n            defaultValue={defaultSelected} \r\n            style={{ width: '25vh' }}>\r\n            <Select.OptGroup label={\"Custom Fields\"}>\r\n                <Select.Option value=\"ignoreField\">Ignore Field</Select.Option>\r\n                <Select.Option value=\"leaveAsIs\">Leave As Is</Select.Option>\r\n            </Select.OptGroup>\r\n            <Select.OptGroup label={\"Existing Fields\"}>\r\n                <Select.Option disabled={usedFields.includes('email')} value=\"email\">Email</Select.Option>\r\n                <Select.Option disabled={usedFields.includes('ipAddress')} value=\"ipAddress\">IP Address</Select.Option>\r\n                <Select.Option disabled={usedFields.includes('firstName')} value=\"firstName\">First Name</Select.Option>\r\n                <Select.Option disabled={usedFields.includes('lastName')} value=\"lastName\">Last Name</Select.Option>\r\n                <Select.Option disabled={usedFields.includes('phoneNumber')} value=\"phoneNumber\">Phone Number</Select.Option>\r\n                <Select.Option disabled={usedFields.includes('birthDate')} value=\"birthDate\">Birth Date</Select.Option>\r\n                <Select.Option disabled={usedFields.includes('tags')} value=\"tags\">Tags</Select.Option>\r\n            </Select.OptGroup>\r\n        </Select>\r\n    </>\r\n}\r\n\r\nexport default FieldTypesSelect;","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    elementBlock: {\r\n        width: '23.5%',\r\n        height: '100px',\r\n        border: '1px solid black',\r\n        display: 'inline-block',\r\n        marginLeft: '0.5%',\r\n        marginRight: '1%',\r\n        marginTop: '1.5%',\r\n        borderColor: '#90A4AE',\r\n        borderRadius: 10\r\n    },\r\n    dropArea: {\r\n        float: 'right',\r\n        width: '65%',\r\n        height: '800px',\r\n        marginRight: '3%'\r\n    }\r\n}));\r\n\r\nexport default useStyles","import React from \"react\";\r\nimport useStyles from \"../styles\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    text-align: center;\r\n    color: #90A4AE;\r\n    width: 23.5%;\r\n    height: 100px;\r\n    border: 1px solid black;\r\n    display: inline-block;\r\n    margin-left: 0.5%;\r\n    margin-right: 1%;\r\n    margin-top: 1.5%;\r\n    border-color: #90A4AE;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst InnerContainer = styled.div`\r\n    margin-top: 10%\r\n`;\r\n\r\nconst Text = styled.div`\r\n    font-weight: bold;\r\n    font-size: 2.5em;\r\n`;\r\nconst Title = styled.div`\r\n    font-size: 1.3em;\r\n`;\r\n\r\nconst TextElement = (props) => {\r\n    const styles = useStyles();\r\n    const {id, onDragStart} = props;\r\n\r\n    return <>\r\n        <Container id={id} onDragStart={onDragStart} draggable=\"true\">\r\n            <InnerContainer>\r\n                <Text>T</Text>\r\n                <Title>Text</Title>\r\n            </InnerContainer>\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default TextElement","import {formatDate} from \"../../utils/dateFormatter\";\r\nimport {CheckOutlined, CloseOutlined} from \"@ant-design/icons\";\r\nimport ColumnActions from \"../components/columnActions\";\r\nimport React from \"react\";\r\nimport validateEmail from \"../../utils/ValueValidations\";\r\nimport FieldTypesSelect from \"../components/importComponents/FieldTypesSelect\";\r\nimport TextElement from \"../../EmailBuilder/Elements/TextElement\";\r\nimport {Badge, Space, Tag} from \"antd\";\r\n\r\nexport const audienceColumns = {\r\n    getAudienceColumns: () => {\r\n        return [\r\n            {\r\n                title: 'Email',\r\n                dataIndex: 'email',\r\n                key: 'email',\r\n                render: (_, {email, bounceStatus}) => {\r\n                    debugger\r\n                    let badgeText = '';\r\n                    let color = '';\r\n\r\n                    if (bounceStatus === 0) {\r\n                        badgeText = 'Verified';\r\n                        color = 'green';\r\n                    }\r\n\r\n                    if (bounceStatus === 1) {\r\n                        badgeText = 'Soft Bounce';\r\n                        color = 'orange';\r\n                    }\r\n\r\n                    if (bounceStatus === 2) {\r\n                        badgeText = 'Hard Bounce';\r\n                        color = 'red';\r\n                    }\r\n\r\n                    if (bounceStatus === 3) {\r\n                        badgeText = 'Unverified';\r\n                        color = 'grey';\r\n                    }\r\n\r\n                    return <>\r\n                        <Space>\r\n                            <span>{email}</span>\r\n                            <Tag color={color}>{badgeText}</Tag>\r\n                        </Space>\r\n                    </>\r\n                }                \r\n            },\r\n            {\r\n                title: 'First Name',\r\n                dataIndex: 'firstName',\r\n                key: 'firstName'\r\n            },\r\n            {\r\n                title: 'Last Name',\r\n                dataIndex: 'lastName',\r\n                key: 'lastName'\r\n            },\r\n            {\r\n                title: 'Date Subscribed',\r\n                key: 'dateSubscribed',\r\n                dataIndex: 'dateSubscribed',\r\n                render: (value) => formatDate({value: value})\r\n            },\r\n            {\r\n                title: 'Is Subscriber',\r\n                key: 'isSubscribed',\r\n                dataIndex: 'isSubscribed',\r\n                render: (_, {isSubscribed}) => {\r\n                    return isSubscribed ? <CheckOutlined style={{color: 'green'}}/> :\r\n                        <CloseOutlined style={{color: 'red'}}/>;\r\n                }\r\n            },\r\n            {\r\n                title: 'Actions',\r\n                key: 'isSubscribed',\r\n                dataIndex: 'isSubscribed',\r\n                render: (_, {id}) => {\r\n                    return <ColumnActions subscriberId={id}/>;\r\n                }\r\n            },\r\n        ];\r\n    },\r\n    getImportedContactsColumns: () => {\r\n        return {\r\n            email: (headerTitle) => {\r\n                return {\r\n                    title: () => {\r\n                        return <>\r\n                            <FieldTypesSelect disabled defaultSelected=\"email\" />\r\n                            <div style={{marginTop: 10, textAlign: 'center'}}>\r\n                                <span>{headerTitle}</span>\r\n                            </div>\r\n                        </>\r\n                    },\r\n                    dataIndex: 'email',\r\n                    key: 'email',\r\n                    render: (_, {email}) => {\r\n                        const isValid = validateEmail(email);\r\n                        return <>\r\n                            <span style={{color: !isValid ? \"red\" : ''}}>{email}</span>\r\n                        </>\r\n                    }\r\n                }\r\n            },\r\n            getGeneric: (key) => {\r\n                return {\r\n                    title: () => {\r\n                        return <>\r\n                            <FieldTypesSelect\r\n                                currentKey={key} \r\n                                defaultSelected=\"ignoreField\" \r\n                            />\r\n                            <div style={{marginTop: 10, textAlign: 'center'}}>\r\n                                <span>{key}</span>\r\n                            </div>\r\n                        </>\r\n                    },\r\n                    dataIndex: key,\r\n                    key: key\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const {getAudienceColumns, getImportedContactsColumns} = audienceColumns;","import React from 'react';\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {resetAddedSubscriberForDelete} from \"../features/subscribers/selectedSubscribersForDelete\";\r\nimport {callApi} from \"../utils/apiHelper\";\r\nimport {setShouldReload} from \"../features/subscribers/reloadAudienceReportSlice\";\r\nimport {Modal} from \"antd\";\r\n\r\nconst DeleteDialog = () => {\r\n\r\n    const {getAccessTokenSilently} = useAuth0();\r\n    const selector = useSelector(x => x.selectedSubscribersForDelete)\r\n    const dispatch = useDispatch();\r\n\r\n    const onExecute = async () => {\r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/subscribers/deleteSubscriber`,\r\n            method: 'post',\r\n            request: {\r\n                id: selector.audience[0]\r\n            },\r\n            successCallback: (response) => {\r\n                onClose();\r\n                dispatch(setShouldReload({reload: true}))\r\n            }\r\n        })\r\n    }\r\n\r\n    const onClose = () => {\r\n        dispatch(resetAddedSubscriberForDelete())\r\n    }\r\n\r\n    const executeAndClose = async () => {\r\n        onClose();\r\n        await onExecute();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Modal okButtonProps={{ danger: true }} title=\"Delete\" visible={selector.openWarning} onOk={executeAndClose} onCancel={onClose}>\r\n                <span>\r\n                    This action will remove this record forever. It is not reversable.\r\n                    Are you sure you want to proceed? \r\n                </span>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteDialog","import * as React from 'react'\r\nimport {Alert, Button, Col, Drawer, Input, Row, Select, Spin} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateSubscriberDetailsDrawer} from \"../../features/subscribers/subscriberDetailsDrawer\";\r\nimport Tags from \"../../components/Tags\";\r\nimport {callApi} from \"../../utils/apiHelper\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {formatDate} from \"../../utils/dateFormatter\";\r\nimport {updateSelectedTags} from \"../../features/tagsSlice\";\r\nimport {setShouldReload} from \"../../features/subscribers/reloadAudienceReportSlice\";\r\nimport moment from \"moment\";\r\nimport validateEmail from \"../../utils/ValueValidations\";\r\n\r\nconst subscriberType = Object.freeze({\r\n    NotSubscribed: 0,\r\n    Subscribed: 1\r\n})\r\n\r\nconst subscriberTypeOptions = Object.freeze([{\r\n    id: subscriberType.Subscribed,\r\n    name: \"Subscribed\"\r\n}, {\r\n    id: subscriberType.NotSubscribed,\r\n    name: \"Not Subscribed\"\r\n}])\r\n\r\nconst WarningMessageContainer = ({bounceStatus, reason}) => {\r\n    const WarningMessage = () => {\r\n        return <>\r\n            <div>\r\n                <span>Message delivery failed for this subscriber:</span>\r\n            </div>\r\n            <div>\r\n                <span style={{fontWeight: 'bold'}}>{reason}</span>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n    const ErrorMessage = () => {\r\n        return <>\r\n            <div>\r\n                <span>Message delivery failed for this subscriber, you will not be able to send new messages to this subscriber, as this indicates that the email address simply does not exist:</span>\r\n            </div>\r\n            <div>\r\n                <span style={{fontWeight: 'bold'}}>{reason}</span>\r\n            </div>\r\n        </>\r\n    }\r\n    const getContainer = () => {\r\n        if (bounceStatus === 1){\r\n            return <Alert\r\n                message={<span style={{fontWeight: 'bold'}}>Soft Bounce</span>}\r\n                description={<WarningMessage />}\r\n                type=\"warning\"\r\n            />\r\n        }\r\n        \r\n        if (bounceStatus === 2){\r\n            return <Alert\r\n                message={<span style={{fontWeight: 'bold'}}>Hard Bounce</span>}\r\n                description={<ErrorMessage />}\r\n                type=\"error\"\r\n            />\r\n        }\r\n        \r\n        return \"\";\r\n    }\r\n    \r\n    return <>\r\n        {getContainer()}\r\n    </>\r\n}\r\n\r\nconst UpdateSubscriber = () => {\r\n    const dispatch = useDispatch()\r\n    const drawerState = useSelector(selector => selector.subscriberDetailsDrawer)\r\n    const tagsState = useSelector(selector => selector.tags)\r\n    const {getAccessTokenSilently} = useAuth0();\r\n\r\n    const [reloadTags, setReloadTags] = useState(false);\r\n    const [loading, setLoading] = useState({\r\n        screen: false,\r\n        saveButton: false\r\n    })\r\n    const [subscriber, setSubscriber] = useState({\r\n        dayOfBirth: [],\r\n        monthOfBirth: [],\r\n        dateSubscribed: new Date()\r\n    })\r\n    const [validations, setValidations] = useState({\r\n        email: true\r\n    })\r\n\r\n    const onClose = () => {\r\n        dispatch(updateSubscriberDetailsDrawer({\r\n            drawerState: false\r\n        }))\r\n    }\r\n\r\n    const areFieldsValid = () => {\r\n        let currentValidationResult = { email: true };\r\n        \r\n        if (!validateEmail(subscriber.email)){\r\n            currentValidationResult.email = false;\r\n        }\r\n\r\n        setValidations(currentValidationResult)\r\n        return !Object.values(currentValidationResult).some(x => x == false);\r\n    }\r\n\r\n    const getSubscriberData = async () => {\r\n        setLoading({\r\n            ...loading,\r\n            screen: true\r\n        })\r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/subscribers/getSubscriberDetails?id=${drawerState.subscriberId}`,\r\n            method: 'get',\r\n            successCallback: (response) => {\r\n                debugger\r\n                setSubscriber({\r\n                    ...response.subscriber,\r\n                    dayOfBirth: response.subscriber.dayOfBirth[0],\r\n                    monthOfBirth: response.subscriber.monthOfBirth[0]\r\n                })\r\n                \r\n                dispatch(updateSelectedTags(response.subscriber.tags === null ? [] : response.subscriber.tags))\r\n                setLoading({\r\n                    ...loading,\r\n                    screen: false\r\n                })\r\n            },\r\n            errorCallback: (err) => {\r\n                setLoading({\r\n                    ...loading,\r\n                    screen: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const onUpdate = async () => {\r\n        if (!areFieldsValid()){\r\n            return;\r\n        }\r\n        \r\n        setLoading({\r\n            ...loading,\r\n            saveButton: true\r\n        })\r\n        \r\n        const request = {\r\n            id: subscriber.id,\r\n            firstName: subscriber.firstName,\r\n            lastName: subscriber.lastName,\r\n            email: subscriber.email,\r\n            isSubscribed: subscriber.isSubscribed === subscriberType.Subscribed || subscriber.isSubscribed,\r\n            tags: tagsState,\r\n            phoneNumber: subscriber.phoneNumber,\r\n            dayOfBirth: subscriber.dayOfBirth,\r\n            monthOfBirth: subscriber.monthOfBirth\r\n        };\r\n\r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/subscribers/updateSubscriber`,\r\n            method: 'post',\r\n            request: request,\r\n            successCallback: (response) => {\r\n                if (response.isSuccessful) {\r\n                    onClose()\r\n                    dispatch(setShouldReload({reload: true}))\r\n                }\r\n\r\n                setLoading({\r\n                    ...loading,\r\n                    saveButton: false\r\n                })\r\n            },\r\n            errorCallback: () => {}\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (drawerState.drawerOpened) {\r\n            getSubscriberData()\r\n            setReloadTags(true)\r\n        }\r\n        if (!drawerState.drawerOpened){\r\n            setReloadTags(false)\r\n        }\r\n    }, [drawerState.drawerOpened])\r\n\r\n    return (\r\n        <>\r\n            <Drawer title=\"Details\" placement=\"right\" onClose={onClose} visible={drawerState.drawerOpened}>\r\n                <Spin spinning={loading.screen}>\r\n                    <Row gutter={[16,16]}>\r\n                        <Col span={24}>\r\n                            <WarningMessageContainer \r\n                                bounceStatus={subscriber.bounceStatus}\r\n                                reason={subscriber.bounceReason}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                        <Col span={12}>\r\n                            <Input\r\n                                onChange={event => setSubscriber({\r\n                                    ...subscriber,\r\n                                    firstName: event.target.value\r\n                                })}\r\n                                value={subscriber.firstName} placeholder=\"First Name\"/>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Input\r\n                                onChange={event => setSubscriber({\r\n                                    ...subscriber,\r\n                                    lastName: event.target.value\r\n                                })}\r\n                                value={subscriber.lastName} placeholder=\"Last Name\"/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                        <Col span={12}>\r\n                            <Input\r\n                                status={validations.email ? '' : \"error\"}\r\n                                onChange={event => setSubscriber({\r\n                                    ...subscriber,\r\n                                    email: event.target.value\r\n                                })}\r\n                                value={subscriber.email} placeholder=\"Email\"/>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Input\r\n                                onChange={event => setSubscriber({\r\n                                    ...subscriber,\r\n                                    phoneNumber: event.target.value\r\n                                })}\r\n                                value={subscriber.phoneNumber} placeholder=\"Phone Number\"/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                        <Col span={12}>\r\n                            <Select\r\n                                style={{width: '100%'}}\r\n                                placeholder=\"Day Of Birth\"\r\n                                onChange={val => setSubscriber({\r\n                                    ...subscriber,\r\n                                    dayOfBirth: val\r\n                                })}\r\n                                value={subscriber.dayOfBirth}>\r\n                                {Array.from({length: 31}, (_, i) => i + 1).map(x => <Select.Option key={x} value={x}>{x}</Select.Option>)}\r\n                            </Select>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Select\r\n                                style={{width: '100%'}}\r\n                                placeholder=\"Month Of Birth\"\r\n                                onChange={val => setSubscriber({\r\n                                    ...subscriber,\r\n                                    monthOfBirth: val\r\n                                })}\r\n                                value={subscriber.monthOfBirth ? subscriber.monthOfBirth - 1 : subscriber.monthOfBirth}>\r\n                                {moment.months().map((x, index) => <Select.Option key={index++}\r\n                                                                               value={index++}>{x}</Select.Option>)}\r\n                            </Select>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                        <Col span={12}>\r\n                            <Select\r\n                                disabled={subscriber.unsubscribedFromEmail || subscriber.isSubscribed === subscriberType.NotSubscribed}\r\n                                style={{width: '100%'}}\r\n                                placeholder=\"Is Subscriber\"\r\n                                onChange={val => setSubscriber({\r\n                                    ...subscriber,\r\n                                    isSubscribed: val\r\n                                })}\r\n                                value={!subscriber.isSubscribed ? subscriberType.NotSubscribed : subscriberType.Subscribed}>\r\n                                {subscriberTypeOptions.map((x) => <Select.Option key={x.id}\r\n                                                                               value={x.id}>{x.name}</Select.Option>)}\r\n                            </Select>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Input value={formatDate({value: subscriber.dateSubscribed})} disabled placeholder=\"Date Subscribed\"/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                        <Col span={24}>\r\n                            <Tags customReload={reloadTags} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                        <Col span={24}>\r\n                            <Button \r\n                                disabled={subscriber.bounceStatus === 2}\r\n                                onClick={onUpdate} \r\n                                style={{float: 'right'}} \r\n                                type=\"primary\"\r\n                                loading={loading.saveButton}>Update</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Spin>\r\n            </Drawer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UpdateSubscriber","import {Table} from \"antd\";\r\nimport {getImportedContactsColumns} from \"../../logic/columns\";\r\nimport {ContainerWrapper} from \"../../../reportComponents/CampaignStyles\";\r\nimport * as React from \"react\";\r\nimport {useEffect, useState} from \"react\";\r\nimport validateEmail from \"../../../utils/ValueValidations\";\r\nimport {\r\n    updateImportedAudienceData,\r\n    updateImportSubscribersTransformedData\r\n} from \"../../../features/ImportSubscribers/importSubscribersTransformedDataSlice\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst ImportedContacts = ({loading, importedSubscribers}) => {\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(x => x.importSubscribersTransformedData)\r\n    \r\n    const [columns, setColumns] = useState([]);\r\n    const [localReportData, setLocalReportData] = useState([]);\r\n    const [fieldsTransformations, setFieldsTransformations] = useState({\r\n        email: null\r\n    })\r\n    \r\n    const setupEmailAddress = (subscribers) => {\r\n        let emailAddressFieldName = null;\r\n        const propertyNames = Object.keys(subscribers[0]);\r\n        \r\n        subscribers.forEach(subscriber => {\r\n            if (emailAddressFieldName !== null){\r\n                return;\r\n            }\r\n            \r\n            propertyNames.forEach(propertyName => {\r\n                if (emailAddressFieldName !== null){\r\n                    return;\r\n                }\r\n                \r\n                debugger\r\n                const val = !subscriber[propertyName] ? '' : subscriber[propertyName];\r\n                if (validateEmail(val)){\r\n                    emailAddressFieldName = propertyName;\r\n                }\r\n            })\r\n        })\r\n        \r\n        return emailAddressFieldName;\r\n    }\r\n    \r\n    const setupColumns = () => {\r\n        const staticColumns = getImportedContactsColumns();\r\n        let newColumns = [];\r\n        let templateState = {}\r\n        \r\n        if (!localReportData[0]){\r\n            return;\r\n        }\r\n        \r\n        Object.keys(localReportData[0]).forEach(x => {\r\n            if (x === 'email' && fieldsTransformations.email){\r\n                templateState[x] = 'email';\r\n                newColumns.push(staticColumns.email(fieldsTransformations.email))\r\n            }\r\n            \r\n            else{\r\n                const partOfStaticFields = Object.keys(fieldsTransformations).includes(x)\r\n                \r\n                if (!partOfStaticFields){\r\n                    templateState[x] = 'ignoreField';\r\n                    newColumns.push(staticColumns.getGeneric(x))\r\n                }\r\n            }\r\n            \r\n        })\r\n        \r\n        debugger\r\n        dispatch(updateImportSubscribersTransformedData({\r\n            ...state,\r\n            modifiedFieldsValues: {\r\n                ...state.modifiedFieldsValues,\r\n                ...templateState\r\n            }\r\n        }))\r\n        \r\n        setColumns([...newColumns])\r\n    }\r\n    \r\n    useEffect(() => {\r\n        let fields = {\r\n            email: null\r\n        };\r\n        \r\n        if(importedSubscribers.length <= 0){\r\n            setLocalReportData([])\r\n            setColumns([])\r\n        }\r\n        \r\n        if (importedSubscribers.length > 0){\r\n            fields.email = setupEmailAddress(importedSubscribers)\r\n            \r\n            const result = importedSubscribers.map(x => {\r\n                let obj = {}\r\n                let usedFields = [];\r\n                \r\n                Object.entries(fields).map(transformationArray => {\r\n                    const originalKey = transformationArray[0];\r\n                    const transformedKey = transformationArray[1];\r\n                    \r\n                    obj[originalKey] = x[transformedKey];\r\n                    usedFields.push(transformedKey)\r\n                })\r\n                \r\n                Object.entries(x).map(importedSubscriber => {\r\n                    if (!usedFields.includes(importedSubscriber[0])){\r\n                        obj[importedSubscriber[0]] = importedSubscriber[1]\r\n                    }                    \r\n                })\r\n                \r\n                return obj;\r\n            })\r\n            \r\n            setLocalReportData(result)\r\n            dispatch(updateImportedAudienceData(result))\r\n        }\r\n        \r\n        setFieldsTransformations(fields)\r\n        setupColumns()\r\n    }, [importedSubscribers])\r\n    \r\n    return <>\r\n        <ContainerWrapper>\r\n            <Table\r\n                loading={loading}\r\n                columns={columns}\r\n                scroll={{\r\n                    x: true,\r\n                }}\r\n                dataSource={localReportData.map((x, index) => {\r\n                    return {\r\n                        ...x,\r\n                        key: `${index}-index`\r\n                    }\r\n                })}\r\n            />\r\n        </ContainerWrapper>\r\n    </>\r\n}\r\n\r\nexport default ImportedContacts;","import {useState} from \"react\";\r\nimport {Button, Col, Divider, Modal, Row, Select, Upload, message, Alert} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setSubscriberManagementDrawerState} from \"../../features/subscribers/subscriberManagementDrawerSlice\";\r\nimport Tags from \"../../components/Tags\";\r\nimport styled from 'styled-components'\r\nimport * as React from \"react\";\r\nimport {UploadOutlined} from \"@ant-design/icons\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport ImportedContacts from \"./importComponents/ImportedContacts\";\r\nimport {callApi} from \"../../utils/apiHelper\";\r\nimport {setShouldReload} from \"../../features/subscribers/reloadAudienceReportSlice\";\r\n\r\nconst subscriberType = Object.freeze({\r\n    NotSubscribed: 0,\r\n    Subscribed: 1\r\n})\r\n\r\nconst subscriberTypeOptions = Object.freeze([{\r\n    id: subscriberType.Subscribed,\r\n    name:\"Subscribers\"\r\n}, {\r\n    id: subscriberType.NotSubscribed,\r\n    name: \"Not Subscribers\"\r\n}])\r\n\r\nconst Text = styled.span`\r\n    // color: #1a3353;\r\n    font-weight: 500;\r\n    font-size: 15px;\r\n`;\r\n\r\nconst ImportSubscribers = () => {\r\n    const state = useSelector(x => x.subscriberManagementDrawer)\r\n    const subscribersEndState = useSelector(x => x.importSubscribersTransformedData)\r\n    const tags = useSelector(x => x.tags)\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false);\r\n    const [importErrorMessage, setImportErrorMessage] = useState('')\r\n    const [model, setModel] = useState({\r\n        areSubscribers: subscriberType.Subscribed,\r\n        importedSubscribers: []\r\n    })\r\n\r\n    const { getAccessTokenSilently } = useAuth0();\r\n\r\n    const CSVToArray = ( strData, strDelimiter ) => {\r\n        strDelimiter = (strDelimiter || \",\");\r\n        \r\n        let objPattern = new RegExp((\"(\\\\\" + strDelimiter + \"|\\\\r?\\\\n|\\\\r|^)\" + \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" + \"([^\\\"\\\\\" + strDelimiter + \"\\\\r\\\\n]*))\" ),\"gi\");\r\n        let arrData = [[]];\r\n        let arrMatches = null;\r\n\r\n        while (arrMatches = objPattern.exec( strData )){\r\n            let strMatchedDelimiter = arrMatches[ 1 ];\r\n            \r\n            if (strMatchedDelimiter.length && strMatchedDelimiter !== strDelimiter){\r\n                arrData.push( [] );\r\n            }\r\n\r\n            let strMatchedValue;\r\n            \r\n            if (arrMatches[ 2 ]){\r\n                strMatchedValue = arrMatches[ 2 ].replace(new RegExp( \"\\\"\\\"\", \"g\" ), \"\\\"\");\r\n            } else {\r\n                strMatchedValue = arrMatches[ 3 ];\r\n            }\r\n            \r\n            arrData[ arrData.length - 1 ].push( strMatchedValue );\r\n        }\r\n        \r\n        return( arrData );\r\n    }\r\n\r\n    const props = {\r\n        name: 'file',\r\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n        headers: {\r\n            authorization: 'authorization-text',\r\n        },\r\n        beforeUpload(file) {\r\n            const isCsv = file.type === 'text/csv';\r\n            if (!isCsv) {\r\n                message.error(`${file.name} is not a valid csv file`);\r\n            }\r\n\r\n            return isCsv || Upload.LIST_IGNORE;\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status === 'removed'){\r\n                message.success(`${info.file.name} was removed`);\r\n                setModel({\r\n                    ...model,\r\n                    importedSubscribers: []\r\n                })\r\n                return;     \r\n            }\r\n            \r\n            if (info.file.status !== 'uploading') {\r\n                message.info(`${info.file.name} is being processed`);\r\n            }\r\n            if (info.file.status === 'done') {\r\n                message.success(`${info.file.name} file uploaded successfully`);\r\n            } else if (info.file.status === 'error') {\r\n                message.error(`${info.file.name} file upload failed.`);\r\n            }\r\n            \r\n            const fileReader = new FileReader()\r\n            fileReader.readAsText(info.file.originFileObj)\r\n            fileReader.onloadend = (fileResult) => {\r\n                const recordsArray = CSVToArray(fileResult.target.result);\r\n                const headers = recordsArray[0];\r\n                let records = [];\r\n                \r\n                for (let i = 1; i < recordsArray.length; i++){\r\n                    if (recordsArray[i][0] === ''){\r\n                        continue;\r\n                    }\r\n                    \r\n                    let obj = {};\r\n\r\n                    headers.forEach((header, headerIndex) => {\r\n                        obj[header] = recordsArray[i][headerIndex];\r\n                    })\r\n                    \r\n                    records.push(obj);\r\n                }\r\n\r\n                setImportErrorMessage('')\r\n                setModel({\r\n                    ...model,\r\n                    importedSubscribers: records\r\n                })\r\n            }\r\n        },\r\n    };\r\n    \r\n    const handleOk = async () => {\r\n        // setLoading(true);\r\n        let subscribersListForSave = [];\r\n        \r\n        subscribersEndState.imported.forEach(importedSubscriber => {\r\n            let obj = {\r\n                extra: {}\r\n            }\r\n            for (let key in importedSubscriber){\r\n                const modifiedFieldValue = subscribersEndState.modifiedFieldsValues[key];\r\n                \r\n                if (modifiedFieldValue){\r\n                    if (modifiedFieldValue === 'email'){\r\n                        obj['email'] = importedSubscriber[key];\r\n                    }\r\n\r\n                    if (modifiedFieldValue === 'ipAddress'){\r\n                        obj['ipAddress'] = importedSubscriber[key];\r\n                    }\r\n\r\n                    if (modifiedFieldValue === 'firstName'){\r\n                        obj['firstName'] = importedSubscriber[key];\r\n                    }\r\n\r\n                    if (modifiedFieldValue === 'lastName'){\r\n                        obj['lastName'] = importedSubscriber[key];\r\n                    }\r\n\r\n                    if (modifiedFieldValue === 'phoneNumber'){\r\n                        obj['phoneNumber'] = importedSubscriber[key];\r\n                    }\r\n\r\n                    if (modifiedFieldValue === 'birthDate'){\r\n                        obj['birthDate'] = importedSubscriber[key];\r\n                    }\r\n\r\n                    if (modifiedFieldValue === 'tags'){\r\n                        console.log(importedSubscriber[key])\r\n                        const splited = importedSubscriber[key].split(',')\r\n                        const checked = splited[0] === '' ? [] : splited;\r\n                        \r\n                        obj['tags'] = checked;\r\n                    }\r\n                    \r\n                    if (modifiedFieldValue === 'leaveAsIs'){\r\n                        obj.extra[key] = importedSubscriber[key];\r\n                    }\r\n                }\r\n            }\r\n            \r\n            subscribersListForSave.push({\r\n                ...obj,\r\n                extra: JSON.stringify(obj.extra)\r\n            })\r\n        })\r\n        \r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/subscribers/importSubscribers`,\r\n            method: 'post',\r\n            request: {\r\n                areSubscribers: model.areSubscribers,\r\n                subscribers: subscribersListForSave,\r\n                tags: tags\r\n            },\r\n            successCallback: (response) => {\r\n                dispatch(setShouldReload({reload: true}))\r\n                setLoading(false);\r\n                \r\n                if (response.isSuccess){\r\n                    dispatch(setSubscriberManagementDrawerState({\r\n                        ...state,\r\n                        importOpened: false\r\n                    }))   \r\n                }else {\r\n                    setImportErrorMessage(response.errorMessage)\r\n                }\r\n            },\r\n            errorCallback: () => { }\r\n        })\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        dispatch(setSubscriberManagementDrawerState({\r\n            ...state,\r\n            importOpened: false\r\n        }))\r\n    };\r\n\r\n    // const RowsValidity = () => {\r\n    //     let valid = 0;\r\n    //     let invalid = 0;\r\n    //    \r\n    //     model.importedSubscribers.forEach(x => {\r\n    //         const isValidEmail = validateEmail(x.email)\r\n    //         if (isValidEmail){\r\n    //             valid = valid + 1\r\n    //         }else{\r\n    //             invalid = invalid + 1\r\n    //         }\r\n    //     })\r\n    //     return <>\r\n    //         <Row>\r\n    //             <Col span={24}>\r\n    //                 <span>Valid: {valid}</span>\r\n    //             </Col>\r\n    //         </Row>\r\n    //         <Row>\r\n    //             <Col span={24}>\r\n    //                 <span>Invalid: {invalid}</span>\r\n    //             </Col>\r\n    //         </Row>\r\n    //     </>\r\n    // }\r\n    \r\n    return <>\r\n        <Modal\r\n            visible={state.importOpened}\r\n            title=\"Import Contacts\"\r\n            width={900}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            footer={[\r\n                <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}>\r\n                    Continue\r\n                </Button>,\r\n            ]}>\r\n            <Row>\r\n                <Col style={{marginTop: 3}} span={11}>\r\n                    <Text>The contacts you import are:</Text>\r\n                </Col>\r\n                <Col span={10}>\r\n                    <Select\r\n                        style={{width: '100%'}}\r\n                        placeholder=\"Is Subscriber\"\r\n                        onChange={val => setModel({\r\n                            ...model,\r\n                            areSubscribers: val\r\n                        })}\r\n                        value={model.areSubscribers}>\r\n                        {subscriberTypeOptions.map((x) => <Select.Option key={x.id} value={x.id}>{x.name}</Select.Option>)}\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: 10}}>\r\n                <Col style={{marginTop: 3}} span={11}>\r\n                    <Text>The contacts relate to these tags:</Text>\r\n                </Col>\r\n                <Col span={10}>\r\n                    <Tags />\r\n                </Col>\r\n            </Row>\r\n            <Divider orientation=\"left\" plain>Import</Divider>\r\n            <Row style={{marginTop: 10}}>\r\n                <Col span={10}>\r\n                    <Upload {...props}>\r\n                        <Button icon={<UploadOutlined />}>Upload</Button>\r\n                    </Upload>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: 10}}>\r\n                <Col span={24}>\r\n                    <ImportedContacts \r\n                        loading={loading} \r\n                        importedSubscribers={model.importedSubscribers} />\r\n                </Col>\r\n                <Col span={24}>\r\n                    {importErrorMessage.length > 0 ? \r\n                        <Alert \r\n                            style={{marginTop: 10}} \r\n                            type=\"error\" \r\n                            showIcon \r\n                            message=\"Error\" \r\n                            description={importErrorMessage} /> : ''}\r\n                </Col>\r\n                {/*<Col style={{marginTop: 10, marginLeft: 5}}>*/}\r\n                {/*    <RowsValidity />*/}\r\n                {/*</Col>*/}\r\n            </Row>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\nexport default ImportSubscribers;","import React, { useEffect, useState } from \"react\"\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport {Button, Col, Dropdown, Menu, Row, Select} from \"antd\";\r\nimport {callApi} from \"../utils/apiHelper\";\r\nimport {DragOutlined, FormOutlined, PlusOutlined, RedoOutlined} from \"@ant-design/icons\";\r\n\r\nconst menu = (\r\n    <Menu\r\n        items={[\r\n            {\r\n                key: '1',\r\n                icon: <FormOutlined />,\r\n                label: (\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/simple-template\">\r\n                        Create a simple template\r\n                    </a>\r\n                ),\r\n            },\r\n            {\r\n                key: '2',\r\n                icon: <DragOutlined />,\r\n                label: (\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/drag-and-drop   \">\r\n                        Drag & Drop Builder\r\n                    </a>\r\n                ),\r\n            }\r\n        ]}\r\n    />\r\n);\r\n\r\nconst EmailTemplateSelect = (props) => {\r\n    const {\r\n        value,\r\n        handler,\r\n        disabled,\r\n        valid\r\n    } = props\r\n\r\n    const [source, setSource] = useState([])\r\n    const { getAccessTokenSilently } = useAuth0();\r\n\r\n    const getTemplates = async () => {\r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/emailTemplates/getTemplates`,\r\n            method: 'get',\r\n            successCallback: response => {\r\n                const data = response.templates.map(template => {\r\n                    return {\r\n                        id: template.id,\r\n                        name: template.name\r\n                    }\r\n                })\r\n                setSource(data)\r\n            },\r\n            errorCallback: (error) => {\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => getTemplates(), [])\r\n\r\n    return <>\r\n        <Row gutter={[16,16]}>\r\n            <Col span={20}>\r\n                <Select\r\n                    style={{width: '100%', textAlign: 'left'}}\r\n                    placeholder=\"Select template...\"\r\n                    disabled={disabled}\r\n                    onChange={handler}\r\n                    value={value}\r\n                    status={valid ? '' : 'error'}>\r\n                    {source.map(x => <Select.Option key={x.id} value={x.id}>{x.name}</Select.Option>)}\r\n                </Select>\r\n            </Col>\r\n            <Col span={4}>\r\n                <Button size=\"small\" style={{float: 'left', marginTop: '5%'}} shape=\"circle\" onClick={async () => await getTemplates()} icon={<RedoOutlined />}></Button>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col span={2}>\r\n                <Dropdown\r\n                    overlay={menu}\r\n                    placement=\"bottom\"\r\n                    arrow={{\r\n                        pointAtCenter: true,\r\n                    }}\r\n                >\r\n                    <Button type=\"link\" icon={<PlusOutlined />}>Add email template</Button>\r\n                </Dropdown>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default EmailTemplateSelect","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = null;\r\n\r\nexport const sendingEmailsSlice = createSlice({\r\n    name: 'sendingEmails',\r\n    initialState: () => initialState,\r\n    reducers: {\r\n        updateSendingEmails: (state, action) => {\r\n            debugger\r\n            if (action.payload)\r\n                state = action.payload;\r\n            else\r\n                state = null\r\n            \r\n            return state;\r\n        },\r\n        resetSendingEmails: (state, action) => {\r\n            state = null;\r\n            return state;\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    updateSendingEmails,\r\n    resetSendingEmails\r\n} = sendingEmailsSlice.actions\r\nexport default sendingEmailsSlice.reducer","import {useDispatch, useSelector} from \"react-redux\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {getConfig} from \"../config\";\r\nimport {Button, Col, Row, Select} from \"antd\";\r\nimport {updateSendingEmails} from \"../features/sendingEmailsSlice\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {PlusOutlined, RedoOutlined} from \"@ant-design/icons\";\r\n\r\nconst SendingEmail = ({customReload, status, disabled}) => {\r\n    const dispatch = useDispatch();\r\n    const selectedSendingEmails = useSelector(selector => selector.sendingEmails)\r\n    const [sendingEmailsSource, setSendingEmailsSource] = useState([])\r\n    const {getAccessTokenSilently} = useAuth0();\r\n    const history = useHistory()\r\n\r\n    const config = getConfig()\r\n\r\n    const callApi = async () => {\r\n        const accessToken = await getAccessTokenSilently({\r\n            audience: config.audience,\r\n            scope: \"read:current_user\",\r\n        });\r\n\r\n        fetch(`${process.env.REACT_APP_API_BASE}/sendingEmails/all`, {\r\n            method: 'get',\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                setSendingEmailsSource(response.data.sendingEmails)\r\n            })\r\n            .catch(x => console.log(x.message))\r\n    }\r\n\r\n    useEffect(() => callApi(), [])\r\n\r\n    useEffect(() => {\r\n        if (customReload){\r\n            callApi()\r\n        }\r\n    }, [customReload])\r\n\r\n    return <>\r\n        <Row gutter={[16,16]}>\r\n            <Col span={20}>\r\n                <Select\r\n                    disabled={disabled}\r\n                    status={status ? status : \"\"}\r\n                    style={{ width: '100%', textAlign: 'left' }}\r\n                    placeholder=\"Select sending email ...\"\r\n                    value={selectedSendingEmails}\r\n                    allowClear\r\n                    onChange={(selected) => {\r\n                        dispatch(updateSendingEmails(selected))\r\n                    }}\r\n                >\r\n                    {sendingEmailsSource.map((x, index) => {\r\n                        if (x.status === 1){\r\n                            return <Select.Option value={x.id} key={index}>{x.email}</Select.Option>;\r\n                        }\r\n                    })}\r\n                </Select>\r\n            </Col>\r\n            <Col span={4}>\r\n                <Button size=\"small\" style={{float: 'left', marginTop: '5%'}} shape=\"circle\" onClick={async () => await callApi()} icon={<RedoOutlined />}></Button>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col span={2}>\r\n                <Button icon={<PlusOutlined />} style={{float: 'left'}} onClick={() => window.open('/profile?tab=sendingSettings','_blank')} type=\"link\">Add sending email</Button>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default SendingEmail;","import * as React from 'react'\r\nimport {Button, Col, Drawer, Input, Row} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Tags from \"../../components/Tags\";\r\nimport {callApi} from \"../../utils/apiHelper\";\r\nimport {useState} from \"react\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport validateEmail from \"../../utils/ValueValidations\";\r\nimport {setSubscriberManagementDrawerState} from \"../../features/subscribers/subscriberManagementDrawerSlice\";\r\nimport EmailTemplateSelect from \"../../components/EmailTemplateSelect\";\r\nimport SendingEmail from \"../../components/SendingEmail\";\r\n\r\nconst SendEmailsByTags = () => {\r\n    const dispatch = useDispatch()\r\n    const state = useSelector(selector => selector.subscriberManagementDrawer)\r\n    const tagsState = useSelector(selector => selector.tags)\r\n    const sendingEmailState = useSelector(selector => selector.sendingEmails)\r\n    const {getAccessTokenSilently} = useAuth0();\r\n    const [loading, setLoading] = useState(false)\r\n    const [model, setModel] = useState({\r\n        subject: '',\r\n        senderName: '',\r\n        senderEmail: '',\r\n        emailTemplateId: null,\r\n    })\r\n    const [validations, setValidations] = useState({\r\n        subject: true,\r\n        senderEmail: true,\r\n        emailTemplateId: true,\r\n        tags: true\r\n    })\r\n\r\n    const onClose = () => {\r\n        dispatch(setSubscriberManagementDrawerState({\r\n            ...state,\r\n            sendEmailsByTags: false\r\n        }))\r\n    }\r\n\r\n    const areFieldsValid = () => {\r\n        let currentValidationResult = {\r\n            subject: true,\r\n            senderEmail: true,\r\n            emailTemplateId: true,\r\n            tags: true\r\n        };\r\n\r\n        if (!model.subject || model.subject.length < 3) {\r\n            currentValidationResult.subject = false;\r\n        }\r\n\r\n        if (!model.emailTemplateId || model.emailTemplateId.length < 3) {\r\n            currentValidationResult.emailTemplateId = false;\r\n        }\r\n        \r\n        if (tagsState.length <= 0){\r\n            currentValidationResult.tags = false;\r\n        }\r\n\r\n        setValidations(currentValidationResult)\r\n        return !Object.values(currentValidationResult).some(x => x == false);\r\n    }\r\n\r\n    const onUpdate = async () => {\r\n        debugger\r\n        if (!areFieldsValid()) {\r\n            return;\r\n        }\r\n        \r\n        setLoading(true)\r\n        \r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/emails/sendMassEmails`,\r\n            method: 'post',\r\n            request: {\r\n                subject: model.subject,\r\n                senderEmail: model.senderEmail,\r\n                replyToSendingEmail: sendingEmailState,\r\n                senderName: model.senderName,\r\n                emailTemplateId: model.emailTemplateId,\r\n                tags: tagsState\r\n            },\r\n            successCallback: () => {\r\n                setLoading(false)\r\n                onClose()\r\n            },\r\n            errorCallback: (err) => {\r\n                setLoading(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Drawer width=\"900\" title=\"Send Emails By Tags\" placement=\"right\" onClose={onClose} visible={state.sendEmailsByTags}>\r\n                <Row gutter={[16, 16]}>\r\n                    <Col span={24}>\r\n                        <Input\r\n                            status={validations.subject ? '': 'error'}\r\n                            onChange={event => setModel({\r\n                                ...model,\r\n                                subject: event.target.value\r\n                            })}\r\n                            value={model.subject} placeholder=\"Subject\"/>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                    <Col span={12}>\r\n                        <Input\r\n                            onChange={event => setModel({\r\n                                ...model,\r\n                                senderName: event.target.value\r\n                            })}\r\n                            value={model.senderName} placeholder=\"Sender Name\"/>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <SendingEmail />\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                    <Col span={24}>\r\n                        <EmailTemplateSelect\r\n                            disabled={false}\r\n                            valid={validations.emailTemplateId}\r\n                            value={model.emailTemplateId}\r\n                            handler={val => {\r\n                                setModel({\r\n                                    ...model,\r\n                                    emailTemplateId: val\r\n                                })\r\n                            }}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                    <Col span={24}>\r\n                        <Tags status={validations.tags ? '' : 'error'} />\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                    <Col span={24}>\r\n                        <Button\r\n                            onClick={onUpdate}\r\n                            style={{float: 'right'}}\r\n                            type=\"primary\"\r\n                            loading={loading}>Send</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Drawer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SendEmailsByTags","import * as React from 'react'\r\nimport {Button, Col, Drawer, Input, Row} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {callApi} from \"../../utils/apiHelper\";\r\nimport {useState} from \"react\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport validateEmail from \"../../utils/ValueValidations\";\r\nimport {setSubscriberManagementDrawerState} from \"../../features/subscribers/subscriberManagementDrawerSlice\";\r\nimport EmailTemplateSelect from \"../../components/EmailTemplateSelect\";\r\nimport SendingEmail from \"../../components/SendingEmail\";\r\n\r\nconst SendEmailsForSubscribers = ({selectedSubscribers}) => {\r\n    const dispatch = useDispatch()\r\n    const state = useSelector(selector => selector.subscriberManagementDrawer)\r\n    const sendingEmailState = useSelector(selector => selector.sendingEmails)\r\n    const {getAccessTokenSilently} = useAuth0();\r\n    const [loading, setLoading] = useState(false)\r\n    const [model, setModel] = useState({\r\n        subject: '',\r\n        senderName: '',\r\n        senderEmail: '',\r\n        emailTemplateId: null\r\n    })\r\n    const [validations, setValidations] = useState({\r\n        subject: true,\r\n        emailTemplateId: true\r\n    })\r\n\r\n    const onClose = () => {\r\n        dispatch(setSubscriberManagementDrawerState({\r\n            ...state,\r\n            sendEmailsForSubscribers: false\r\n        }))\r\n    }\r\n\r\n    const areFieldsValid = () => {\r\n        let currentValidationResult = {\r\n            subject: true,\r\n            emailTemplateId: true\r\n        };\r\n\r\n        if (!model.subject || model.subject.length < 3) {\r\n            currentValidationResult.subject = false;\r\n        }\r\n\r\n        if (!model.emailTemplateId || model.emailTemplateId.length < 3) {\r\n            currentValidationResult.emailTemplateId = false;\r\n        }\r\n\r\n        setValidations(currentValidationResult)\r\n        return !Object.values(currentValidationResult).some(x => x == false);\r\n    }\r\n\r\n    const onUpdate = async () => {\r\n        if (!areFieldsValid()) {\r\n            return;\r\n        }\r\n        \r\n        setLoading(true)\r\n        \r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/emails/sendMassEmails`,\r\n            method: 'post',\r\n            request: {\r\n                subject: model.subject,\r\n                senderEmail: model.senderEmail,\r\n                senderName: model.senderName,\r\n                emailTemplateId: model.emailTemplateId,\r\n                subscribers: selectedSubscribers,\r\n                replyToSendingEmail: sendingEmailState\r\n            },\r\n            successCallback: () => {\r\n                setLoading(false)\r\n                onClose()\r\n            },\r\n            errorCallback: (err) => {\r\n                setLoading(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Drawer width=\"700\" title=\"Send Emails For Subscribers\" placement=\"right\" onClose={onClose} visible={state.sendEmailsForSubscribers}>\r\n                <Row gutter={[16, 16]}>\r\n                    <Col span={24}>\r\n                        <Input\r\n                            status={validations.subject ? '': 'error'}\r\n                            onChange={event => setModel({\r\n                                ...model,\r\n                                subject: event.target.value\r\n                            })}\r\n                            value={model.subject} placeholder=\"Subject\"/>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                    <Col span={12}>\r\n                        <Input\r\n                            onChange={event => setModel({\r\n                                ...model,\r\n                                senderName: event.target.value\r\n                            })}\r\n                            value={model.senderName} placeholder=\"Sender Name\"/>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <SendingEmail />\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                    <Col span={24}>\r\n                        <EmailTemplateSelect\r\n                            disabled={false}\r\n                            valid={validations.emailTemplateId}\r\n                            value={model.emailTemplateId}\r\n                            handler={val => {\r\n                                setModel({\r\n                                    ...model,\r\n                                    emailTemplateId: val\r\n                                })\r\n                            }}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                    <Col span={24}>\r\n                        <Button\r\n                            onClick={onUpdate}\r\n                            style={{float: 'right'}}\r\n                            type=\"primary\"\r\n                            loading={loading}>Send</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Drawer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SendEmailsForSubscribers","import React, {useEffect, useState} from \"react\"\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {ContainerWrapper} from \"../reportComponents/CampaignStyles\";\r\nimport {Button, Col, Row, Space, Table} from \"antd\";\r\nimport AudienceReportHeader from \"./components/audienceReportHeader\";\r\nimport {getAudienceColumns} from \"./logic/columns\";\r\nimport {callApi} from \"../utils/apiHelper\";\r\nimport DeleteDialog from \"../components/DeleteDialog\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setShouldReload} from \"../features/subscribers/reloadAudienceReportSlice\";\r\nimport {SendOutlined} from \"@ant-design/icons\";\r\nimport UpdateSubscriber from \"./components/updateSubscriber\";\r\nimport ImportSubscribers from \"./components/importSubscribers\";\r\nimport SendEmailsByTags from \"./components/sendEmailsByTags\";\r\nimport {setSubscriberManagementDrawerState} from \"../features/subscribers/subscriberManagementDrawerSlice\";\r\nimport SendEmailsForSubscribers from \"./components/sendEmailsForSubscribers\";\r\n\r\nconst Audience = () => {\r\n    const shouldReload = useSelector(x => {\r\n        return x.reloadAudienceReport.reload\r\n    });\r\n    const subscriberManagementState = useSelector(x => x.subscriberManagementDrawer);\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    const [audience, setAudience] = useState([]);\r\n    const [selectedSubscribers, setSelectedSubscribers] = useState([])\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [buttonsDisabled, setButtonsDisabled] = useState({\r\n        sendEmails: true,\r\n        sendEmailsByTags: false\r\n    })\r\n    const [page, setPage] = useState({\r\n        current: 1,\r\n        size: 10\r\n    });\r\n    \r\n    const {getAccessTokenSilently} = useAuth0();\r\n\r\n    const getAudience = async () => {        \r\n        setLoading(true)\r\n        \r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/subscribers/getSubscribers?currentPage=${page.current}&pageSize=${page.size}`,\r\n            method: 'get',\r\n            successCallback: (response) => {\r\n                setAudience(response.subscribers)\r\n                setTotalPages(response.totalPages)\r\n                setLoading(false)\r\n                dispatch(setShouldReload({reload: false}))\r\n            },\r\n            errorCallback: () => {}\r\n        })\r\n    }\r\n\r\n    const rowSelection = {\r\n        onChange: (selectedRowKeys) => {\r\n            if (selectedRowKeys.length){\r\n                setButtonsDisabled({\r\n                    sendEmails: false,\r\n                    sendEmailsByTags: true\r\n                })\r\n            } else {\r\n                setButtonsDisabled({\r\n                    sendEmails: true,\r\n                    sendEmailsByTags: false\r\n                })\r\n            }\r\n            \r\n            setSelectedSubscribers(selectedRowKeys)\r\n        },\r\n        getCheckboxProps: (record) => {\r\n            return {\r\n                name: record.id,\r\n            };\r\n        },\r\n    };\r\n    \r\n    useEffect(() => {\r\n        getAudience()\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        if (shouldReload){\r\n            getAudience()\r\n        }\r\n    }, [shouldReload, page.current])\r\n\r\n    useEffect(() => {\r\n        getAudience()\r\n    }, [page.current])\r\n\r\n    return <>\r\n        <ContainerWrapper>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <AudienceReportHeader />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Space>\r\n                <Col span={3}>\r\n                    <Button \r\n                        disabled={buttonsDisabled.sendEmailsByTags} \r\n                        icon={<SendOutlined />} \r\n                        type=\"default\" \r\n                        style={{float: 'left'}}\r\n                        onClick={() => {\r\n                            dispatch(setSubscriberManagementDrawerState({\r\n                                ...subscriberManagementState,\r\n                                sendEmailsByTags: true\r\n                            }))\r\n                        }}>\r\n                        Send Emails By Tags\r\n                    </Button>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Button \r\n                        disabled={buttonsDisabled.sendEmails} \r\n                        icon={<SendOutlined />} \r\n                        type=\"default\" \r\n                        style={{float: 'left'}}\r\n                        onClick={() => {\r\n                            dispatch(setSubscriberManagementDrawerState({\r\n                                ...subscriberManagementState,\r\n                                sendEmailsForSubscribers: true\r\n                            }))\r\n                        }}>\r\n                        Send Emails\r\n                    </Button>\r\n                </Col>\r\n                </Space>\r\n            </Row>\r\n            <Row style={{marginTop: 10}}>\r\n                <Col span={24}>\r\n                    <Table\r\n                        loading={loading}\r\n                        columns={getAudienceColumns()}\r\n                        dataSource={audience.map(x => {\r\n                            return {\r\n                                ...x,\r\n                                key: x.id\r\n                            }\r\n                        })}\r\n                        rowSelection={{\r\n                            type: 'checkbox',\r\n                            ...rowSelection\r\n                        }}\r\n                        pagination={{\r\n                            current: page.current,\r\n                            onChange: (pageNumber) => setPage({...page, current: pageNumber}),\r\n                            total: totalPages,\r\n                            pageSize: 10,\r\n                            showSizeChanger: false,\r\n                            showQuickJumper: true\r\n                        }}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </ContainerWrapper>\r\n        <DeleteDialog />\r\n        <UpdateSubscriber />\r\n        <ImportSubscribers />\r\n        <SendEmailsByTags />\r\n        <SendEmailsForSubscribers selectedSubscribers={selectedSubscribers} />\r\n    </>\r\n}\r\n\r\nexport default Audience","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n      display: 'flex',\r\n      padding: theme.spacing(0, 0, 0, 38),\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    main: {\r\n      padding: theme.spacing(0, 0, 0, 30),\r\n    },\r\n    save: {\r\n      backgroundColor: '#009be5',\r\n      color: 'white',\r\n      margin: theme.spacing(2.5, 0, 0, 20)\r\n    },\r\n    name: {\r\n      margin: theme.spacing(0, 148, 1, 0)\r\n    },\r\n    fieldsContainer: {\r\n      margin: theme.spacing(10, 0, 0, 28)\r\n    }\r\n  }));\r\n\r\n  export default useStyles","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit\r\n  },\r\n\r\n  input: {\r\n    display: 'none',\r\n  },\r\n\r\n  circularProgress: {\r\n    marginLeft: 0,\r\n\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n\r\n});\r\n\r\nfunction ContainedButtons(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div>\r\n      <Button {...props} disabled={props.loading} style={{color: 'white'}}>\r\n        {props.loading ? <CircularProgress style={{color: 'white'}} className={classes.circularProgress} size={20}/> : ''}\r\n        {props.text}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nContainedButtons.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ContainedButtons);","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    text-align: center;\r\n    background-color: #ECEFF1;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    text-align: center;\r\n    font-weight: lighter;\r\n    font-size: 1.3em;\r\n`;\r\n\r\nconst Image = styled.img`\r\n    width: 5%;\r\n    margin-left: ;.5%\r\n`;\r\n\r\nconst MailgenElement = () => {\r\n    const getLocation = () => window.location.protocol + '//' + window.location.host + '/mailgen-logo.svg';\r\n    \r\n    return <>\r\n        <Container >\r\n            <Text>Powered by </Text>\r\n            <Image src={getLocation()} />\r\n            <Text>Mailgen</Text>\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default MailgenElement","import React from \"react\";\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    text-align: center;\r\n    color: #90A4AE;\r\n    width: 23.5%;\r\n    height: 100px;\r\n    border: 1px solid black;\r\n    display: inline-block;\r\n    margin-left: 0.5%;\r\n    margin-right: 1%;\r\n    margin-top: 1.5%;\r\n    border-color: #90A4AE;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst InnerContainer = styled.div`\r\n    margin-top: 10%\r\n`;\r\n\r\nconst Text = styled.div`\r\n    font-weight: bold;\r\n    font-size: 2.5em;\r\n`;\r\nconst Title = styled.div`\r\n    font-size: 1.3em;\r\n`;\r\n\r\nconst TitleElement = (props) => {\r\n    const {id, onDragStart} = props;\r\n\r\n    return <>\r\n        <Container id={id} draggable=\"true\" onDragStart={onDragStart}>\r\n            <InnerContainer>\r\n                <Text>H1</Text>\r\n                <Title>Title</Title>\r\n            </InnerContainer>\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default TitleElement","import React from \"react\";\r\nimport ConnectWithoutContactIcon from '@mui/icons-material/ConnectWithoutContact';\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    text-align: center;\r\n    color: #90A4AE;\r\n    width: 23.5%;\r\n    height: 100px;\r\n    border: 1px solid black;\r\n    display: inline-block;\r\n    margin-left: 0.5%;\r\n    margin-right: 1%;\r\n    margin-top: 1.5%;\r\n    border-color: #90A4AE;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst InnerContainer = styled.div`\r\n    margin-top: 10%\r\n`;\r\n\r\nconst Text = styled.div`\r\n    font-weight: bold;\r\n    font-size: 2.5em;\r\n`;\r\nconst Title = styled.div`\r\n    font-size: 1.3em;\r\n`;\r\n\r\nconst SocialElement = (props) => {\r\n    const {id, onDragStart} = props;\r\n\r\n    return <>\r\n        <Container id={id} onDragStart={onDragStart} draggable=\"true\">\r\n            <InnerContainer>\r\n                <ConnectWithoutContactIcon style={{fontSize: '3.2em'}}/>\r\n                <Title >Social</Title>\r\n            </InnerContainer>\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default SocialElement","import React from \"react\";\r\nimport ImageIcon from '@mui/icons-material/Image';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    text-align: center;\r\n    color: #90A4AE;\r\n    width: 23.5%;\r\n    height: 100px;\r\n    border: 1px solid black;\r\n    display: inline-block;\r\n    margin-left: 0.5%;\r\n    margin-right: 1%;\r\n    margin-top: 1.5%;\r\n    border-color: #90A4AE;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst InnerContainer = styled.div`\r\n    margin-top: 10%;\r\n`;\r\n\r\nconst Text = styled.div`\r\n    font-size: 1.3em;\r\n`;\r\n\r\nconst ImageElement = (props) => {\r\n    const {id, onDragStart} = props;\r\n\r\n    return <>\r\n        <Container id={id} onDragStart={onDragStart} draggable=\"true\">\r\n            <InnerContainer>\r\n                <ImageIcon style={{fontSize: '3.2em'}}/>\r\n                <Text>Image</Text>\r\n            </InnerContainer>\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default ImageElement;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    text-align: center;\r\n    color: #90A4AE;\r\n    width: 23.5%;\r\n    height: 100px;\r\n    border: 1px solid black;\r\n    display: inline-block;\r\n    margin-left: 0.5%;\r\n    margin-right: 1%;\r\n    margin-top: 1.5%;\r\n    border-color: #90A4AE;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst InnerContainer = styled.div`\r\n    margin-top: 35%;\r\n`;\r\n\r\nconst Text = styled.div`\r\n    font-size: 1.3em;\r\n`;\r\n\r\nconst HorizontalLine = styled.hr`\r\n    width: 70%; \r\n    border: none; \r\n    background-color: #90A4AE; \r\n    height: 7px; \r\n    border-radius: 10px;\r\n`;\r\n\r\nconst DividerElement = (props) => {\r\n    const {id, onDragStart} = props;\r\n\r\n    return <>\r\n        <Container id={id} onDragStart={onDragStart} draggable=\"true\">\r\n            <InnerContainer>\r\n                <HorizontalLine />\r\n                <Text>Divider</Text>\r\n            </InnerContainer>\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default DividerElement;","import React from \"react\";\r\nimport TitleElement from \"../Elements/TitleElement\";\r\nimport TextElement from \"../Elements/TextElement\";\r\nimport SocialElement from \"../Elements/SocialElement\";\r\nimport ImageElement from \"../Elements/ImageElement\";\r\nimport DividerElement from \"../Elements/DividerElement\";\r\n\r\nconst ElementsLayout = () => {\r\n\r\n    const drag = (ev) => {\r\n        ev.dataTransfer.setData(\"id\", ev.target.id);\r\n        ev.dataTransfer.setData(\"type\", \"element\")\r\n    }\r\n    \r\n    return <>\r\n        <div style={{float: 'left', width: '30%', height: '800px', background: '#ECEFF1', marginTop: '10px'}}>\r\n            <TitleElement\r\n                id={\"titleElement\"}\r\n                onDragStart={event => drag(event)} />\r\n            <TextElement\r\n                id={\"textElement\"}\r\n                onDragStart={event => drag(event)} />\r\n            <SocialElement\r\n                id={\"socialElement\"}\r\n                onDragStart={event => drag(event)} />\r\n            <ImageElement\r\n                id={\"imageElement\"}\r\n                onDragStart={event => drag(event)} />\r\n            <DividerElement\r\n                id={\"dividerElement\"}\r\n                onDragStart={event => drag(event)} />\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default ElementsLayout","import React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    border: 1px solid #90A4AE;\r\n    border-radius: 10px;\r\n    width: 90%;\r\n    height: 100px;\r\n    margin-left: 5%;\r\n    margin-top: 3%;\r\n    background-color: white;\r\n    padding-top: 10px;\r\n`;\r\n\r\nconst InnerContainer = styled.div`\r\n    border: 1.5px dashed #90A4AE;\r\n    border-radius: 10px;\r\n    width: 42%;\r\n    height: 50%;\r\n    margin-left: 5%;\r\n    margin-top: 3%;\r\n    background-color: rgb(236, 239, 241);\r\n`;\r\n\r\nconst DoubleLayout = (props) => {\r\n    const {id, onDragStart} = props;\r\n    \r\n    return <>\r\n        <Container id={id} onDragStart={event => onDragStart(event)}>\r\n            <InnerContainer />\r\n            <InnerContainer />\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default DoubleLayout","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    border: 1px solid #90A4AE;\r\n    border-radius: 10px;\r\n    width: 90%;\r\n    height: 100px;\r\n    margin-left: 5%;\r\n    margin-top: 3%;\r\n    background-color: white;\r\n    padding-top: 10px;\r\n    position: relative;\r\n`;\r\n\r\nconst InnerContainer = styled.div`\r\n    border: 1.5px dashed #90A4AE;\r\n    border-radius: 10px;\r\n    width: 90%;\r\n    height: 50%;\r\n    margin-left: 5%;\r\n    margin-top: 3%;\r\n    background-color: rgb(236, 239, 241);\r\n`;\r\n\r\nconst Mask = styled.div`\r\n    position: absolute;\r\n    color: transparent;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst SingleLayout = (props) => {\r\n    const {id, onDragStart} = props;\r\n    \r\n    return <>\r\n        <Container id={id} onDragStart={event => onDragStart(event)}>\r\n            {/*<Mask />*/}\r\n            <InnerContainer />\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default SingleLayout","import React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    border: 1px solid #90A4AE;\r\n    border-radius: 10px;\r\n    width: 90%;\r\n    height: 100px;\r\n    margin-left: 5%;\r\n    margin-top: 3%;\r\n    background-color: white;\r\n    padding-top: 10px;\r\n`;\r\n\r\nconst InnerContainer = styled.div`\r\n    border: 1.5px dashed #90A4AE;\r\n    border-radius: 10px;\r\n    width: 27%;\r\n    height: 50%;\r\n    margin-left: 5%;\r\n    margin-top: 3%;\r\n    background-color: rgb(236, 239, 241);\r\n`;\r\n\r\nconst TripleLayout = (props) => {\r\n    const {id, onDragStart} = props;\r\n\r\n    return <>\r\n        <Container id={id} onDragStart={event => onDragStart(event)}>\r\n            <InnerContainer />\r\n            <InnerContainer />\r\n            <InnerContainer />\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default TripleLayout","import React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    border: 1px solid #90A4AE;\r\n    border-radius: 10px;\r\n    width: 90%;\r\n    height: 100px;\r\n    margin-left: 5%;\r\n    margin-top: 3%;\r\n    background-color: white;\r\n    padding-top: 10px;\r\n`;\r\n\r\nconst LeftInnerContainer = styled.div`\r\n    border: 1.5px dashed #90A4AE;\r\n    border-radius: 10px;\r\n    width: 60%;\r\n    height: 50%;\r\n    margin-left: 5%;\r\n    margin-top: 3%;\r\n    background-color: rgb(236, 239, 241);\r\n`;\r\n\r\nconst RightInnerContainer = styled.div`\r\n    border: 1.5px dashed #90A4AE;\r\n    border-radius: 10px;\r\n    width: 25%;\r\n    height: 50%;\r\n    margin-left: 5%;\r\n    margin-top: 3%;\r\n    background-color: rgb(236, 239, 241);\r\n`;\r\n\r\nconst DoubleLeftLongLayout = (props) => {\r\n    const {id, onDragStart} = props;\r\n\r\n    return <>\r\n        <Container id={id} onDragStart={event => onDragStart(event)}>\r\n            <LeftInnerContainer />\r\n            <RightInnerContainer />\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default DoubleLeftLongLayout","import React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    border: 1px solid #90A4AE;\r\n    border-radius: 10px;\r\n    width: 90%;\r\n    height: 100px;\r\n    margin-left: 5%;\r\n    margin-top: 3%;\r\n    background-color: white;\r\n    padding-top: 10px;\r\n`;\r\n\r\nconst LeftInnerContainer = styled.div`\r\n    border: 1.5px dashed #90A4AE;\r\n    border-radius: 10px;\r\n    width: 25%;\r\n    height: 50%;\r\n    margin-left: 5%;\r\n    margin-top: 3%;\r\n    background-color: rgb(236, 239, 241);\r\n`;\r\n\r\nconst RightInnerContainer = styled.div`\r\n    border: 1.5px dashed #90A4AE;\r\n    border-radius: 10px;\r\n    width: 60%;\r\n    height: 50%;\r\n    margin-left: 5%;\r\n    margin-top: 3%;\r\n    background-color: rgb(236, 239, 241);\r\n`;\r\n\r\nconst DoubleRightLongLayout = (props) => {\r\n    const {id, onDragStart} = props;\r\n\r\n    return <>\r\n        <Container id={id} onDragStart={event => onDragStart(event)}>\r\n            <LeftInnerContainer />\r\n            <RightInnerContainer />\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default DoubleRightLongLayout","import DoubleLayout from \"../Layouts/DoubleLayout\";\r\nimport SingleLayout from \"../Layouts/SingleLayout\";\r\nimport TripleLayout from \"../Layouts/TripleLayout\";\r\nimport DoubleLeftLongLayout from \"../Layouts/DoubleLeftLongLayout\";\r\nimport DoubleRightLongLayout from \"../Layouts/DoubleRightLongLayout\";\r\n\r\nconst RowsLayout = () => {\r\n    const drag = (ev) => {\r\n        ev.dataTransfer.setData(\"id\", ev.target.id);\r\n        ev.dataTransfer.setData(\"type\", 'rows');\r\n    }\r\n    \r\n    return <>\r\n        <div style={{float: 'left', width: '30%', height: '800px', background: '#ECEFF1', marginTop: '10px'}}>\r\n            <SingleLayout id=\"singleLayout\" onDragStart={drag} />\r\n            <DoubleLayout id=\"doubleLayout\" onDragStart={drag} />\r\n            <TripleLayout id=\"tripleLayout\" onDragStart={drag} />\r\n            <DoubleLeftLongLayout id=\"doubleLeftLongLayout\" onDragStart={drag} />\r\n            <DoubleRightLongLayout id=\"doubleRightLongLayout\" onDragStart={drag} />\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default RowsLayout","import ElementsLayout from \"./ElementsLayout\";\r\nimport RowsLayout from \"./RowsLayout\";\r\n\r\nconst BuilderStyleFactory = (props) => {\r\n    const {selectedOption} = props\r\n    \r\n    return <>\r\n        {selectedOption === 'elements' ? <ElementsLayout /> : <RowsLayout />}\r\n    </>\r\n}\r\n\r\nexport default BuilderStyleFactory","import React from 'react'\r\n\r\nconst builderData = {\r\n    elements: {\r\n    },\r\n    columns: {\r\n        'col-1': {\r\n            id: 'col-1',\r\n            parentId: 'single',\r\n            elementIds: []\r\n        }\r\n    },\r\n    columnOrder: [{\r\n        firstColId: 'col-1',\r\n    }]\r\n}\r\n\r\nexport default builderData","import React from 'react'\r\n\r\nconst TitleHtmlElement = () => {\r\n    return <>\r\n        <span>Hi there FIRST_NAME</span>        \r\n    </>\r\n}\r\n\r\nexport default TitleHtmlElement","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {Draggable} from \"react-beautiful-dnd\";\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    border: 1px solid black;\r\n    padding: 10px;\r\n    background-color: white;\r\n`;\r\n\r\nconst Element = (props) => {\r\n    const {element, index} = props;\r\n    \r\n    return <>\r\n        <Draggable index={index} draggableId={element.id.toString()}>\r\n            {(provided) => (\r\n                <Container\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}>\r\n                    {element.content}\r\n                </Container>\r\n            )}\r\n        </Draggable>\r\n    </>\r\n}\r\n\r\nexport default Element;","import React from 'react';\r\nimport {Draggable, Droppable} from \"react-beautiful-dnd\";\r\nimport Element from \"../Element\";\r\nimport styled from \"styled-components\";\r\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    display-direction: column;\r\n    justify-content: space-between;\r\n    border: 1px solid #90A4AE;\r\n    margin-bottom: 5px;\r\n    margin-top: 5px;\r\n    text-align: center;\r\n    position: relative;\r\n`;\r\n\r\nconst HtmlElementsList = styled.div`\r\n    flex-grow: 1;\r\n    min-height: 100px;\r\n`;\r\n\r\nconst Empty = styled.div`\r\n    color: #90A4AE;\r\n    font-size: 1.2em;\r\n    position: absolute;\r\n    top: 43%;\r\n    left: 48%;\r\n`;\r\n\r\nconst OptionsWrapper = styled.div`\r\n    width: 25px;\r\n    height: 25px;\r\n    position: absolute;\r\n    left: 100%;\r\n`;\r\n\r\nconst Handle = styled.div`\r\n`;\r\n\r\nconst Container = styled.div`\r\n\r\n`;\r\n\r\nconst HtmlSingleLayout = (props) => {\r\n    const {id, column, elements, index} = props;\r\n    \r\n    return <>\r\n        <Draggable draggableId={id} index={index}>\r\n            {provided => {\r\n                return <Wrapper\r\n                    {...provided.draggableProps}\r\n                    ref={provided.innerRef}>\r\n                    <OptionsWrapper>\r\n                        <Handle {...provided.dragHandleProps}>\r\n                            <DragIndicatorIcon />\r\n                        </Handle>\r\n                        <DeleteIcon />\r\n                    </OptionsWrapper>\r\n                    <Container id={id}>\r\n                        {!column.elementIds.length ? <Empty>Drop Here</Empty> : ''}\r\n                        <Droppable droppableId={id} type=\"column-drag\">\r\n                            {(provided) => (\r\n                                <HtmlElementsList {...provided.droppableProps} ref={provided.innerRef}>\r\n                                    {column.elementIds.map((elementId, index) => {\r\n                                        const element = elements[elementId];\r\n                                        return <Element key={element.id} index={index} element={element} />\r\n                                    })}\r\n                                    {provided.placeholder}\r\n                                </HtmlElementsList>\r\n                            )}\r\n                        </Droppable>\r\n                    </Container>\r\n                </Wrapper>\r\n            }}\r\n        </Draggable>\r\n    </>\r\n}\r\n\r\nexport default HtmlSingleLayout;","import React from 'react';\r\nimport {Draggable, Droppable} from \"react-beautiful-dnd\";\r\nimport Element from \"../Element\";\r\nimport styled from \"styled-components\";\r\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    position: relative;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    display-direction: column;\r\n    justify-content: space-between;\r\n    border: 1px solid #90A4AE;\r\n    width: ${props => props.width};\r\n    margin-bottom: 5px;\r\n    text-align: center;\r\n    position: relative;    \r\n`;\r\n\r\nconst HtmlElementsList = styled.div`\r\n    flex-grow: 1;\r\n    min-height: 100px;\r\n`;\r\n\r\nconst Empty = styled.div`\r\n    color: #90A4AE;\r\n    font-size: 1.2em;\r\n    position: absolute;\r\n    top: 43%;\r\n    left: 40%;\r\n`;\r\n\r\nconst OptionsWrapper = styled.div`\r\n    width: 25px;\r\n    height: 25px;\r\n    position: absolute;\r\n    left: 100%;\r\n`;\r\n\r\nconst Handle = styled.div`\r\n`;\r\n\r\nconst HtmlDoubleLayout = (props) => {\r\n    const {firstColumn, secondColumn, elements, index} = props;\r\n\r\n    const getContainerType = (column) => {\r\n        const hasLongWidthPart = firstColumn.lengthType === 'long' || secondColumn.lengthType === 'long';\r\n        const dimensions = {\r\n            normal: '49.7%',\r\n            long: '66.7%',\r\n            short: '33%'\r\n        }\r\n        \r\n        if (column.lengthType === 'long'){\r\n            return <>\r\n                <Container\r\n                    id={column.id}\r\n                    width={dimensions.long}>\r\n                    {!column.elementIds.length ? <Empty>Drop Here</Empty> : ''}\r\n                    <Droppable droppableId={column.id} type=\"column-drag\">\r\n                        {(provided) => (\r\n                            <HtmlElementsList {...provided.droppableProps} ref={provided.innerRef}>\r\n                                {column.elementIds.map((elementId, index) => {\r\n                                    const element = elements[elementId];\r\n                                    return <Element key={element.id} index={index} element={element}/>\r\n                                })}\r\n                                {provided.placeholder}\r\n                            </HtmlElementsList>\r\n                        )}\r\n                    </Droppable>\r\n                </Container>\r\n            </>\r\n        }\r\n        \r\n        return <>\r\n            <Container\r\n                id={column.id}\r\n                width={hasLongWidthPart ? dimensions.short : dimensions.normal}>\r\n                {!column.elementIds.length ? <Empty>Drop Here</Empty> : ''}\r\n                <Droppable droppableId={column.id} type=\"column-drag\">\r\n                    {(provided) => (\r\n                        <HtmlElementsList {...provided.droppableProps} ref={provided.innerRef}>\r\n                            {column.elementIds.map((elementId, index) => {\r\n                                const element = elements[elementId];\r\n                                return <Element key={element.id} index={index} element={element}/>\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </HtmlElementsList>\r\n                    )}\r\n                </Droppable>\r\n            </Container>\r\n        </>\r\n    }\r\n    \r\n    return <>\r\n        <Draggable draggableId={`${firstColumn.id}`} index={index}>\r\n            {provided => {\r\n                return <>\r\n                    <Wrapper {...provided.draggableProps}\r\n                             ref={provided.innerRef}>\r\n                        {getContainerType(firstColumn)}\r\n                        {getContainerType(secondColumn)}\r\n                        <OptionsWrapper>\r\n                            <Handle {...provided.dragHandleProps}>\r\n                                <DragIndicatorIcon />\r\n                            </Handle>\r\n                            <DeleteIcon />\r\n                        </OptionsWrapper>\r\n                    </Wrapper>\r\n                </>\r\n            }}\r\n        </Draggable>\r\n    </>\r\n}\r\n\r\nexport default HtmlDoubleLayout;","import React from 'react';\r\nimport {Draggable, Droppable} from \"react-beautiful-dnd\";\r\nimport Element from \"../Element\";\r\nimport styled from \"styled-components\";\r\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    position: relative;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    display-direction: column;\r\n    justify-content: space-between;\r\n    border: 1px solid #90A4AE;\r\n    width: 33.0%;\r\n    margin-bottom: 5px;\r\n    text-align: center;\r\n    position: relative;    \r\n`;\r\n\r\nconst HtmlElementsList = styled.div`\r\n    flex-grow: 1;\r\n    min-height: 100px;\r\n`;\r\n\r\nconst Empty = styled.div`\r\n    color: #90A4AE;\r\n    font-size: 1.2em;\r\n    position: absolute;\r\n    top: 43%;\r\n    left: 33%;\r\n`;\r\n\r\nconst OptionsWrapper = styled.div`\r\n    width: 25px;\r\n    height: 25px;\r\n    position: absolute;\r\n    left: 100%;\r\n`;\r\n\r\nconst Handle = styled.div`\r\n`;\r\n\r\nconst HtmlTripleLayout = (props) => {\r\n    const {firstColumn, secondColumn, thirdColumn, elements, index} = props;\r\n    \r\n    const renderElements = (column) => {\r\n        return column.elementIds.map((elementId, index) => {\r\n            const element = elements[elementId];\r\n            return <Element key={element.id} index={index} element={element}/>\r\n        });\r\n    }\r\n\r\n    return <>\r\n        <Draggable draggableId={`${firstColumn.id}`} index={index}>\r\n            {provided => {\r\n                return <>\r\n                    <Wrapper {...provided.draggableProps}\r\n                             ref={provided.innerRef}>\r\n                        <Container\r\n                            id={firstColumn.id}>\r\n                            {!firstColumn.elementIds.length ? <Empty>Drop Here</Empty> : ''}\r\n                            <Droppable droppableId={firstColumn.id} type=\"column-drag\">\r\n                                {(provided) => (\r\n                                    <HtmlElementsList {...provided.droppableProps} ref={provided.innerRef}>\r\n                                        {renderElements(firstColumn)}\r\n                                        {provided.placeholder}\r\n                                    </HtmlElementsList>\r\n                                )}\r\n                            </Droppable>\r\n                        </Container>\r\n                        <Container\r\n                            id={secondColumn.id}>\r\n                            {!secondColumn.elementIds.length ? <Empty>Drop Here</Empty> : ''}\r\n                            <Droppable droppableId={secondColumn.id} type=\"column-drag\">\r\n                                {(provided) => (\r\n                                    <HtmlElementsList {...provided.droppableProps} ref={provided.innerRef}>\r\n                                        {renderElements(secondColumn)}\r\n                                        {provided.placeholder}\r\n                                    </HtmlElementsList>\r\n                                )}\r\n                            </Droppable>\r\n                        </Container>\r\n                        <Container\r\n                            id={thirdColumn.id}>\r\n                            {!thirdColumn.elementIds.length ? <Empty>Drop Here</Empty> : ''}\r\n                            <Droppable droppableId={thirdColumn.id} type=\"column-drag\">\r\n                                {(provided) => (\r\n                                    <HtmlElementsList {...provided.droppableProps} ref={provided.innerRef}>\r\n                                        {renderElements(thirdColumn)}\r\n                                        {provided.placeholder}\r\n                                    </HtmlElementsList>\r\n                                )}\r\n                            </Droppable>\r\n                        </Container>\r\n                        <OptionsWrapper>\r\n                            <Handle {...provided.dragHandleProps}>\r\n                                <DragIndicatorIcon />\r\n                            </Handle>\r\n                            <DeleteIcon />\r\n                        </OptionsWrapper>\r\n                    </Wrapper>\r\n                </>\r\n            }}\r\n        </Draggable>\r\n    </>\r\n}\r\n\r\nexport default HtmlTripleLayout;","import {Guid} from \"js-guid\";\r\n\r\nclass DroppingRowsManager{\r\n    getSingleLayoutState(builderState){\r\n        const nextId = `col-${Guid.newGuid()}`;\r\n        const parentId = Guid.newGuid().StringGuid;\r\n\r\n        return {\r\n            ...builderState,\r\n            columns: {\r\n                ...builderState.columns,\r\n                [nextId]: {\r\n                    id: nextId,\r\n                    parentId: parentId,\r\n                    elementIds: []\r\n                }\r\n            },\r\n            columnOrder: [...builderState.columnOrder, {\r\n                firstColId: nextId\r\n            }]\r\n        }\r\n    }\r\n    \r\n    getDoubleLayoutState(builderState) {\r\n        const firstColId = `col-${Guid.newGuid()}`;\r\n        const secondColId = `col-${Guid.newGuid()}`;\r\n        const parentId = Guid.newGuid().StringGuid;\r\n\r\n        return {\r\n            ...builderState,\r\n            columns: {\r\n                ...builderState.columns,\r\n                [firstColId]: {\r\n                    id: firstColId,\r\n                    parentId: parentId,\r\n                    elementIds: []\r\n                },\r\n                [secondColId]: {\r\n                    id: secondColId,\r\n                    parentId: parentId,\r\n                    elementIds: []\r\n                }\r\n            },\r\n            columnOrder: [\r\n                ...builderState.columnOrder,\r\n                {\r\n                    firstColId: firstColId,\r\n                    secondColId: secondColId\r\n                }]\r\n        }\r\n    }\r\n    \r\n    getTrippleLayoutState(builderState) {\r\n        const firstColId = `col-${Guid.newGuid()}`;\r\n        const secondColId = `col-${Guid.newGuid()}`;\r\n        const thirdColId = `col-${Guid.newGuid()}`;\r\n        const parentId = Guid.newGuid().StringGuid;\r\n\r\n        return {\r\n            ...builderState,\r\n            columns: {\r\n                ...builderState.columns,\r\n                [firstColId]: {\r\n                    id: firstColId,\r\n                    parentId: parentId,\r\n                    elementIds: []\r\n                },\r\n                [secondColId]: {\r\n                    id: secondColId,\r\n                    parentId: parentId,\r\n                    elementIds: []\r\n                },\r\n                [thirdColId]: {\r\n                    id: thirdColId,\r\n                    parentId: parentId,\r\n                    elementIds: []\r\n                }\r\n            },\r\n            columnOrder: [\r\n                ...builderState.columnOrder,\r\n                {\r\n                    firstColId: firstColId,\r\n                    secondColId: secondColId,\r\n                    thirdColId: thirdColId\r\n                }]\r\n        }\r\n    }\r\n    \r\n    getDoubleLeftLongLayout(builderState) {\r\n        const firstColId = `col-${Guid.newGuid()}`;\r\n        const secondColId = `col-${Guid.newGuid()}`;\r\n        const parentId = Guid.newGuid().StringGuid;\r\n\r\n        return {\r\n            ...builderState,\r\n            columns: {\r\n                ...builderState.columns,\r\n                [firstColId]: {\r\n                    id: firstColId,\r\n                    parentId: parentId,\r\n                    lengthType: 'long',\r\n                    elementIds: []\r\n                },\r\n                [secondColId]: {\r\n                    id: secondColId,\r\n                    parentId: parentId,\r\n                    elementIds: []\r\n                }\r\n            },\r\n            columnOrder: [\r\n                ...builderState.columnOrder,\r\n                {\r\n                    firstColId: firstColId,\r\n                    secondColId: secondColId\r\n                }]\r\n        }\r\n    }\r\n    \r\n    getDoubleRightLongLayout(builderState){\r\n        const firstColId = `col-${Guid.newGuid()}`;\r\n        const secondColId = `col-${Guid.newGuid()}`;\r\n        const parentId = Guid.newGuid().StringGuid;\r\n\r\n        return {\r\n            ...builderState,\r\n            columns: {\r\n                ...builderState.columns,\r\n                [firstColId]: {\r\n                    id: firstColId,\r\n                    parentId: parentId,\r\n                    elementIds: []\r\n                },\r\n                [secondColId]: {\r\n                    id: secondColId,\r\n                    parentId: parentId,\r\n                    lengthType: 'long',\r\n                    elementIds: []\r\n                }\r\n            },\r\n            columnOrder: [\r\n                ...builderState.columnOrder,\r\n                {\r\n                    firstColId: firstColId,\r\n                    secondColId: secondColId\r\n                }]\r\n        }\r\n    }\r\n    \r\n    drop(ev, builderState){\r\n        const targetId = ev.dataTransfer.getData('id');\r\n\r\n        if (targetId === 'singleLayout') {\r\n            return this.getSingleLayoutState(builderState)\r\n        }\r\n\r\n        if (targetId === 'doubleLayout') {\r\n            return this.getDoubleLayoutState(builderState)\r\n        }\r\n\r\n        if (targetId === 'tripleLayout') {\r\n            return this.getTrippleLayoutState(builderState)\r\n        }\r\n\r\n        if (targetId === 'doubleLeftLongLayout') {\r\n            return this.getDoubleLeftLongLayout(builderState)\r\n        }\r\n\r\n        if (targetId === 'doubleRightLongLayout') {\r\n            return this.getDoubleRightLongLayout(builderState)\r\n        }\r\n    }\r\n}\r\n\r\nexport default DroppingRowsManager;","class DroppingElementsManager{\r\n    drop(ev) {\r\n        \r\n    }\r\n}\r\n\r\nexport default DroppingElementsManager;","import DroppingRowsManager from \"./DroppingRowsManager\";\r\nimport DroppingElementsManager from \"./DroppingElementsManager\";\r\n\r\nclass DroppingManager{    \r\n    constructor() {\r\n        this._droppingRowsManager = new DroppingRowsManager();\r\n        this._droppingElementsManager = new DroppingElementsManager();\r\n    }\r\n\r\n    drop (ev) {\r\n        ev.preventDefault();\r\n        const typeData = ev.dataTransfer.getData('type')\r\n\r\n        if (typeData === 'rows') this._droppingRowsManager.drop(ev)\r\n        if (typeData === 'element') this._droppingElementsManager.drop(ev)\r\n    }\r\n}\r\n\r\nexport default DroppingManager;","import React, {useEffect, useState} from 'react'\r\nimport MailgenElement from \"./Elements/MailgenElement\";\r\nimport {ToggleButton, ToggleButtonGroup} from \"@mui/lab\";\r\nimport BuilderStyleFactory from \"./BuilderStyleOptions/BuilderStyleFactory\";\r\nimport builderData from './builderData'\r\nimport {DragDropContext, Droppable} from \"react-beautiful-dnd\";\r\nimport TitleHtmlElement from \"./HtmlElements/TitleHtmlElement\";\r\nimport HtmlSingleLayout from \"./HtmlLayouts/HtmlSingleLayout\";\r\nimport styled from 'styled-components';\r\nimport {Guid} from \"js-guid\";\r\nimport HtmlDoubleLayout from \"./HtmlLayouts/HtmlDoubleLayout\";\r\nimport HtmlTripleLayout from \"./HtmlLayouts/HtmlTripleLayout\";\r\nimport DroppingManager from \"./Logic/DroppingManager\";\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%; \r\n    margin-top: 2%;\r\n    text-align: initial;\r\n`;\r\n\r\nconst BuilderStyleButtonsWrapper = styled.div`\r\n    text-align: center;\r\n    width: 30%;\r\n`;\r\n\r\nconst DropArea = styled.div`\r\n    width: 65%;\r\n    margin: 0 auto;\r\n    background-color: white;\r\n`;\r\n\r\nconst DropAreaWrapper = styled.div`\r\n    float: right;\r\n    width: 65%;\r\n    height: 800px;\r\n    margin-right: 4%;\r\n    margin-top: 0.6%;\r\n    background-color: #ECEFF1;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    \r\n`;\r\n\r\nconst EmailBuilder = () => {\r\n    let _droppingManager;\r\n    const [selectedStyleOption, setSelectedStyleOption] = React.useState('elements');\r\n    const [builderState, setBuilderState] = useState(builderData)\r\n\r\n    const handleStyleOptionChange = (event) => {\r\n        setSelectedStyleOption(event.target.value);\r\n    };\r\n\r\n    const groupBy = (xs, key) => {\r\n        return xs.reduce(function (rv, x) {\r\n            (rv[x[key]] = rv[x[key]] || []).push(x);\r\n            return rv;\r\n        }, {});\r\n    };\r\n\r\n    const allowDrop = (ev) => {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    const dropRows = (ev) => {\r\n        const targetId = ev.dataTransfer.getData('id');\r\n\r\n        if (targetId === 'singleLayout') {\r\n            const nextId = `col-${Guid.newGuid()}`;\r\n            const parentId = Guid.newGuid().StringGuid;\r\n\r\n            setBuilderState({\r\n                ...builderState,\r\n                columns: {\r\n                    ...builderState.columns,\r\n                    [nextId]: {\r\n                        id: nextId,\r\n                        parentId: parentId,\r\n                        elementIds: []\r\n                    }\r\n                },\r\n                columnOrder: [...builderState.columnOrder, {\r\n                    firstColId: nextId\r\n                }]\r\n            })\r\n        }\r\n\r\n        if (targetId === 'doubleLayout') {\r\n            const firstColId = `col-${Guid.newGuid()}`;\r\n            const secondColId = `col-${Guid.newGuid()}`;\r\n            const parentId = Guid.newGuid().StringGuid;\r\n\r\n            setBuilderState({\r\n                ...builderState,\r\n                columns: {\r\n                    ...builderState.columns,\r\n                    [firstColId]: {\r\n                        id: firstColId,\r\n                        parentId: parentId,\r\n                        elementIds: []\r\n                    },\r\n                    [secondColId]: {\r\n                        id: secondColId,\r\n                        parentId: parentId,\r\n                        elementIds: []\r\n                    }\r\n                },\r\n                columnOrder: [\r\n                    ...builderState.columnOrder,\r\n                    {\r\n                        firstColId: firstColId,\r\n                        secondColId: secondColId\r\n                    }]\r\n            })\r\n        }\r\n\r\n        if (targetId === 'tripleLayout') {\r\n            const firstColId = `col-${Guid.newGuid()}`;\r\n            const secondColId = `col-${Guid.newGuid()}`;\r\n            const thirdColId = `col-${Guid.newGuid()}`;\r\n            const parentId = Guid.newGuid().StringGuid;\r\n\r\n            setBuilderState({\r\n                ...builderState,\r\n                columns: {\r\n                    ...builderState.columns,\r\n                    [firstColId]: {\r\n                        id: firstColId,\r\n                        parentId: parentId,\r\n                        elementIds: []\r\n                    },\r\n                    [secondColId]: {\r\n                        id: secondColId,\r\n                        parentId: parentId,\r\n                        elementIds: []\r\n                    },\r\n                    [thirdColId]: {\r\n                        id: thirdColId,\r\n                        parentId: parentId,\r\n                        elementIds: []\r\n                    }\r\n                },\r\n                columnOrder: [\r\n                    ...builderState.columnOrder,\r\n                    {\r\n                        firstColId: firstColId,\r\n                        secondColId: secondColId,\r\n                        thirdColId: thirdColId\r\n                    }]\r\n            })\r\n        }\r\n\r\n        if (targetId === 'doubleLeftLongLayout') {\r\n            const firstColId = `col-${Guid.newGuid()}`;\r\n            const secondColId = `col-${Guid.newGuid()}`;\r\n            const parentId = Guid.newGuid().StringGuid;\r\n\r\n            setBuilderState({\r\n                ...builderState,\r\n                columns: {\r\n                    ...builderState.columns,\r\n                    [firstColId]: {\r\n                        id: firstColId,\r\n                        parentId: parentId,\r\n                        lengthType: 'long',\r\n                        elementIds: []\r\n                    },\r\n                    [secondColId]: {\r\n                        id: secondColId,\r\n                        parentId: parentId,\r\n                        elementIds: []\r\n                    }\r\n                },\r\n                columnOrder: [\r\n                    ...builderState.columnOrder,\r\n                    {\r\n                        firstColId: firstColId,\r\n                        secondColId: secondColId\r\n                    }]\r\n            })\r\n        }\r\n\r\n        if (targetId === 'doubleRightLongLayout') {\r\n            const firstColId = `col-${Guid.newGuid()}`;\r\n            const secondColId = `col-${Guid.newGuid()}`;\r\n            const parentId = Guid.newGuid().StringGuid;\r\n\r\n            setBuilderState({\r\n                ...builderState,\r\n                columns: {\r\n                    ...builderState.columns,\r\n                    [firstColId]: {\r\n                        id: firstColId,\r\n                        parentId: parentId,\r\n                        elementIds: []\r\n                    },\r\n                    [secondColId]: {\r\n                        id: secondColId,\r\n                        parentId: parentId,\r\n                        lengthType: 'long',\r\n                        elementIds: []\r\n                    }\r\n                },\r\n                columnOrder: [\r\n                    ...builderState.columnOrder,\r\n                    {\r\n                        firstColId: firstColId,\r\n                        secondColId: secondColId\r\n                    }]\r\n            })\r\n        }\r\n    }\r\n\r\n    const dropElement = (ev) => {\r\n        let id = ev.target.attributes['data-rbd-draggable-id'];\r\n\r\n        if (!id){\r\n            id = ev.target.attributes['data-rbd-droppable-id'];\r\n        }\r\n\r\n        if (!id) return;\r\n\r\n        const targetElementId = id.value;\r\n        const column = builderState.columns[targetElementId];\r\n\r\n        if (!column) return;\r\n\r\n        const newId = Guid.newGuid().StringGuid;\r\n        const newElement = <TitleHtmlElement id={newId}/>;\r\n\r\n        setBuilderState({\r\n            ...builderState,\r\n            elements: {\r\n                ...builderState.elements,\r\n                [newId]: {\r\n                    id: newId,\r\n                    content: newElement\r\n                }\r\n            },\r\n            columns: {\r\n                ...builderState.columns,\r\n                [targetElementId]: {\r\n                    ...column,\r\n                    elementIds: [\r\n                        ...column.elementIds,\r\n                        newId\r\n                    ]\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const drop = (ev) => {\r\n        ev.preventDefault();\r\n        const typeData = ev.dataTransfer.getData('type')\r\n\r\n        if (typeData === 'rows') dropRows(ev)\r\n        if (typeData === 'element') dropElement(ev)\r\n    }\r\n\r\n    const onDragEnd = (result) => {\r\n        const {destination, source, draggableId, type} = result;\r\n        \r\n        if (!destination) return;\r\n        if (destination.droppableId === source.droppableId && destination.index === source.index) return;\r\n\r\n        if (type === 'row') {\r\n            const newColumnOrder = Array.from(builderState.columnOrder);\r\n\r\n            const copyOfMoved = newColumnOrder[source.index];\r\n            newColumnOrder.splice(source.index, 1)\r\n            newColumnOrder.splice(destination.index, 0, copyOfMoved)\r\n\r\n            const newState = {\r\n                ...builderState,\r\n                columnOrder: newColumnOrder\r\n            }\r\n\r\n            setBuilderState(newState)\r\n            return;\r\n        }\r\n\r\n        const start = builderState.columns[source.droppableId];\r\n        const finish = builderState.columns[destination.droppableId];\r\n\r\n        if (start === finish) {\r\n            const newElementIds = Array.from(start.elementIds);\r\n\r\n            newElementIds.splice(source.index, 1);\r\n            newElementIds.splice(destination.index, 0, draggableId);\r\n\r\n            const newColumn = {\r\n                ...start,\r\n                elementIds: newElementIds\r\n            };\r\n\r\n            const newBuilderState = {\r\n                ...builderState,\r\n                columns: {\r\n                    ...builderState.columns,\r\n                    [newColumn.id]: newColumn\r\n                }\r\n            }\r\n\r\n            setBuilderState({...newBuilderState})\r\n            return;\r\n        }\r\n\r\n        const startElementIds = Array.from(start.elementIds);\r\n        startElementIds.splice(source.index, 1);\r\n        const newStartColumn = {\r\n            ...start,\r\n            elementIds: startElementIds\r\n        }\r\n\r\n        const finishElementIds = Array.from(finish.elementIds);\r\n        finishElementIds.splice(destination.index, 0, draggableId);\r\n        const newFinishColumn = {\r\n            ...finish,\r\n            elementIds: finishElementIds\r\n        }\r\n\r\n        const newBuilderState = {\r\n            ...builderState,\r\n            columns: {\r\n                ...builderState.columns,\r\n                [newStartColumn.id]: newStartColumn,\r\n                [newFinishColumn.id]: newFinishColumn\r\n            }\r\n        }\r\n\r\n        setBuilderState({...newBuilderState})\r\n    }\r\n\r\n    const renderSingleLayout = (column, index) => {\r\n        return <>\r\n            <HtmlSingleLayout\r\n                key={Guid.newGuid().StringGuid}\r\n                id={column.id}\r\n                index={index}\r\n                column={builderState.columns[column.id]}\r\n                elements={builderState.elements}/>\r\n        </>\r\n    }\r\n\r\n    const renderDoubleLayout = (firstColumn, secondColumn, index) => {\r\n        return <>\r\n            <HtmlDoubleLayout\r\n                key={Guid.newGuid().StringGuid}\r\n                index={index}\r\n                firstColumn={builderState.columns[firstColumn.id]}\r\n                secondColumn={builderState.columns[secondColumn.id]}\r\n                elements={builderState.elements}/>\r\n        </>\r\n    }\r\n\r\n    const renderTripleLayout = (firstColumn, secondColumn, thirdColumn, index) => {\r\n        return <>\r\n            <HtmlTripleLayout\r\n                key={Guid.newGuid().StringGuid}\r\n                index={index}\r\n                firstColumn={builderState.columns[firstColumn.id]}\r\n                secondColumn={builderState.columns[secondColumn.id]}\r\n                thirdColumn={builderState.columns[thirdColumn.id]}\r\n                elements={builderState.elements}/>\r\n        </>\r\n    }\r\n\r\n    const renderLayouts = () => {\r\n        const columnsArray = builderState.columnOrder.map(x => {\r\n            let list = [];\r\n            if (x.firstColId) {\r\n                list.push(builderState.columns[x.firstColId]);\r\n            }\r\n\r\n            if (x.secondColId) {\r\n                list.push(builderState.columns[x.secondColId]);\r\n            }\r\n\r\n            if (x.thirdColId) {\r\n                list.push(builderState.columns[x.thirdColId]);\r\n            }\r\n            return list;\r\n        });\r\n\r\n        const grouped = groupBy(columnsArray.flat(), 'parentId');\r\n\r\n        return Object.keys(grouped).map((parentId, index) => {\r\n            const columns = grouped[parentId];\r\n            \r\n            if (columns.length === 1) {\r\n                return renderSingleLayout(columns[0], index);\r\n            }\r\n            if (columns.length === 2) {\r\n                return renderDoubleLayout(columns[0], columns[1], index);\r\n            }\r\n            if (columns.length === 3) {\r\n                return renderTripleLayout(columns[0], columns[1], columns[2], index);\r\n            }\r\n        })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        _droppingManager = new DroppingManager()\r\n    }, [])\r\n\r\n    return <>\r\n        <Wrapper>\r\n            <BuilderStyleButtonsWrapper>\r\n                <ToggleButtonGroup\r\n                    color=\"primary\"\r\n                    value={selectedStyleOption}\r\n                    onChange={(event, newAlignment) => {\r\n                        handleStyleOptionChange(event, newAlignment)\r\n                    }}>\r\n                    <ToggleButton style={{textTransform: \"none\"}} value=\"elements\">Elements</ToggleButton>\r\n                    <ToggleButton style={{textTransform: \"none\"}} value=\"layout\">Layout</ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </BuilderStyleButtonsWrapper>\r\n            <BuilderStyleFactory selectedOption={selectedStyleOption}/>\r\n            <DropAreaWrapper>\r\n                <DropArea\r\n                    onDrop={ev => drop(ev)}\r\n                    onDragOver={event => allowDrop(event)}>\r\n                    <DragDropContext\r\n                        onDragStart={() => {\r\n                        }}\r\n                        onDragEnd={onDragEnd}>\r\n                        <Droppable droppableId=\"all-columns\" direction=\"vertical\" type=\"row\">\r\n                            {provided => {\r\n                                return <>\r\n                                    <Container {...provided.droppableProps} ref={provided.innerRef}>\r\n                                        {renderLayouts(provided)}\r\n                                        {provided.placeholder}\r\n                                    </Container>\r\n                                </>;\r\n                            }}\r\n                        </Droppable>\r\n                    </DragDropContext>\r\n                    <MailgenElement />\r\n                </DropArea>\r\n            </DropAreaWrapper>\r\n        </Wrapper>\r\n        <div style={{clear: \"both\"}}></div>\r\n    </>\r\n}\r\n\r\nexport default EmailBuilder","import React, {useRef, useState} from 'react';\r\nimport {IconButton, TextField} from '@material-ui/core';\r\nimport useStyles from '../EmailTemplate/styles';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport queryString from 'query-string';\r\nimport LoadingButton from '../components/LoadingButton';\r\nimport {getConfig} from \"../config\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {Alert, AlertTitle, Collapse, Grid} from \"@mui/material\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport EmailBuilder from \"../EmailBuilder/EmailBuilder\";\r\n\r\nconst EmailTemplate = (props) => {\r\n    const styles = useStyles()\r\n    const emailEditorRef = useRef(null);\r\n    const query = queryString.parse(props.location.search)\r\n    const config = getConfig()\r\n\r\n    const [name, setName] = useState('')\r\n    const [saveInProgress, setSaveInProgress] = useState(false)\r\n    const [errorOnUpsert, setErrorOnUpsert] = useState({open: false, message: ''})\r\n    const [fieldsErrorState, setFieldsErrorState] = useState({\r\n        name: false\r\n    })\r\n    const {getAccessTokenSilently} = useAuth0();\r\n\r\n    const execute = async (data) => {\r\n        setSaveInProgress(true)\r\n\r\n        const accessToken = await getAccessTokenSilently({\r\n            audience: config.audience,\r\n            scope: \"read:current_user\",\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                Authorization: `Bearer ${accessToken}`\r\n            },\r\n            body: JSON.stringify({\r\n                id: query.id,\r\n                name: name,\r\n                html: data.html,\r\n                json: JSON.stringify(data.json)\r\n            })\r\n        }\r\n\r\n        fetch(`${process.env.REACT_APP_API_BASE}/emailTemplates/upsertTemplate`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setSaveInProgress(false)\r\n                if (!data.isSuccess) {\r\n                    setErrorOnUpsert({open: true, message: data.message});\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const save = () => {\r\n        if (!name || name === '') {\r\n            setFieldsErrorState({\r\n                name: true\r\n            })\r\n            return\r\n        }\r\n\r\n        setFieldsErrorState({\r\n            name: false\r\n        })\r\n\r\n        emailEditorRef.current.editor.exportHtml(data => {\r\n            const {design, html} = data;\r\n            execute({\r\n                html: html,\r\n                json: design\r\n            })\r\n        })\r\n    };\r\n\r\n    const onLoad = async () => {\r\n        if (query.mode === 'update') {\r\n            const accessToken = await getAccessTokenSilently({\r\n                audience: config.audience,\r\n                scope: \"read:current_user\",\r\n            });\r\n\r\n            fetch(`${process.env.REACT_APP_API_BASE}/emailTemplates/getById?id=${query.id}`, {\r\n                headers: {Authorization: `Bearer ${accessToken}`},\r\n            })\r\n                .then(x => x.json())\r\n                .then(response => {\r\n                    setName(response.template.name)\r\n                    emailEditorRef.current.editor.loadDesign(JSON.parse(response.template.json))\r\n                })\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <div className={styles.main}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Collapse in={errorOnUpsert.open}>\r\n                        <Alert\r\n                            severity=\"error\"\r\n                            action={\r\n                                <IconButton\r\n                                    aria-label=\"close\"\r\n                                    color=\"inherit\"\r\n                                    size=\"small\"\r\n                                    onClick={() => {\r\n                                        setErrorOnUpsert({open: false, message: ''});\r\n                                    }}\r\n                                >\r\n                                    <CloseIcon fontSize=\"inherit\"/>\r\n                                </IconButton>\r\n                            }\r\n                            sx={{mb: 2}}\r\n                        >\r\n                            <AlertTitle>Validation Error</AlertTitle>\r\n                            {errorOnUpsert.message}\r\n                        </Alert>\r\n                    </Collapse>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item xs={10}>\r\n                    <div>\r\n                        <TextField\r\n                            error={fieldsErrorState.name}\r\n                            helperText={fieldsErrorState.name ? 'Name field is required!' : ''}\r\n                            label=\"Name\"\r\n                            value={name}\r\n                            onChange={(x) => setName(x.target.value)}\r\n                            className={styles.name}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <LoadingButton\r\n                        loading={saveInProgress}\r\n                        onClick={save}\r\n                        className={styles.save}\r\n                        startIcon={saveInProgress ? '' : <SaveOutlinedIcon/>}\r\n                        text=\"Save\"/>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <EmailBuilder />\r\n                    {/*<EmailEditor*/}\r\n                    {/*    style={{marginTop: 5, minHeight: 800}}*/}\r\n                    {/*    ref={emailEditorRef}*/}\r\n                    {/*    onLoad={onLoad}*/}\r\n                    {/*    projectId={1071}*/}\r\n                    {/*    options={{*/}\r\n                    {/*        customJS: [*/}\r\n                    {/*            window.location.protocol + '//' + window.location.host + '/banCustomTool.js',*/}\r\n                    {/*            window.location.protocol + '//' + window.location.host + '/blogCustomTools.js',*/}\r\n                    {/*        ]*/}\r\n                    {/*    }}/>*/}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    </>;\r\n}\r\n\r\nexport default EmailTemplate","import React, {useState} from \"react\";\r\nimport {Button, List, Modal} from \"antd\";\r\n\r\nconst data = [\r\n    {\r\n        title: '{{FIRST_NAME}}',\r\n        description: \"First Name of the subscriber which was captured during subscribe. If the subscriber is missing this information, it will be skipped. Additionally you can use the following format {{FIRST_NAME or 'great person'}}\"\r\n    },\r\n    {\r\n        title: '{{LAST_NAME}}',\r\n        description: \"Last Name of the subscriber which was captured during subscribe. If the subscriber is missing this information, it will be skipped. Additionally you can use the following format {{LAST_NAME or 'great person'}}\"\r\n    }\r\n];\r\n\r\nconst MergeTags = () => {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    \r\n    \r\n    return <>\r\n        <Button onClick={showModal} shape=\"round\">View Merge Tags</Button>\r\n        <Modal title=\"Merge Tags\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n            <span>The merge tags use the famous Handlebars template format for replacement logic.</span>\r\n            <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={data}\r\n                renderItem={(item) => (\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                            title={<span>{item.title}</span>}\r\n                            description={item.description}\r\n                        />\r\n                    </List.Item>\r\n                )} />\r\n        </Modal>\r\n    </>\r\n}\r\n\r\nexport default MergeTags;","import React, {useEffect, useState} from 'react';\r\nimport {Editor} from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport {convertToRaw, EditorState} from 'draft-js'\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport queryString from \"query-string\";\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport ContentState from \"draft-js/lib/ContentState\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {Button, Col, Input, Row, Spin} from \"antd\";\r\nimport {WarningOutlined} from \"@ant-design/icons\";\r\nimport {callApi} from \"../utils/apiHelper\";\r\nimport MergeTags from \"./components/MergeTags\";\r\n\r\nconst SimpleEmailTemplate = (props) => {\r\n    const history = useHistory()\r\n    const {getAccessTokenSilently} = useAuth0();\r\n    const query = queryString.parse(props.location.search)\r\n    \r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n    const [name, setName] = useState('');\r\n    const [loading, setLoading] = useState({\r\n        page: false,\r\n        saveButton: false\r\n    })\r\n    const [validations, setValidations] = useState({\r\n        name: true,\r\n        editor: true\r\n    })\r\n\r\n    const onEditorStateChange = (state) => {\r\n        setEditorState(state)\r\n    }\r\n    \r\n    const validateFields = () => {\r\n        let validations = {\r\n            name: true,\r\n            editor: true\r\n        }\r\n        if (!name.length){\r\n            validations.name = false;\r\n        }\r\n        \r\n        if (draftToHtml(convertToRaw(editorState.getCurrentContent())) == '<p></p>\\n'){\r\n            validations.editor = false;\r\n        }\r\n        \r\n        setValidations(validations)\r\n        return !Object.values(validations).some(x => x === false);\r\n    }\r\n    \r\n    const save = async () => {\r\n        const validationPassed = validateFields();\r\n        if (!validationPassed){\r\n            return;\r\n        }\r\n\r\n        setLoading({\r\n            ...loading,\r\n            saveButton: true\r\n        })\r\n        \r\n        const html = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n        const baseHtml = `\r\n            <!DOCTYPE html>\r\n            <html>\r\n                <body>\r\n                    <div>\r\n                        {HTML_CONTENT_HERE}\r\n                    </div>\r\n                    <div style=\"text-align: center\">\r\n                        <span>No longer interested?</span><a id=\"unsubscribe\" href=\"{{BASE_ADDRESS}}/subscribers/unsubscribe?email={{SUBSCRIBER_EMAIL}}&subscriberId={{SUBSCRIBER_ID}}&returnUrl=https://mailgen.org/unsubscribe/\">Unsubscribe</a>\r\n                    </div>\r\n                    <div id=\"platform-advertisement\" style=\"text-align: center;margin-top:25px;\">\r\n                        <a style=\"display: inline-block;vertical-align: middle;line-height: normal;text-decoration: none;color: inherit;\" href=\"https://mailgen.org\" target=\"_blank\">\r\n                            <img style=\"display: inline-block;vertical-align: middle;line-height: normal;\" alt=\"mailgen\" height=\"80\" width=\"150\" src={process.env.PUBLIC_URL + '/PoweredByMailgen.png'} />\r\n                        </a>\r\n                    </div>\r\n                </body>\r\n            </html>`;\r\n        \r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/emailTemplates/upsertTemplate`,\r\n            method: 'post',\r\n            request: {\r\n                id: query.id,\r\n                name: name,\r\n                html: html,\r\n                baseHtml: baseHtml,\r\n                type: 0\r\n            },\r\n            successCallback: (response) => {\r\n                history.push('/templates')\r\n                setLoading({\r\n                    ...loading,\r\n                    saveButton: false\r\n                })\r\n            },\r\n            errorCallback: (error) => {\r\n                setLoading({\r\n                    ...loading,\r\n                    saveButton: false\r\n                })\r\n            }\r\n        });\r\n    }\r\n    \r\n    useEffect(async () => {\r\n        if (query.id) {\r\n            setLoading({\r\n                ...loading,\r\n                page: true\r\n            })\r\n            await callApi(getAccessTokenSilently, {\r\n                url: `${process.env.REACT_APP_API_BASE}/emailTemplates/getById?id=${query.id}`,\r\n                method: 'get',\r\n                successCallback: (response) => {\r\n                    setName(response.template.name)\r\n                    const contentBlock = htmlToDraft(response.template.html);\r\n                    const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n                    const editorState = EditorState.createWithContent(contentState);\r\n                    setLoading({\r\n                        ...loading,\r\n                        page: false\r\n                    })\r\n                    setEditorState(editorState)\r\n                },\r\n                errorCallback: (error) => { }\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return <>\r\n        <Spin spinning={loading.page}>\r\n            <Row gutter={[16,16]}>\r\n                <Col span={5}>\r\n                    <Input\r\n                        status={validations.name ? '' : 'error'}\r\n                        prefix={validations.name ? '' : <WarningOutlined />}\r\n                        onChange={(event) => {\r\n                            setName(event.target.value)\r\n                        }}\r\n                        value={name}\r\n                        placeholder=\"Name\" />\r\n                </Col>\r\n                <Col span={2}>\r\n                    <MergeTags />\r\n                </Col>\r\n                <Col span={17}>\r\n                    <Button loading={loading.saveButton} onClick={async () => await save()} style={{float: 'right'}}>Save</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: 10}}>\r\n                <Col span={24}>\r\n                    <Editor\r\n                        editorState={editorState}\r\n                        editorStyle={{\r\n                            backgroundColor: 'white',\r\n                            border: validations.editor ? '1px solid #F1F1F1' : '1px solid red',\r\n                            height: 580,\r\n                            padding: 5\r\n                        }}\r\n                        onEditorStateChange={onEditorStateChange}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </Spin>\r\n    </>\r\n}\r\n\r\nexport default SimpleEmailTemplate","import React, {useEffect, useState} from 'react'\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport {Button, Tooltip} from \"antd\";\r\nimport {PlayCircleOutlined, StopOutlined} from \"@ant-design/icons\";\r\nimport {callApi} from \"../../utils/apiHelper\";\r\n\r\nconst CampaignActivation = (props) => {\r\n    const { \r\n        params\r\n    } = props\r\n\r\n    const buttonTypes = Object.freeze({\r\n        Start: 1,\r\n        Stop: 2,\r\n        Ended: 4\r\n    })\r\n\r\n    const [activeButton, setActiveButton] = useState(params.row.state)\r\n    const { getAccessTokenSilently } = useAuth0();\r\n    \r\n    useEffect(() => {\r\n        if(params.row.state === buttonTypes.Start){\r\n            setActiveButton(buttonTypes.Stop)\r\n        }else{\r\n            setActiveButton(buttonTypes.Start)   \r\n        }\r\n    }, [params.row.state])\r\n    \r\n\r\n    const onStart = async () => {        \r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/campaigns/startCampaign?campaignId=${params.row.id}`,\r\n            method: 'post',\r\n            request: {},\r\n            successCallback: () => {\r\n                setActiveButton(buttonTypes.Stop)\r\n            },\r\n            errorCallback: () => {}\r\n        })\r\n    }\r\n\r\n    const onStop = async () => {        \r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/campaigns/stopCampaign?campaignId=${params.row.id}`,\r\n            method: 'post',\r\n            request: {},\r\n            successCallback: (response) => {\r\n                if (props.params.row.type == 1){\r\n                    setActiveButton(buttonTypes.Ended)\r\n                }else{\r\n                    setActiveButton(buttonTypes.Start)\r\n                }\r\n            },\r\n            errorCallback: () => {}\r\n        })\r\n    }\r\n\r\n    const renderButton = () => {\r\n        switch(activeButton) {\r\n            case buttonTypes.Stop:\r\n                return <>\r\n                        <Tooltip title=\"Stop Campaign\">\r\n                            <Button\r\n                                type='circle'\r\n                                onClick={onStop}\r\n                                icon={<StopOutlined />}\r\n                            />\r\n                        </Tooltip>\r\n                    </>\r\n            case buttonTypes.Start:\r\n                return <>\r\n                    <Tooltip title=\"Start Campaign\">\r\n                        <Button\r\n                            type='circle'\r\n                            onClick={onStart}\r\n                            icon={<PlayCircleOutlined />}\r\n                        />\r\n                    </Tooltip>\r\n                </>\r\n            case buttonTypes.Ended:\r\n                return <>\r\n                    <p>Ended</p>\r\n                </>\r\n            default:\r\n                console.error(\"Option not supported\")\r\n        }\r\n    }\r\n\r\n    return <>\r\n        {renderButton()}\r\n    </>\r\n}\r\n\r\nexport default CampaignActivation","import CampaignActivation from \"../components/CampaignActivation\";\r\nimport {formatDate, formatDateTime} from \"../../utils/dateFormatter\";\r\nimport React from \"react\";\r\nimport {EditOutlined} from \"@ant-design/icons\";\r\nimport {Button, Tag} from \"antd\";\r\n\r\nexport const columns = {\r\n    getCampaignColumns: (openCampaignUpdate) => {\r\n        return [\r\n            {\r\n                dataIndex: 'name',\r\n                title: 'Name',\r\n                key: 'name'\r\n            },\r\n            {\r\n                dataIndex: 'type',\r\n                title: 'Type',\r\n                key: 'type',\r\n                render: (value) => {\r\n                    if (value == 0) {\r\n                        return <Tag color=\"#87d068\">Newsletter</Tag> \r\n                    }\r\n                    if (value == 1) {\r\n                        return <Tag color=\"#2db7f5\">Scheduled One-Time</Tag>\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                dataIndex: 'isActive',\r\n                title: 'Active',\r\n                key: 'isActive',\r\n                render: (value, params) => {\r\n                    debugger\r\n                    if (params.state == 4){\r\n                        return <span>Ended</span>\r\n                    }\r\n                    return <CampaignActivation params={{row: params}}/>;\r\n                }\r\n            },\r\n            {\r\n                dataIndex: 'createdDate',\r\n                title: 'Created Date',\r\n                key: 'createdDate',\r\n                render: (value) => {\r\n                    return formatDate({value: value})\r\n                }\r\n            },\r\n            {\r\n                dataIndex: 'endDate',\r\n                title: 'End Date',\r\n                key: 'endDate',\r\n                render: (value) => {\r\n                    if (!value) {\r\n                        return '-'\r\n                    }\r\n\r\n                    return formatDateTime({value: value})\r\n                }\r\n            },\r\n            {\r\n                dataIndex: 'modify',\r\n                title: 'Modify',\r\n                key: 'modify',\r\n                render: (_, {id}) => {\r\n                    return <>\r\n                        <Button\r\n                            type=\"circle\"\r\n                            onClick={(x) => openCampaignUpdate(id)} \r\n                            icon={<EditOutlined />} \r\n                        />\r\n                    </>\r\n                }\r\n            }\r\n        ];\r\n    }\r\n}\r\n\r\nexport const {getCampaignColumns} = columns;","import React, {useEffect, useState} from \"react\"\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {Button, Col, Row, Table} from \"antd\";\r\nimport {ContainerWrapper, ReportTitle} from \"../reportComponents/CampaignStyles\";\r\nimport {getCampaignColumns} from \"./logic/columns\";\r\nimport {callApi} from \"../utils/apiHelper\";\r\nimport {PlusOutlined} from \"@ant-design/icons\";\r\n\r\nconst CampaignsReport = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [campaigns, setCampaigns] = useState([])\r\n    const history = useHistory()\r\n    const {getAccessTokenSilently} = useAuth0();\r\n\r\n    const getCampaigns = async () => {\r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/campaigns/getCampaigns`,\r\n            method: 'get',\r\n            successCallback: (response) => {\r\n                setCampaigns(response.campaigns)\r\n                setLoading(false)\r\n            },\r\n            errorCallback: () => {}\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getCampaigns()\r\n    }, [])\r\n\r\n    const openCampaignCreation = () => {\r\n        history.push('/campaign')\r\n    }\r\n\r\n    const openCampaignUpdate = (id) => {\r\n        history.push({\r\n            pathname: '/campaign',\r\n            search: `?mode=update&campaignId=${id}`,\r\n            state: null\r\n        })\r\n    }\r\n\r\n    return <>\r\n        <Row gutter={[16, 24]} style={{marginTop: 20}}>\r\n            <Col span={24}>\r\n                <div>\r\n                    <ContainerWrapper>\r\n                        <Row gutter={[16, 16]}>\r\n                            <Col span={2}>\r\n                                <ReportTitle>Campaigns</ReportTitle>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[16, 16]}>\r\n                            <Col span={2}>\r\n                                <Button icon={<PlusOutlined />} onClick={openCampaignCreation}>Create Campaign</Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Table\r\n                                    loading={loading}\r\n                                    columns={getCampaignColumns((id) => openCampaignUpdate(id))}\r\n                                    dataSource={campaigns}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </ContainerWrapper>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default CampaignsReport","// const types = [{\r\n//     id: 0,\r\n//     name: 'Newsletter'\r\n// },{\r\n//     id: 1,\r\n//     name: 'Scheduled One-Time'\r\n// }]\r\n\r\nconst types = [{\r\n    id: 1,\r\n    name: 'Scheduled One-Time'\r\n}]\r\n\r\nconst repeatTypes = [{\r\n    id: 0,\r\n    name: 'Day'\r\n},{\r\n    id: 1,\r\n    name: 'Week'\r\n},{\r\n    id: 2,\r\n    name: 'Month'\r\n}]\r\n\r\nconst endTypes = [{\r\n    id: 0,\r\n    name: 'Never'\r\n},{\r\n    id: 1,\r\n    name: 'Date'\r\n}]\r\n\r\nexport {types, repeatTypes, endTypes}","import {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    content: {\r\n        // height: 600,\r\n        width: '100%',\r\n        padding: theme.spacing(0, 0, 0, 29),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    formControl: {\r\n        display: 'flex',\r\n        padding: theme.spacing(0, 0, 0, 0)\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    main: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nexport default useStyles","import React from 'react'\r\nimport {\r\n    InputLabel,\r\n    FormControl,\r\n    Select,\r\n    MenuItem\r\n} from \"@material-ui/core\"\r\nimport useStyles from '../NewsLetter/styles';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst SelectCustom = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const {\r\n        id,\r\n        value,\r\n        handler,\r\n        labelName,\r\n        options,\r\n        disabled\r\n    } = props\r\n    \r\n    const [optionsSource, setOptionsSource] = useState(options)\r\n    \r\n    useEffect(() => {\r\n        setOptionsSource(options)\r\n    }, [props.options])\r\n\r\n    const handleChange = (event, action) => {\r\n        action(event.target.value);\r\n    }\r\n\r\n    return <>\r\n        <FormControl className={classes.formControl}>\r\n            <InputLabel id={id}>{labelName}</InputLabel>\r\n            <Select\r\n                id={id}\r\n                disabled={disabled}\r\n                value={value}\r\n                onChange={x => handleChange(x, handler)}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n                inputProps={{ 'aria-label': 'Without label' }}\r\n                error={value === \"\"}\r\n                helperText={\"The field is required\"}>\r\n                {optionsSource.map(x => <MenuItem value={x.id}>{x.name}</MenuItem>)}\r\n            </Select>\r\n        </FormControl>\r\n    </>\r\n}\r\n\r\nexport default SelectCustom","import React from 'react'\r\nimport { withStyles, Checkbox, FormControlLabel} from '@material-ui/core';\r\n\r\nconst CheckboxCustom = (props) => {\r\n    const {\r\n        checked,\r\n        handler,\r\n        name,\r\n        labelName\r\n    } = props\r\n\r\n    const StyledCheckbox = withStyles({\r\n        root: {\r\n          color: '#009be5',\r\n          '&$checked': {\r\n            color: '#009be5',\r\n          },\r\n        },\r\n        checked: {},\r\n      })((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n    return <>\r\n        <FormControlLabel\r\n            control={\r\n                <StyledCheckbox\r\n                    checked={checked}\r\n                    onChange={handler}\r\n                    name={name}\r\n                    color=\"primary\"\r\n                />\r\n            }\r\n            label={labelName}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default CheckboxCustom","import {Grid} from \"@material-ui/core\";\r\nimport CheckboxCustom from \"./checkbox\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport React from \"react\";\r\n\r\nconst LastDayOfMonth = (props) => {\r\n    const {\r\n        selectedRepeatType,\r\n        value,\r\n        handler\r\n    } = props\r\n\r\n    const repeatTypes = {\r\n        Day: 0,\r\n        Week: 1,\r\n        Months: 2\r\n    }\r\n    \r\n    if (selectedRepeatType === repeatTypes.Months){\r\n        return <>\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={1}>\r\n                <Grid item>\r\n                    <CheckboxCustom\r\n                        checked={value}\r\n                        handler={handler}\r\n                        name=\"onlyLastDayOfMonth\"\r\n                        labelName=\"Only last day of the month\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Tooltip\r\n                        title=\"Selecting this option will allow you to run the campaign at last the day of each month. If a day is not present for the current month, an email will not be sent.\">\r\n                        <InfoOutlinedIcon fontSize=\"small\"/>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    }\r\n\r\n    return <span />\r\n}\r\n\r\nexport default LastDayOfMonth","import {Grid, Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport SelectCustom from \"../../components/Select\";\r\n\r\nconst DaysOfWeek = (props) =>{\r\n\r\n    const options = [{\r\n        id: 1,\r\n        name: 'Monday'\r\n    },{\r\n        id: 2,\r\n        name: 'Tuesday'\r\n    },{\r\n        id: 3,\r\n        name: 'Wednesday'\r\n    },{\r\n        id: 4,\r\n        name: 'Thirsday'\r\n    },{\r\n        id: 5,\r\n        name: 'Friday'\r\n    },{\r\n        id: 6,\r\n        name: 'Saturday'\r\n    },{\r\n        id: 7,\r\n        name: 'Sunday'\r\n    },]\r\n\r\n    const repeatTypes = {\r\n        Day: 0,\r\n        Week: 1,\r\n        Months: 2\r\n    }\r\n    \r\n    const {\r\n        selectedRepeatType, \r\n        value,\r\n        handler} = props\r\n\r\n    if (selectedRepeatType === repeatTypes.Week){\r\n        return <>\r\n            <Grid item>\r\n                {/*<DaysOfWeekSelect value={dayOfWeek} handler={dayOfWeekHandler} />*/}\r\n                <SelectCustom\r\n                    id=\"repeat-select\"\r\n                    value={value}\r\n                    labelName=\"\"\r\n                    handler={handler}\r\n                    options={options} />\r\n            </Grid>\r\n            <Grid item style={{marginTop:\"6%\"}}>\r\n                <Typography>at</Typography>\r\n            </Grid>\r\n        </>\r\n    }\r\n    return <span />;\r\n}\r\n\r\nexport default DaysOfWeek","import {Grid, Typography} from \"@material-ui/core\";\r\nimport SelectCustom from \"../../components/Select\";\r\nimport React from \"react\";\r\n\r\nconst DayOfMonth = (props) => {\r\n    const {\r\n        selectedRepeatType,\r\n        value,\r\n        handler,\r\n        disabled\r\n    } = props\r\n\r\n    const repeatTypes = {\r\n        Day: 0,\r\n        Week: 1,\r\n        Months: 2\r\n    }\r\n\r\n    const numberOfDays = () => {\r\n        return [...Array(31).keys()].map(x => {\r\n            return {\r\n                id: x + 1,\r\n                name: x + 1\r\n            }\r\n        });\r\n    }\r\n    \r\n    if (selectedRepeatType === repeatTypes.Months)\r\n    {\r\n        return <>\r\n            <Grid item>\r\n                <SelectCustom\r\n                    id=\"days-select\"\r\n                    value={value}\r\n                    labelName=\"Day\"\r\n                    handler={handler}\r\n                    disabled={disabled}\r\n                    options={numberOfDays} />\r\n            </Grid>\r\n            <Grid item style={{marginTop:\"6%\"}}>\r\n                <Typography>at</Typography>\r\n            </Grid>\r\n        </>\r\n    }\r\n\r\n    return <span />\r\n}\r\n\r\nexport default DayOfMonth","import React, {useEffect, useState} from 'react'\r\nimport {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Typography,\r\n    Grid,\r\n    Button,\r\n    Divider,\r\n    TextField\r\n} from \"@material-ui/core\"\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport useStyles from './styles'\r\nimport SelectCustom from '../components/Select'\r\nimport Tags from '../components/Tags'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport {types, repeatTypes, endTypes} from './sources/types';\r\nimport EmailTemplateSelect from '../components/EmailTemplateSelect';\r\nimport {getConfig} from \"../config\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport queryString from \"query-string\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport LastDayOfMonth from \"./components/LastDayOfMonth\";\r\nimport DaysOfWeek from \"./components/DayOfWeek\";\r\nimport DayOfMonth from \"./components/DayOfMonth\";\r\nimport validateEmail from \"../utils/ValueValidations\";\r\nimport CheckboxCustom from \"./components/checkbox\";\r\n\r\nconst Newsletter = (props) => {\r\n    const classes = useStyles()\r\n    const config = getConfig()\r\n    const history = useHistory()\r\n    const {getAccessTokenSilently} = useAuth0();\r\n    \r\n    const {type, model, disableScheduling} = props\r\n    \r\n    const [name, setName] = useState(\"\");\r\n    const [subject, setSubject] = useState(\"\");\r\n    const [senderName, setSenderName] = useState(\"\");\r\n    const [senderEmail, setSenderEmail] = useState(\"\");\r\n    const [rssUrl, setRssUrl] = useState(\"\");\r\n    const [selectedEmailTemplate, setSelectedEmailTemplate] = useState('');\r\n    const [selectedRepeatType, setSelectedRepeatType] = useState(0)\r\n    const [selectedEndType, setSelectedEndType] = useState(0)\r\n    const [selectedEndDate, setSelectedEndDate] = useState(new Date())\r\n    const [selectedEndTime, setSelectedEndTime] = useState(new Date())\r\n    const [dayOfWeek, setDayOfWeek] = useState(1)\r\n    const [tags, setTags] = React.useState([])\r\n    const [state, setState] = useState({\r\n        onlyLastDayOfMonth: false,\r\n        enableOpenRate: true,\r\n        enableClickTracking: true\r\n    });\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date())\r\n    const [selectedDay, setSelectedDay] = React.useState(1)\r\n    const [buttonDisabled, setButtonDisabled] = React.useState(false)\r\n\r\n    const campaignId = queryString.parse(props.location.search).campaignId\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    const handleRssUrlChange = (event) => {\r\n        setRssUrl(event.target.value);\r\n    }\r\n\r\n    const handleCheckboxChange = (event) => {\r\n        setState({...state, [event.target.name]: event.target.checked});\r\n    };\r\n    \r\n    const setupFieldsOnUpdate = (campaign) => {\r\n        setName(campaign.name)\r\n        setSelectedEmailTemplate(campaign.emailTemplateId)\r\n        setRssUrl(campaign.rssUrl)\r\n        setTags(campaign.tags)\r\n        setSelectedRepeatType(campaign.repeatType)\r\n        setDayOfWeek(campaign.weekDay)\r\n        setSelectedDate(campaign.repeatTime)\r\n        setSelectedDay(campaign.dayOfMonth)\r\n        setState({onlyLastDayOfMonth: campaign.onlyLastDayOfMonth, enableClickTracking: campaign.enableClickTracking, enableOpenRate: campaign.enableOpenRate})\r\n        setSelectedEndDate(campaign.endDate)\r\n        setSelectedEndTime(campaign.endTime)\r\n        setSubject(campaign.subject)\r\n        setSenderEmail(campaign.senderEmail)\r\n        setSenderName(campaign.senderName)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if ((!name || name.length < 3) ||\r\n            (selectedEmailTemplate === \"\") ||\r\n            (!validateEmail(senderEmail)) ||\r\n            (!rssUrl || rssUrl.length < 3) ||\r\n            (!subject || subject.length < 3) ||\r\n            (tags.length <= 0)){\r\n            setButtonDisabled(true)\r\n        } else{\r\n            setButtonDisabled(false)   \r\n        }\r\n    }, [name, selectedEmailTemplate, rssUrl, tags, subject, senderEmail])\r\n    \r\n    useEffect(() => {\r\n        if (campaignId && model){\r\n            setupFieldsOnUpdate(model)\r\n        }\r\n    }, [model])\r\n\r\n    const upsert = async () => {\r\n        const request = {\r\n            campaignId: campaignId,\r\n            name: name,\r\n            subject: subject,\r\n            senderName: senderName,\r\n            senderEmail: senderEmail,\r\n            rssUrl: rssUrl,\r\n            type: type,\r\n            emailTemplateId: selectedEmailTemplate,\r\n            tags: tags,\r\n            repeatType: selectedRepeatType,\r\n            repeatTime: selectedDate,\r\n            onlyLastDayOfMonth: state.onlyLastDayOfMonth,\r\n            dayOfMonth: selectedDay,\r\n            weekDay: dayOfWeek,\r\n            endType: selectedEndType,\r\n            endDate: selectedEndDate,\r\n            endTime: selectedEndTime,\r\n            enableOpenRate: state.enableOpenRate,\r\n            enableClickTracking: state.enableClickTracking\r\n        }\r\n\r\n        const accessToken = await getAccessTokenSilently({\r\n            audience: config.audience,\r\n            scope: \"read:current_user\",\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                Authorization: `Bearer ${accessToken}`\r\n            },\r\n            body: JSON.stringify(request)\r\n        }\r\n\r\n        fetch(`${process.env.REACT_APP_API_BASE}/campaigns/upsertCampaign`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                history.push('/campaigns')\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return <>\r\n        <Card className={classes.content}>\r\n            <CardContent>\r\n                <Grid container spacing={5}>\r\n                    <Grid item>\r\n                        <TextField\r\n                            error={!name && name.length < 3}\r\n                            value={name}\r\n                            helperText=\"Name is required and must be at least 3 characters\"\r\n                            onChange={handleNameChange}\r\n                            label=\"Name\"/>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={3}>\r\n                        <EmailTemplateSelect\r\n                            disabled={disableScheduling}\r\n                            value={selectedEmailTemplate}\r\n                            handler={setSelectedEmailTemplate}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                    <Grid item>\r\n                        <TextField \r\n                            value={rssUrl}\r\n                            disabled={disableScheduling}\r\n                            onChange={handleRssUrlChange} \r\n                            label=\"RSS Url\"\r\n                            error={!rssUrl || rssUrl.length < 3}\r\n                            helperText={\"Rss url is required and must be at least 3 characters\"}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container alignItems=\"center\" spacing={1}>\r\n                    <Grid item>\r\n                        <CheckboxCustom\r\n                            checked={state.enableOpenRate}\r\n                            handler={handleCheckboxChange}\r\n                            name=\"enableOpenRate\"\r\n                            labelName=\"Enable open rates\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Tooltip\r\n                            title=\"This option enables you to see the rate of the emails that were opened.\">\r\n                            <InfoOutlinedIcon fontSize=\"small\"/>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container alignItems=\"center\" spacing={1}>\r\n                    <Grid item>\r\n                        <CheckboxCustom\r\n                            checked={state.enableClickTracking}\r\n                            handler={handleCheckboxChange}\r\n                            name=\"enableClickTracking\"\r\n                            labelName=\"Enable click tracking\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Tooltip\r\n                            title=\"This option enables you to track the link clicks in your emails.\">\r\n                            <InfoOutlinedIcon fontSize=\"small\"/>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                    <Grid item>\r\n                        <Grid container justifyContent={\"left\"} spacing={4}>\r\n                            <Grid item>\r\n                                <Tags selectedTags={tags} setTags={setTags}/>\r\n                            </Grid>\r\n                            <Grid item style={{marginTop:'1.5em'}}>\r\n                                <Tooltip title=\"The campaign will run for the emails with the selected tags.\">\r\n                                    <InfoOutlinedIcon fontSize=\"small\"/>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={10}>\r\n                    <Grid item xs>\r\n                        <Typography align={\"left\"}>Sender Details</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs>\r\n                        <Divider/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    <Grid item>\r\n                        <TextField\r\n                            error={!subject && subject.length < 3}\r\n                            value={subject}\r\n                            onChange={(e) => setSubject(e.target.value)}\r\n                            label=\"Subject\"/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    <Grid item>\r\n                        <TextField\r\n                            value={senderName}\r\n                            helperText=\"Optional. The name that your subscribers will see in their emails\"\r\n                            onChange={(e) => setSenderName(e.target.value)}\r\n                            label=\"Sender Name\"/>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            error={!senderEmail && senderEmail.length < 3}\r\n                            value={senderEmail}\r\n                            helperText=\"The email that your subscribers will see in their emails\"\r\n                            onChange={(e) => setSenderEmail(e.target.value)}\r\n                            label=\"Sender Email\"/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={10}>\r\n                    <Grid item xs>\r\n                        <Typography align={\"left\"}>Scheduling</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <div style={disableScheduling}>\r\n                    <Grid container spacing={5}>\r\n                        <Grid item xs>\r\n                            <Divider/>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={5}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container spacing={3} alignItems=\"center\">\r\n                                <Grid item style={{marginTop:'1%'}}>\r\n                                    <Typography align={\"inherit\"}>Repeat every:</Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <SelectCustom\r\n                                        value={selectedRepeatType}\r\n                                        labelName=\"\"\r\n                                        handler={setSelectedRepeatType}\r\n                                        options={repeatTypes}/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={5}>\r\n                        <Grid item>\r\n                            <LastDayOfMonth \r\n                                value={state.onlyLastDayOfMonth} \r\n                                handler={handleCheckboxChange} \r\n                                selectedRepeatType={selectedRepeatType} \r\n                            />\r\n                            <Grid container alignItems=\"center\" spacing={5}>\r\n                                <DaysOfWeek \r\n                                    value={dayOfWeek} \r\n                                    handler={setDayOfWeek} \r\n                                    selectedRepeatType={selectedRepeatType} \r\n                                />\r\n                                <DayOfMonth \r\n                                    value={selectedDay} \r\n                                    handler={setSelectedDay} \r\n                                    disabled={state.onlyLastDayOfMonth} \r\n                                    selectedRepeatType={selectedRepeatType} \r\n                                />\r\n                                <Grid item>\r\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                        <KeyboardTimePicker\r\n                                            margin=\"normal\"\r\n                                            id=\"time-picker\"\r\n                                            label=\"Time\"\r\n                                            value={selectedDate}\r\n                                            onChange={handleDateChange}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change time',\r\n                                            }}\r\n                                        />\r\n                                    </MuiPickersUtilsProvider>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container alignItems=\"center\" spacing={3}>\r\n                        <Grid item style={{marginTop:\"1%\"}}>\r\n                            <Typography>End On:</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <SelectCustom\r\n                                id=\"repeat-select\"\r\n                                value={selectedEndType}\r\n                                labelName=\"\"\r\n                                handler={setSelectedEndType}\r\n                                options={endTypes} />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={5}>\r\n                        <Grid item>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <KeyboardDatePicker\r\n                                    disabled={selectedEndType === 0}\r\n                                    margin=\"normal\"\r\n                                    id=\"time-picker\"\r\n                                    label=\"Date\"\r\n                                    value={selectedEndDate}\r\n                                    onChange={setSelectedEndDate}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change time',\r\n                                    }}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                        </Grid>\r\n                        <Grid item xs={2} >\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <KeyboardTimePicker\r\n                                    disabled={selectedEndType === 0}\r\n                                    margin=\"normal\"\r\n                                    id=\"date-picker\"\r\n                                    label=\"Time\"\r\n                                    value={selectedEndTime}\r\n                                    onChange={setSelectedEndTime}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change time',\r\n                                    }}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs>\r\n                        <Divider />\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button disabled={buttonDisabled} variant=\"contained\" color=\"primary\" size=\"small\" onClick={upsert}>Save</Button>\r\n            </CardActions>\r\n        </Card>\r\n        {/*<Backdrop className={classes.backdrop} open={loading}>*/}\r\n        {/*    <CircularProgress color={\"inherit\"} />*/}\r\n        {/*</Backdrop>*/}\r\n    </>\r\n}\r\n\r\nexport default Newsletter","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    name: '',\r\n    emailTemplateId: null,\r\n    enableOpenRate: true,\r\n    enableClickTracking: true,\r\n    tags: []\r\n};\r\n\r\nexport const scheduledCampaignGeneralSlice = createSlice({\r\n    name: 'scheduledCampaignGeneral',\r\n    initialState: () => initialState,\r\n    reducers: {\r\n        updateGeneralDetails: (state, action) => {\r\n            return Object.assign(state, action.payload)\r\n        },\r\n        resetGeneralDetails: (state, action) => {\r\n            return Object.assign(state, initialState)\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    updateGeneralDetails, \r\n    resetGeneralDetails} = scheduledCampaignGeneralSlice.actions\r\nexport default scheduledCampaignGeneralSlice.reducer","import React from \"react\";\r\nimport {Card, Checkbox, Col, Divider, Input, Row, Tooltip} from \"antd\";\r\nimport EmailTemplateSelect from \"../../components/EmailTemplateSelect\";\r\nimport Tags from \"../../components/Tags\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateGeneralDetails} from '../../features/scheduledCampaigns/scheduledCampaignGeneralSlice'\r\nimport {WarningOutlined} from \"@ant-design/icons\";\r\n\r\nconst GeneralDetails = (props) => {\r\n    const dispatch = useDispatch();\r\n    const selector = useSelector(selector => selector.scheduledCampaignGeneral)\r\n    const validations = useSelector(selector => selector.scheduledCampaignValidations)\r\n    const {isUpdateMode} = props;\r\n    \r\n    return <>\r\n        <Card style={{border: ' 1px solid #e6ebf1'}}>\r\n            <Divider orientation=\"left\" plain>General Details</Divider>\r\n            <Row gutter={[16, 16]}>\r\n                <Col span={14}>\r\n                    <Input\r\n                        status={validations.name ? '' : 'error'}\r\n                        prefix={validations.name ? '' : <WarningOutlined />}\r\n                        onChange={(event) => {\r\n                            dispatch(updateGeneralDetails({\r\n                                ...selector,\r\n                                name: event.target.value\r\n                            }))\r\n                        }}\r\n                        value={selector.name} \r\n                        placeholder=\"Name\" />\r\n                </Col>\r\n                <Col span={10}>\r\n                    <EmailTemplateSelect\r\n                        disabled={false}\r\n                        valid={validations.emailTemplateId}\r\n                        value={selector.emailTemplateId}\r\n                        handler={val => {\r\n                            dispatch(updateGeneralDetails({\r\n                                ...selector,\r\n                                emailTemplateId: val\r\n                            }))\r\n                        }}/>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: 10}}>\r\n                <Col>\r\n                    <Tooltip title=\"This option enables you to see the rate of the emails that were opened.\">\r\n                        <Checkbox\r\n                            disabled={isUpdateMode}\r\n                            defaultChecked={selector.enableOpenRate}\r\n                            onChange={event => {\r\n                                dispatch(updateGeneralDetails({\r\n                                    ...selector,\r\n                                    enableOpenRate: event.target.checked\r\n                                }))\r\n                            }}>Enable open rates</Checkbox>\r\n                    </Tooltip>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: 10}}>\r\n                <Col>\r\n                    <Tooltip title=\"This option enables you to track the link clicks in your emails.\">\r\n                        <Checkbox\r\n                            disabled={isUpdateMode}\r\n                            defaultChecked={selector.enableClickTracking}\r\n                            onChange={event => {\r\n                                dispatch(updateGeneralDetails({\r\n                                    ...selector,\r\n                                    enableClickTracking: event.target.checked\r\n                                }))\r\n                            }}>\r\n                            Enable click tracking\r\n                        </Checkbox>\r\n                    </Tooltip>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[16, 16]} style={{marginTop: 10}}>\r\n                <Col span={10}>\r\n                    <Tags status={validations.tags ? '' : 'error'} />\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    </>\r\n}\r\n\r\nexport default GeneralDetails;","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    date: '',\r\n    time: ''\r\n};\r\n\r\nexport const scheduledCampaignSchedulingSlice = createSlice({\r\n    name: 'scheduledCampaignScheduling',\r\n    initialState: () => initialState,\r\n    reducers: {\r\n        updateSchedulingDetails: (state, action) => {\r\n            return Object.assign(state, action.payload)\r\n        },\r\n        resetSchedulingDetails: (state, action) => {\r\n            return Object.assign(state, initialState)\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    updateSchedulingDetails,\r\n    resetSchedulingDetails\r\n} = scheduledCampaignSchedulingSlice.actions\r\nexport default scheduledCampaignSchedulingSlice.reducer","import {Card, Col, DatePicker, Divider, Row, TimePicker} from \"antd\";\r\nimport React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateSchedulingDetails} from \"../../features/scheduledCampaigns/scheduledCampaignSchedulingSlice\";\r\nimport moment from \"moment\";\r\nimport {WarningOutlined} from \"@ant-design/icons\";\r\n\r\nconst SchedulingDetails = (props) => {\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(selector => selector.scheduledCampaignScheduling);\r\n    const validations = useSelector(selector => selector.scheduledCampaignValidations);\r\n    const {isUpdateMode} = props;\r\n    \r\n    return <>\r\n        <Card style={{border: ' 1px solid #e6ebf1'}}>\r\n            <Divider orientation=\"left\" plain>Scheduling Details</Divider>\r\n            <Row gutter={[16, 16]}>\r\n                <Col span={14}>\r\n                    <DatePicker\r\n                        disabled={isUpdateMode}\r\n                        status={validations.date ? '' : 'error'}\r\n                        prefix={validations.date ? '' : <WarningOutlined />}\r\n                        value={state.date.length ? moment(state.date) : ''}    \r\n                        onChange={(moment, dateString) => dispatch(updateSchedulingDetails({\r\n                        ...state,\r\n                        date: dateString\r\n                    }))} \r\n                        style={{width: '100%'}}\r\n                        disabledDate={(current) =>current < moment().startOf('day')} />\r\n                </Col>\r\n                <Col span={10}>\r\n                    <TimePicker\r\n                        disabled={isUpdateMode}\r\n                        status={validations.time ? '' : 'error'}\r\n                        prefix={validations.time ? '' : <WarningOutlined />}\r\n                        value={state.time.length ? moment(state.time) : ''}\r\n                        onChange={(moment, timeString) => {\r\n                            dispatch(updateSchedulingDetails({\r\n                                ...state,\r\n                                time: moment.toString()\r\n                            }))\r\n                        }}\r\n                        style={{width: '100%'}}  />\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    </>\r\n}\r\n\r\nexport default SchedulingDetails;","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    subject: '',\r\n    senderName: '',\r\n    senderEmail: '',\r\n};\r\n\r\nexport const scheduledCampaignSenderDetailsSlice = createSlice({\r\n    name: 'scheduledCampaignSenderDetails',\r\n    initialState: () => initialState,\r\n    reducers: {\r\n        updateSenderDetails: (state, action) => {\r\n            state.subject = action.payload.subject;\r\n            state.senderName = action.payload.senderName;\r\n            state.senderEmail = action.payload.senderEmail;\r\n        },\r\n        resetSenderDetails: (state, action) => {\r\n            Object.assign(state, initialState)\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    updateSenderDetails,\r\n    resetSenderDetails\r\n} = scheduledCampaignSenderDetailsSlice.actions\r\nexport default scheduledCampaignSenderDetailsSlice.reducer","import {Card, Col, Divider, Input, Row} from \"antd\";\r\nimport React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateSenderDetails} from \"../../features/scheduledCampaigns/scheduledCampaignSenderDetailsSlice\";\r\nimport {WarningOutlined} from \"@ant-design/icons\";\r\nimport SendingEmail from \"../../components/SendingEmail\";\r\n\r\nconst SenderDetails = (props) => {\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(selector => selector.scheduledCampaignSenderDetails);\r\n    const validations = useSelector(selector => selector.scheduledCampaignValidations);\r\n    const {isUpdateMode} = props;\r\n    \r\n    const dispatchSubject = (newVal) => {\r\n        dispatch(updateSenderDetails({\r\n            ...state,\r\n            subject: newVal\r\n        }))\r\n    }\r\n\r\n    const dispatchSenderName = (newVal) => {\r\n        dispatch(updateSenderDetails({\r\n            ...state,\r\n            senderName: newVal\r\n        }))\r\n    }\r\n    \r\n    return <>\r\n        <Card style={{border: ' 1px solid #e6ebf1'}}>\r\n            <Divider orientation=\"left\" plain>Sender Details</Divider>\r\n            <Row gutter={[16, 16]}>\r\n                <Col span={10}>\r\n                    <Input\r\n                        disabled={isUpdateMode}\r\n                        status={validations.subject ? '' : 'error'}\r\n                        prefix={validations.subject ? '' : <WarningOutlined />}\r\n                        onChange={(event) => dispatchSubject(event.target.value)}\r\n                        value={state.subject} \r\n                        placeholder=\"Subject\" />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[16, 16]} style={{marginTop: 10}}>\r\n                <Col span={10}>\r\n                    <Input\r\n                        disabled={isUpdateMode}\r\n                        onChange={(event) => dispatchSenderName(event.target.value)}\r\n                        value={state.senderName} \r\n                        placeholder=\"Sender Name\" />\r\n                </Col>\r\n                <Col span={14}>\r\n                    <SendingEmail disabled={isUpdateMode} />\r\n                </Col>\r\n            </Row>\r\n        </Card>    \r\n    </>\r\n}\r\n\r\nexport default SenderDetails;","import moment from \"moment\";\r\n\r\nexport const modelBuilder = {\r\n    getGeneralDetailsModel: (model) => {\r\n        debugger\r\n        return {\r\n            name: model.name,\r\n            emailTemplateId: model.emailTemplateId,\r\n            enableOpenRate: model.enableOpenRate,\r\n            enableClickTracking: model.enableClickTracking\r\n        }\r\n    },\r\n    getSenderDetailsModel: (model) => {\r\n        return {\r\n            subject: model.subject,\r\n            senderName: model.senderName,\r\n            senderEmail: model.senderEmail,\r\n        }\r\n    },\r\n    getSchedulingDetails: (model) => {\r\n        const fullDate = moment(model.repeatTime);        \r\n        return {\r\n            date: fullDate.toString(),\r\n            time: fullDate.toString()\r\n        }\r\n    }\r\n}\r\n\r\nexport const { \r\n    getGeneralDetailsModel,\r\n    getSenderDetailsModel,\r\n    getSchedulingDetails\r\n} = modelBuilder;","export const scheduledCampaignsValidations = {\r\n    validateStringLength: (name, length) => {\r\n        const definedLength = length ? length : 3\r\n        return name.length && name.length > definedLength;\r\n    },\r\n    stringNotNull: (str) => {\r\n        return str && str.length && str.length > 0;\r\n    }\r\n}\r\n\r\nexport const {\r\n    validateStringLength,\r\n    stringNotNull\r\n} = scheduledCampaignsValidations;","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    name: true,\r\n    emailTemplateId: true,\r\n    enableOpenRate: true,\r\n    enableClickTracking: true,\r\n    date: true,\r\n    time: true,\r\n    subject: true,\r\n    senderName: true,\r\n    tags: true\r\n};\r\n\r\nexport const scheduledCampaignValidationSlice = createSlice({\r\n    name: 'scheduledCampaignValidations',\r\n    initialState: () => initialState,\r\n    reducers: {\r\n        updateScheduledCampaignValidation: (state, action) => {\r\n            return Object.assign(state, action.payload)\r\n        },\r\n        resetScheduledCampaignValidation: (state, action) => {\r\n            return Object.assign(state, initialState)\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    updateScheduledCampaignValidation,\r\n    resetScheduledCampaignValidation} = scheduledCampaignValidationSlice.actions\r\nexport default scheduledCampaignValidationSlice.reducer","import React, {useEffect, useState} from 'react'\r\nimport queryString from \"query-string\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {Button, Col, notification, Row, Spin} from \"antd\";\r\nimport GeneralDetails from \"./components/GeneralDetails\";\r\nimport SchedulingDetails from \"./components/SchedulingDetails\";\r\nimport SenderDetails from \"./components/SenderDetails\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport moment from 'moment';\r\nimport {resetGeneralDetails, updateGeneralDetails} from \"../features/scheduledCampaigns/scheduledCampaignGeneralSlice\";\r\nimport {\r\n    resetSenderDetails,\r\n    updateSenderDetails\r\n} from \"../features/scheduledCampaigns/scheduledCampaignSenderDetailsSlice\";\r\nimport {\r\n    resetSchedulingDetails,\r\n    updateSchedulingDetails\r\n} from \"../features/scheduledCampaigns/scheduledCampaignSchedulingSlice\";\r\nimport {resetSelectedTags, updateSelectedTags} from \"../features/tagsSlice\";\r\nimport {getGeneralDetailsModel, getSchedulingDetails, getSenderDetailsModel} from \"./logic/modelBuilder\";\r\nimport {callApi} from \"../utils/apiHelper\";\r\nimport {\r\n    stringNotNull,\r\n    validateStringLength\r\n} from \"./logic/scheduledCampaignsValidations\";\r\nimport {updateScheduledCampaignValidation} from \"../features/scheduledCampaigns/validationSlice\";\r\nimport {resetSendingEmails, updateSendingEmails} from \"../features/sendingEmailsSlice\";\r\n\r\nconst ScheduledOneTime = (props) => {\r\n    const history = useHistory()\r\n    const {getAccessTokenSilently} = useAuth0();\r\n    const dispatch = useDispatch();\r\n    const general = useSelector(selector => selector.scheduledCampaignGeneral);\r\n    const scheduling = useSelector(selector => selector.scheduledCampaignScheduling);\r\n    const senderDetails = useSelector(selector => selector.scheduledCampaignSenderDetails);\r\n    const tags = useSelector(selector => selector.tags);\r\n    const sendingEmailId = useSelector(selector => selector.sendingEmails);\r\n    const {loading} = props;\r\n    const {type, model} = props\r\n\r\n    const campaignId = queryString.parse(props.location.search).campaignId\r\n    const [buttonDisabled, setButtonDisabled] = useState(false)\r\n    const [isUpdateMode, setIsUpdateMode] = useState(false)\r\n    \r\n    const areFieldsValid = () => {\r\n        let validationResult = {\r\n            name: true,\r\n            emailTemplateId: true,\r\n            enableOpenRate: true,\r\n            enableClickTracking: true,\r\n            date: true,\r\n            time: true,\r\n            subject: true,\r\n            tags: true\r\n        };\r\n        \r\n        if (!validateStringLength(general.name)){\r\n            validationResult.name = false;\r\n        }\r\n\r\n        if (!stringNotNull(general.emailTemplateId)){\r\n            validationResult.emailTemplateId = false;\r\n        }\r\n\r\n        if (!stringNotNull(scheduling.date)){\r\n            validationResult.date = false;\r\n        }\r\n\r\n        if (!stringNotNull(scheduling.time)){\r\n            validationResult.time = false;\r\n        }\r\n        if (!validateStringLength(senderDetails.subject)){\r\n            validationResult.subject = false;\r\n        }\r\n\r\n        if (tags.length <= 0){\r\n            validationResult.tags = false;\r\n        }\r\n        \r\n        dispatch(updateScheduledCampaignValidation(validationResult))\r\n        return !Object.values(validationResult).some(x => x == false);\r\n    }\r\n\r\n    const openNotificationWithIcon = (type, data) => {\r\n        notification[type]({\r\n            message: data.title,\r\n            description: data.text\r\n        });\r\n    };\r\n\r\n    const upsert = async () => {\r\n        debugger\r\n        setButtonDisabled(true)\r\n        \r\n        if (!areFieldsValid()){\r\n            setButtonDisabled(false)\r\n            return;\r\n        }\r\n        \r\n        const momentDate = moment(scheduling.date);\r\n        const momentTime = moment(scheduling.time);\r\n        \r\n        const request = {\r\n            ...general,\r\n            ...scheduling,\r\n            ...senderDetails,\r\n            tags: [...tags],\r\n            replyToSendingEmailId: sendingEmailId,\r\n            repeatType: 3,\r\n            type: type,\r\n            campaignId: campaignId,\r\n            repeatTime: new Date(momentDate.year(), momentDate.month(), momentDate.date(), momentTime.hours(), momentTime.minutes(), 0)\r\n        }\r\n\r\n        await callApi(getAccessTokenSilently,\r\n            {\r\n                url: `${process.env.REACT_APP_API_BASE}/campaigns/upsertCampaign`,\r\n                method: 'POST',\r\n                request: request,\r\n                successCallback: (response) => {\r\n                    setButtonDisabled(false)\r\n                    history.push('/campaigns')\r\n                    if (response.isSuccess){\r\n                        openNotificationWithIcon('success', {\r\n                            title: 'Campaign created successfully',\r\n                            text: 'You campaign is created and started automatically!'\r\n                        })\r\n                    }else{\r\n                        openNotificationWithIcon('error',{\r\n                            title: 'Error white processing your action',\r\n                            text: 'Something went wrong. Please try again later!'\r\n                        })\r\n                    }\r\n                },\r\n                errorCallback: () => {\r\n                    openNotificationWithIcon('error',{\r\n                        title: 'Error white processing your action',\r\n                        text: 'Something went wrong. Please try again later!'\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (campaignId && model) {\r\n            dispatch(updateGeneralDetails(getGeneralDetailsModel(model)))\r\n            dispatch(updateSenderDetails(getSenderDetailsModel(model)))\r\n            dispatch(updateSchedulingDetails(getSchedulingDetails(model)))\r\n            dispatch(updateSelectedTags(model.tags))\r\n            dispatch(updateSendingEmails(model.replyToSendingEmail ? model.replyToSendingEmail.id : null))\r\n            setIsUpdateMode(true)\r\n        }else {\r\n            dispatch(resetGeneralDetails())\r\n            dispatch(resetSchedulingDetails())\r\n            dispatch(resetSenderDetails())\r\n            dispatch(resetSelectedTags())\r\n            dispatch(resetSendingEmails())\r\n        }\r\n    }, [model])\r\n\r\n    return <>\r\n        <Spin spinning={loading}>\r\n            <Row justify={\"start\"} gutter={[16, 16]}>\r\n                <Col span={12}>\r\n                    <GeneralDetails isUpdateMode={isUpdateMode} />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <SchedulingDetails isUpdateMode={isUpdateMode} />\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: 15}} justify={\"start\"} gutter={[16, 16]}>\r\n                <Col span={12}>\r\n                    <SenderDetails isUpdateMode={isUpdateMode} />\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: 10}}>\r\n                <Col>\r\n                    <Button type=\"primary\" loading={buttonDisabled} onClick={async () => { await upsert() }}>\r\n                        Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Spin>\r\n    </>\r\n}\r\n\r\nexport default ScheduledOneTime","import React, {useEffect, useState} from 'react'\r\nimport {types} from \"../NewsLetter/sources/types\";\r\nimport Newsletter from \"../NewsLetter\";\r\nimport ScheduledOneTime from \"../ScheduledCampaign/index\";\r\nimport queryString from \"query-string\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {Col, Row, Select} from \"antd\";\r\nimport {Option} from \"antd/es/mentions\";\r\nimport {callApi} from \"../utils/apiHelper\";\r\n\r\nconst CampaignPageLoader = (props) => {\r\n    const {getAccessTokenSilently} = useAuth0();\r\n    \r\n    const [selectedType, setSelectedType] = useState(1);\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [schedulingSectionDisabled, setSchedulingSectionDisabled] = React.useState(null)\r\n    const [model, setModel] = useState(null)\r\n    \r\n    const campaignId = queryString.parse(props.location.search).campaignId\r\n\r\n    const getCampaignData = async () => {\r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/campaigns/getCampaign?campaignId=${campaignId}`,\r\n            method: 'get',\r\n            successCallback: (response) => {\r\n                setModel(response.campaign)\r\n                setSelectedType(response.campaign.type)\r\n                setLoading(false)\r\n            },\r\n            errorCallback: (error) => {\r\n                \r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (campaignId){\r\n            setLoading(true)\r\n            setSchedulingSectionDisabled({pointerEvents: \"none\", opacity: 0.4})\r\n            getCampaignData()\r\n        }\r\n    }, [props])\r\n    \r\n    const renderType = () => {\r\n        switch (selectedType){\r\n            case 0:\r\n                return <Newsletter model={model} disableScheduling={schedulingSectionDisabled} type={selectedType} {...props} />\r\n            case 1: \r\n                return <ScheduledOneTime model={model} type={selectedType} loading={loading} {...props} />\r\n            default: \r\n                throw new Error(\"Campign type not supported\")\r\n        }\r\n    }\r\n    \r\n    return <>\r\n        <Row>\r\n            <Col span={24}>\r\n                <Select\r\n                    style={{float: 'left'}}\r\n                    onChange={setSelectedType}\r\n                    defaultValue={selectedType}\r\n                    disabled={campaignId}>\r\n                    {types.map(x => <Option value={x.id}>{x.name}</Option>)}\r\n                </Select>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col style={{marginTop: 10}} span={24}>\r\n                {renderType()}\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default CampaignPageLoader","import {formatDate} from \"../../utils/dateFormatter\";\r\nimport React from \"react\";\r\nimport {Button} from \"antd\";\r\nimport {EditOutlined} from \"@ant-design/icons\";\r\n\r\nexport const columns = {\r\n    getAutoEmailsReportColumns: (openAutoEmailUpdate) => {\r\n        return [\r\n            {\r\n                dataIndex: 'name',\r\n                title: 'Name',\r\n                key: 'name'\r\n            },\r\n            {\r\n                dataIndex: 'type',\r\n                title: 'Type',\r\n                key: 'type',\r\n                render: (params) => {\r\n                    return \"Welcome Email\"\r\n                }\r\n            },\r\n            {\r\n                dataIndex: 'createdDate',\r\n                title: 'Created Date',\r\n                key: 'date',\r\n                render: (value) => {\r\n                    return formatDate({value: value})\r\n                }\r\n            },\r\n            {\r\n                dataIndex: 'modify',\r\n                title: 'Modify',\r\n                key: 'modify',\r\n                render: (val, {id}) => {\r\n                    return <>\r\n                        <Button\r\n                            type=\"circle\"\r\n                            onClick={(x) => openAutoEmailUpdate(id)}\r\n                            icon={<EditOutlined />}\r\n                        />\r\n                    </>\r\n                }\r\n            }\r\n        ];\r\n    }\r\n}\r\n\r\nexport const {getAutoEmailsReportColumns} = columns;","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    name: '',\r\n    emailTemplateId: null\r\n};\r\n\r\nexport const autoEmailGeneralDetailsSlice = createSlice({\r\n    name: 'autoEmailGeneralDetails',\r\n    initialState: () => initialState,\r\n    reducers: {\r\n        updateAutoEmailGeneralDetails: (state, action) => {\r\n            return Object.assign(state, action.payload)\r\n        },\r\n        resetAutoEmailGeneralDetails: (state, action) => {\r\n            return Object.assign(state, initialState)\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    updateAutoEmailGeneralDetails,\r\n    resetAutoEmailGeneralDetails} = autoEmailGeneralDetailsSlice.actions\r\nexport default autoEmailGeneralDetailsSlice.reducer","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    subject: '',\r\n    senderName: '',\r\n    senderEmail: '',\r\n};\r\n\r\nexport const autoEmailSenderDetailsSlice = createSlice({\r\n    name: 'autoEmailSenderDetails',\r\n    initialState: () => initialState,\r\n    reducers: {\r\n        updateAutoEmailSenderDetails: (state, action) => {\r\n            return Object.assign(state, action.payload)\r\n        },\r\n        resetAutoEmailSenderDetails: (state, action) => {\r\n            return Object.assign(state, initialState)\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    updateAutoEmailSenderDetails,\r\n    resetAutoEmailSenderDetails\r\n} = autoEmailSenderDetailsSlice.actions\r\nexport default autoEmailSenderDetailsSlice.reducer","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    name: true,\r\n    emailTemplateId: true,\r\n    subject: true,\r\n    senderName: true,\r\n    senderEmail: true,\r\n    tags: true\r\n};\r\n\r\nexport const autoEmailValidationsSlice = createSlice({\r\n    name: 'autoEmailValidations',\r\n    initialState: () => initialState,\r\n    reducers: {\r\n        updateAutoEmailValidation: (state, action) => {\r\n            return Object.assign(state, action.payload)\r\n        },\r\n        resetAutoEmailValidations: (state, action) => {\r\n            return Object.assign(state, initialState)\r\n        },\r\n    }\r\n})\r\n\r\nexport const { \r\n    updateAutoEmailValidation,\r\n    resetAutoEmailValidations} = autoEmailValidationsSlice.actions\r\nexport default autoEmailValidationsSlice.reducer","import React, {useEffect, useState} from \"react\"\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {Button, Col, Row, Table} from \"antd\";\r\nimport {ContainerWrapper, ReportTitle} from \"../reportComponents/CampaignStyles\";\r\nimport {getAutoEmailsReportColumns} from \"./logic/columns\";\r\nimport {PlusOutlined} from \"@ant-design/icons\";\r\nimport {callApi} from \"../utils/apiHelper\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {resetAutoEmailGeneralDetails} from \"../features/autoEmails/autoEmailGeneralDetailsSlice\";\r\nimport {resetAutoEmailSenderDetails} from \"../features/autoEmails/autoEmailSenderDetailsSlice\";\r\nimport {resetSelectedTags} from \"../features/tagsSlice\";\r\nimport {resetAutoEmailValidations} from \"../features/autoEmails/autoEmailValidationsSlice\";\r\n\r\nconst AutomationsReport = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [autoEmails, setAutoEmails] = useState([])\r\n    const history = useHistory()\r\n    const {getAccessTokenSilently} = useAuth0();\r\n    const dispatch = useDispatch();\r\n\r\n    const getAutoEmails = async () => {\r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/automation/getAutoEmailsReport`,\r\n            method: 'get',\r\n            successCallback: (response) => {\r\n                setAutoEmails(response.autoEmails)\r\n                setLoading(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getAutoEmails()\r\n    }, [])\r\n\r\n    const openAutoEmailCreation = () => {\r\n        dispatch(resetAutoEmailGeneralDetails())\r\n        dispatch(resetAutoEmailSenderDetails())\r\n        dispatch(resetSelectedTags())\r\n        dispatch(resetAutoEmailValidations())\r\n        history.push('/auto-email')\r\n    }\r\n\r\n    const openAutoEmailUpdate = (id) => {\r\n        history.push({\r\n            pathname: '/auto-email',\r\n            search: `?mode=update&autoEmailId=${id}`,\r\n            state: null\r\n        })\r\n    }\r\n\r\n    return <>\r\n        <Row gutter={[16, 24]} style={{marginTop: 20}}>\r\n            <Col span={24}>\r\n                <div>\r\n                    <ContainerWrapper>\r\n                        <Row gutter={[16, 16]}>\r\n                            <Col span={8}>\r\n                                <ReportTitle>Automated Emails</ReportTitle>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[16, 16]}>\r\n                            <Col span={2}>\r\n                                <Button icon={<PlusOutlined />} onClick={openAutoEmailCreation}>Create</Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Table\r\n                                    loading={loading}\r\n                                    columns={getAutoEmailsReportColumns((id) => openAutoEmailUpdate(id))}\r\n                                    dataSource={autoEmails}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </ContainerWrapper>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default AutomationsReport","import {Card, Col, Divider, Input, Popover, Row, Space, Tooltip} from \"antd\";\r\nimport {InfoCircleFilled, InfoCircleOutlined, WarningOutlined} from \"@ant-design/icons\";\r\nimport EmailTemplateSelect from \"../../components/EmailTemplateSelect\";\r\nimport Tags from \"../../components/Tags\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateAutoEmailGeneralDetails} from \"../../features/autoEmails/autoEmailGeneralDetailsSlice\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {callApi} from \"../../utils/apiHelper\";\r\n\r\nconst GeneralDetails = ({autoEmailId}) => {\r\n    const dispatch = useDispatch();\r\n    const generalDetails = useSelector(selector => selector.autoEmailGeneralDetails)\r\n    const validations = useSelector(selector => selector.autoEmailValidations)\r\n    const {getAccessTokenSilently} = useAuth0();\r\n    \r\n    const [usedTags, setUsedTags] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const id = autoEmailId === null ? '' : autoEmailId;\r\n        callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/tags/welcomeCampaign/used?autoEmailId=${id}`,\r\n            method: 'get',\r\n            successCallback: (response) => {\r\n                setUsedTags(response)\r\n            },\r\n            errorCallback: () => { }\r\n        })\r\n    }, [autoEmailId])\r\n    \r\n    return <>\r\n        <Card style={{border: ' 1px solid #e6ebf1'}}>\r\n            <Divider orientation=\"left\" plain>General Details</Divider>\r\n            <Row gutter={[16, 16]}>\r\n                <Col span={6}>\r\n                    <Input\r\n                        status={validations.name ? '' : 'error'}\r\n                        prefix={validations.name ? '' : <WarningOutlined />}\r\n                        onChange={(event) => {\r\n                            dispatch(updateAutoEmailGeneralDetails({\r\n                                ...generalDetails,\r\n                                name: event.target.value\r\n                            }))\r\n                        }}\r\n                        value={generalDetails.name}\r\n                        placeholder=\"Name\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <EmailTemplateSelect\r\n                        disabled={false}\r\n                        valid={validations.emailTemplateId}\r\n                        value={generalDetails.emailTemplateId}\r\n                        handler={val => {\r\n                            dispatch(updateAutoEmailGeneralDetails({\r\n                                ...generalDetails,\r\n                                emailTemplateId: val\r\n                            }))\r\n                        }}/>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[16, 16]} style={{marginTop: 10}}>\r\n                <Col span={6}>\r\n                    <Tags disabledTags={usedTags} status={validations.tags ? '' : 'error'} />\r\n                </Col>\r\n                <Col>\r\n                    <Tooltip title=\"Some tags may be disabled. This means they were already used in another Automatic Email Template.\">\r\n                        <InfoCircleOutlined />\r\n                    </Tooltip>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    </>\r\n}\r\n\r\nexport default GeneralDetails;","import {Card, Col, Divider, Input, Row} from \"antd\";\r\nimport React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {WarningOutlined} from \"@ant-design/icons\";\r\nimport {updateAutoEmailSenderDetails} from \"../../features/autoEmails/autoEmailSenderDetailsSlice\";\r\nimport SendingEmail from \"../../components/SendingEmail\";\r\n\r\nconst SenderDetails = (props) => {\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(selector => selector.autoEmailSenderDetails);\r\n    const validations = useSelector(selector => selector.autoEmailValidations);\r\n    const {isUpdateMode} = props;\r\n    \r\n    const dispatchSubject = (newVal) => {\r\n        dispatch(updateAutoEmailSenderDetails({\r\n            ...state,\r\n            subject: newVal\r\n        }))\r\n    }\r\n\r\n    const dispatchSenderName = (newVal) => {\r\n        dispatch(updateAutoEmailSenderDetails({\r\n            ...state,\r\n            senderName: newVal\r\n        }))\r\n    }\r\n\r\n    const dispatchSenderEmail = (newVal) => {\r\n        dispatch(updateAutoEmailSenderDetails({\r\n            ...state,\r\n            senderEmail: newVal\r\n        }))\r\n    }\r\n    \r\n    return <>\r\n        <Card style={{border: ' 1px solid #e6ebf1'}}>\r\n            <Divider orientation=\"left\" plain>Sender Details</Divider>\r\n            <Row gutter={[16, 16]}>\r\n                <Col span={6}>\r\n                    <Input\r\n                        disabled={isUpdateMode}\r\n                        status={validations.subject ? '' : 'error'}\r\n                        prefix={validations.subject ? '' : <WarningOutlined />}\r\n                        onChange={(event) => dispatchSubject(event.target.value)}\r\n                        value={state.subject} \r\n                        placeholder=\"Subject\" />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[16, 16]} style={{marginTop: 10}}>\r\n                <Col span={6}>\r\n                    <Input\r\n                        disabled={isUpdateMode}\r\n                        onChange={(event) => dispatchSenderName(event.target.value)}\r\n                        value={state.senderName} \r\n                        placeholder=\"Sender Name\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    {/*<Input*/}\r\n                    {/*    disabled={isUpdateMode}*/}\r\n                    {/*    status={validations.senderEmail ? '' : 'error'}*/}\r\n                    {/*    prefix={validations.senderEmail ? '' : <WarningOutlined />}*/}\r\n                    {/*    onChange={(event) => dispatchSenderEmail(event.target.value)}*/}\r\n                    {/*    value={state.senderEmail} */}\r\n                    {/*    placeholder=\"Sender Email\" />*/}\r\n                    <SendingEmail disabled={isUpdateMode} />\r\n                </Col>\r\n            </Row>\r\n        </Card>    \r\n    </>\r\n}\r\n\r\nexport default SenderDetails;","import React, {useEffect} from \"react\"\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport validateEmail from \"../utils/ValueValidations\";\r\nimport {Button, Col, Row} from \"antd\";\r\nimport GeneralDetails from \"./components/GeneralDetails\";\r\nimport SenderDetails from \"./components/SenderDetails\";\r\nimport {callApi} from \"../utils/apiHelper\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateAutoEmailGeneralDetails} from \"../features/autoEmails/autoEmailGeneralDetailsSlice\";\r\nimport {updateAutoEmailSenderDetails} from \"../features/autoEmails/autoEmailSenderDetailsSlice\";\r\nimport {updateSelectedTags} from \"../features/tagsSlice\";\r\nimport {stringNotNull} from \"../ScheduledCampaign/logic/scheduledCampaignsValidations\";\r\nimport {updateAutoEmailValidation} from \"../features/autoEmails/autoEmailValidationsSlice\";\r\nimport {updateSendingEmails} from \"../features/sendingEmailsSlice\";\r\n\r\nconst AutoWelcomeEmail = (props) => {\r\n\r\n    const {type, model} = props\r\n    const {getAccessTokenSilently} = useAuth0();\r\n    const history = useHistory()\r\n    \r\n    const dispatch = useDispatch();\r\n    const generalDetailsState = useSelector(x => x.autoEmailGeneralDetails);\r\n    const senderDetailsState = useSelector(x => x.autoEmailSenderDetails);\r\n    const tagsState = useSelector(x => x.tags);\r\n    const sendingEmailId = useSelector(x => x.sendingEmails);\r\n\r\n    const areFieldsValid = () => {\r\n        let validationResult = {\r\n            name: true,\r\n            emailTemplateId: true,\r\n            subject: true,\r\n            senderName: true,\r\n            tags: true\r\n        };\r\n\r\n        if (!stringNotNull(generalDetailsState.name)){\r\n            validationResult.name = false;\r\n        }\r\n\r\n        if (!stringNotNull(generalDetailsState.emailTemplateId)){\r\n            validationResult.emailTemplateId = false;\r\n        }\r\n\r\n        if (!stringNotNull(senderDetailsState.subject)){\r\n            validationResult.subject = false;\r\n        }\r\n\r\n        if (tagsState.length <= 0){\r\n            validationResult.tags = false;\r\n        }\r\n\r\n        dispatch(updateAutoEmailValidation(validationResult))\r\n        return !Object.values(validationResult).some(x => x == false);\r\n    }\r\n    \r\n    const upsert = async () => {\r\n        if (!areFieldsValid()){\r\n            return;\r\n        }\r\n        \r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/automation/upsertAutoWelcomeEmail`,\r\n            method: 'post',\r\n            request: {\r\n                ...generalDetailsState,\r\n                ...senderDetailsState,\r\n                id: model ? model.id : null,\r\n                type: type,\r\n                tags: tagsState,\r\n                replyToSendingEmailId: sendingEmailId\r\n            },\r\n            successCallback: () => {\r\n                history.push('/auto-emails')\r\n            }\r\n        })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(model) {\r\n            dispatch(updateAutoEmailGeneralDetails({\r\n                name: model.name,\r\n                emailTemplateId: model.emailTemplateId,\r\n            }))\r\n\r\n            dispatch(updateAutoEmailSenderDetails({\r\n                subject: model.subject,\r\n                senderName: model.senderName,\r\n                senderEmail: model.senderEmail\r\n            }))\r\n            \r\n            dispatch(updateSelectedTags(model.tags))\r\n            dispatch(updateSendingEmails(model.sendingEmail !== null ? model.sendingEmail.id : null));\r\n        }\r\n    }, [model])\r\n\r\n    return <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <GeneralDetails autoEmailId={model ? model.id : null} />\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: 10}}>\r\n                <Col span={24}>\r\n                    <SenderDetails />\r\n                </Col>\r\n            </Row>\r\n        <Row style={{marginTop: 10}}>\r\n            <Col>\r\n                <Button type=\"primary\" loading={false} onClick={async () => { await upsert() }}>\r\n                    Save\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default AutoWelcomeEmail","import React, {useEffect, useState} from \"react\"\r\nimport AutoWelcomeEmail from \"../AutoWelcomeEmail\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport queryString from \"query-string\";\r\nimport {Col, Row, Select} from \"antd\";\r\nimport {callApi} from \"../utils/apiHelper\";\r\n\r\nconst AutoEmailTypes = Object.freeze([{\r\n    id: 0,\r\n    name: 'Welcome Email'\r\n}])\r\n\r\nconst AutoEmailLoader = (props) => {\r\n    const {getAccessTokenSilently} = useAuth0();\r\n\r\n    const autoEmailId = queryString.parse(props.location.search).autoEmailId;\r\n    const [selectedType, setSelectedType] = useState(0)\r\n    const [model, setModel] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const getAutoEmailData = async () => {\r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/automation/getAutoWelcomeEmail?id=${autoEmailId}`,\r\n            method: 'get',\r\n            successCallback: (response) => {\r\n                setModel(response.autoEmail)\r\n                setSelectedType(response.autoEmail.type)\r\n                setLoading(false)\r\n            },\r\n            errorCallback: () => {}\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (autoEmailId) {\r\n            setLoading(true)\r\n            getAutoEmailData()\r\n        }\r\n    }, [props])\r\n\r\n    const getPageForLoad = () => <AutoWelcomeEmail loading={loading} model={model} type={selectedType}/>;\r\n\r\n    return <>\r\n        <Row>\r\n            <Col span={24}>\r\n                <Select\r\n                    style={{float: 'left'}}\r\n                    onChange={setSelectedType}\r\n                    defaultValue={selectedType}\r\n                    disabled={autoEmailId}>\r\n                    {AutoEmailTypes.map(x => <Select.Option value={x.id}>{x.name}</Select.Option>)}\r\n                </Select>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col style={{marginTop: 10}} span={24}>\r\n                {getPageForLoad()}\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default AutoEmailLoader","import React, {useState} from \"react\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {Alert, Button, Card, Col, Row} from \"antd\";\r\nimport {callApi} from \"../../utils/apiHelper\";\r\n\r\nconst PasswordManagement = () => {\r\n    const {getAccessTokenSilently} = useAuth0();\r\n    \r\n    const [resetPasswordDisabled, setResetPasswordDisabled] = useState(false)\r\n\r\n    const onClick = async () => {\r\n        setResetPasswordDisabled(true)\r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/customer/changePassword`,\r\n            method: 'post',\r\n            request: {},\r\n            successCallback: (data) => {\r\n            },\r\n            errorCallback: (error) => {\r\n                setResetPasswordDisabled(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    return <>\r\n        <Card>\r\n            <Row gutter={[16,16]}>\r\n                <Col span={8}>\r\n                    <Alert\r\n                        message='By clicking the Send Password Reset Email button you will receive an email from which you can change your password.'\r\n                        type=\"info\"\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: 10}}>\r\n                <Col span={8}>\r\n                    <Button\r\n                        type='primary'\r\n                        disabled={resetPasswordDisabled}\r\n                        onClick={() => onClick()}>\r\n                        Send Password Reset Email\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    </>\r\n}\r\n\r\nexport default PasswordManagement","import {CardElement, useElements, useStripe} from \"@stripe/react-stripe-js\";\r\nimport React from \"react\";\r\nimport {Button} from \"antd\";\r\n\r\nconst StripeCheckoutForm = (props) => {\r\n    const stripe = useStripe();\r\n    const elements = useElements()\r\n    const {submitAction, submitDisabled} = props\r\n\r\n    return (\r\n        <form id=\"paymentForm\" onSubmit={(event) => {\r\n            debugger\r\n            submitAction(event, elements, stripe)\r\n        }}>\r\n            <CardElement />\r\n            <Button shape=\"round\" htmlType=\"submit\" type=\"primary\" disabled={!stripe || submitDisabled}>Update</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default StripeCheckoutForm","import React from 'react'\r\n\r\nimport {\r\n    Elements\r\n} from '@stripe/react-stripe-js'\r\nimport {loadStripe} from '@stripe/stripe-js'\r\nimport StripeCheckoutForm from \"./StripeCheckoutForm\";\r\n\r\nconst StripeCheckout = (props) => {\r\n    const stripePromise = loadStripe(`${process.env.REACT_APP_STRIPE_KEY}`)\r\n    \r\n    return <>\r\n        <Elements stripe={stripePromise}>\r\n            <StripeCheckoutForm {...props} />\r\n        </Elements>\r\n    </>\r\n}\r\n\r\nexport default StripeCheckout","const taxData = [\r\n    {Id: 1, Country: \"Australia\", TaxCode: \"au_abn\", TaxIdText: \"Australian Business Number (AU ABN)\", Example: \"12345678912\"},\r\n    {\r\n        Id: 2,\r\n        Country: \"Australia\",\r\n        TaxCode: \"au_arn\",\r\n        TaxIdText: \"Australian Taxation Office Reference Number\",\r\n        Example: \"123456789123\"\r\n    },\r\n    {Id: 3, Country: \"Austria\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"ATU12345678\"},\r\n    {Id: 4, Country: \"Belgium\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"BE0123456789\"},\r\n    {Id: 5, Country: \"Brazil\", TaxCode: \"br_cnpj\", TaxIdText: \"Brazilian CNPJ number\", Example: \"01.234.456/5432-10\"},\r\n    {Id: 6, Country: \"Brazil\", TaxCode: \"br_cpf\", TaxIdText: \"Brazilian CPF number\", Example: \"123.456.789-87\"},\r\n    {Id: 7, Country: \"Bulgaria\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"BG0123456789\"},\r\n    {Id: 8, Country: \"Canada\", TaxCode: \"ca_bn\", TaxIdText: \"Canadian BN\", Example: \"123456789\"},\r\n    {Id: 9, Country: \"Canada\", TaxCode: \"ca_gst_hst\", TaxIdText: \"Canadian GST/HST number\", Example: \"123456789RT0002\"},\r\n    {Id: 10, Country: \"Canada\", TaxCode: \"ca_pst_bc\", TaxIdText: \"Canadian PST number\", Example: \"PST-1234-5678\"},\r\n    {Id: 11, Country: \"Canada\", TaxCode: \"ca_pst_mb\", TaxIdText: \"Canadian PST number\", Example: \"123456-7\"},\r\n    {Id: 12, Country: \"Canada\", TaxCode: \"ca_pst_sk\", TaxIdText: \"Canadian PST number\", Example: \"1234567\"},\r\n    {Id: 13, Country: \"Canada\", TaxCode: \"ca_qst\", TaxIdText: \"Canadian QST number\", Example: \"1234567890TQ1234\"},\r\n    {Id: 14, Country: \"Chile\", TaxCode: \"cl_tin\", TaxIdText: \"Chilean TIN\", Example: \"12.345.678-K\"},\r\n    {Id: 15, Country: \"Croatia\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"HR12345678912\"},\r\n    {Id: 16, Country: \"Cyprus\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"CY12345678Z\"},\r\n    {Id: 17, Country: \"Czech Republic\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"CZ1234567890\"},\r\n    {Id: 18, Country: \"Denmark\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"DK12345678\"},\r\n    {Id: 19, Country: \"Estonia\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"EE123456789\"},\r\n    {Id: 20, Country: \"Finland\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"FI12345678\"},\r\n    {Id: 21, Country: \"France\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"FRAB123456789\"},\r\n    {Id: 22, Country: \"Georgia\", TaxCode: \"ge_vat\", TaxIdText: \"Georgian VAT\", Example: \"123456789\"},\r\n    {Id: 23, Country: \"Germany\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"DE123456789\"},\r\n    {Id: 24, Country: \"Greece\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"EL123456789\"},\r\n    {Id: 25, Country: \"Hong Kong\", TaxCode: \"hk_br\", TaxIdText: \"Hong Kong BR number\", Example: \"12345678\"},\r\n    {Id: 26, Country: \"Hungary\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"HU12345678912\"},\r\n    {Id: 27, Country: \"India\", TaxCode: \"in_gst\", TaxIdText: \"Indian GST number\", Example: \"12ABCDE3456FGZH\"},\r\n    {Id: 28, Country: \"Indonesia\", TaxCode: \"id_npwp\", TaxIdText: \"Indonesian NPWP number\", Example: \"12.345.678.9-012.345\"},\r\n    {Id: 29, Country: \"Ireland\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"IE1234567AB\"},\r\n    {Id: 30, Country: \"Israel\", TaxCode: \"il_vat\", TaxIdText: \"Israel VAT\", Example: \"000012345\"},\r\n    {Id: 31, Country: \"Italy\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"IT12345678912\"},\r\n    {Id: 32, Country: \"Japan\", TaxCode: \"jp_cn\", TaxIdText: \"Japanese Corporate Number\", Example: \"1234567891234\"},\r\n    {\r\n        Id: 33,\r\n        Country: \"Japan\",\r\n        TaxCode: \"jp_rn\",\r\n        TaxIdText: \"Japanese Registered Foreign Businesses' Registration Number\",\r\n        Example: \"12345\"\r\n    },\r\n    {Id: 34, Country: \"Korea, Republic of\", TaxCode: \"kr_brn\", TaxIdText: \"Korean BRN\", Example: \"123-45-67890\"},\r\n    {Id: 35, Country: \"Latvia\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"LV12345678912\"},\r\n    {Id: 36, Country: \"Liechtenstein\", TaxCode: \"li_uid\", TaxIdText: \"Liechtensteinian UID number\", Example: \"CHE123456789\"},\r\n    {Id: 37, Country: \"Lithuania\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"LT123456789123\"},\r\n    {Id: 38, Country: \"Luxembourg\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"LU12345678\"},\r\n    {Id: 39, Country: \"Malaysia\", TaxCode: \"my_frp\", TaxIdText: \"Malaysian FRP number\", Example: \"12345678\"},\r\n    {Id: 40, Country: \"Malaysia\", TaxCode: \"my_itn\", TaxIdText: \"Malaysian ITN\tC\", Example: \"1234567890\"},\r\n    {Id: 41, Country: \"Malaysia\", TaxCode: \"my_sst\", TaxIdText: \"Malaysian SST number\", Example: \"A12-3456-78912345\"},\r\n    {Id: 42, Country: \"Malta\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"MT12345678\"},\r\n    {Id: 43, Country: \"Mexico\", TaxCode: \"mx_rfc\", TaxIdText: \"Mexican RFC number\", Example: \"ABC010203AB9\"},\r\n    {Id: 44, Country: \"Netherlands\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"NL123456789B12\"},\r\n    {Id: 45, Country: \"New Zealand\", TaxCode: \"nz_gst\", TaxIdText: \"New Zealand GST number\", Example: \"123456789\"},\r\n    {Id: 46, Country: \"Norway\", TaxCode: \"no_vat\", TaxIdText: \"Norwegian VAT number\", Example: \"123456789MVA\"},\r\n    {Id: 47, Country: \"Poland\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"PL1234567890\"},\r\n    {Id: 48, Country: \"Portugal\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"PT123456789\"},\r\n    {Id: 49, Country: \"Romania\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"RO1234567891\"},\r\n    {Id: 50, Country: \"Russian Federation\", TaxCode: \"ru_inn\", TaxIdText: \"Russian INN\", Example: \"1234567891\"},\r\n    {Id: 51, Country: \"Russian Federation\", TaxCode: \"ru_kpp\", TaxIdText: \"Russian KPP\", Example: \"123456789\"},\r\n    {Id: 53, Country: \"Saudi Arabia\", TaxCode: \"sa_vat\", TaxIdText: \"Saudi Arabia VAT\", Example: \"123456789012345\"},\r\n    {Id: 53, Country: \"Singapore\", TaxCode: \"sg_gst\", TaxIdText: \"Singaporean GST\", Example: \"M12345678X\"},\r\n    {Id: 54, Country: \"Singapore\", TaxCode: \"sg_uen\", TaxIdText: \"Singaporean UEN\", Example: \"123456789F\"},\r\n    {Id: 55, Country: \"Slovakia\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"SK1234567891\"},\r\n    {Id: 56, Country: \"Slovenia\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"SI12345678\"},\r\n    {Id: 57, Country: \"South Africa\", TaxCode: \"za_vat\", TaxIdText: \"South African VAT number\", Example: \"4123456789\"},\r\n    {Id: 58, Country: \"Spain\", TaxCode: \"es_cif\", TaxIdText: \"Spanish CIF number\", Example: \"A12345678\"},\r\n    {Id: 59, Country: \"Spain\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"ESA1234567Z\"},\r\n    {Id: 60, Country: \"Sweden\", TaxCode: \"eu_vat\", TaxIdText: \"European VAT number\", Example: \"SE123456789123\"},\r\n    {Id: 61, Country: \"Switzerland\", TaxCode: \"ch_vat\", TaxIdText: \"Switzerland VAT number\", Example: \"CHE-123.456.789 MWST\"},\r\n    {Id: 62, Country: \"Taiwan\", TaxCode: \"tw_vat\", TaxIdText: \"Taiwanese VAT\", Example: \"12345678\"},\r\n    {Id: 63, Country: \"Thailand\", TaxCode: \"th_vat\", TaxIdText: \"Thai VAT\", Example: \"1234567891234\"},\r\n    {Id: 64, Country: \"Ukraine\", TaxCode: \"ua_vat\", TaxIdText: \"Ukrainian VAT\", Example: \"123456789\"},\r\n    {Id: 65, Country: \"United Arab Emirates\",TaxCode: \"ae_trn\", TaxIdText: \"United Arab Emirates TRN\", Example: \"123456789012345\" },\r\n    {Id: 66, Country: \"United Kingdom\", TaxCode: \"gb_vat\", TaxIdText: \"United Kingdom VAT number\", Example: \"GB123456789\"},\r\n    {Id: 67, Country: \"United Kingdom\", TaxCode: \"eu_vat\", TaxIdText: \"Northern Ireland VAT number\", Example: \"XI123456789\"},\r\n    {Id: 68, Country: \"United States\", TaxCode: \"us_ein\", TaxIdText: \"United States EIN\", Example: \"12-3456789\"}\r\n]\r\n\r\nconst taxOptions = [\r\n    {Index: 1, Text: \"Australia\", Id: \"au_abn\",},\r\n    {Index: 2, Text: \"Australia\", Id: \"au_arn\",},\r\n    {Index: 3,  Text: \"Austria\", Id: \"eu_vat\",},\r\n    {Index: 4,  Text: \"Belgium\", Id: \"eu_vat\",},\r\n    {Index: 5,  Text: \"Brazil\", Id: \"br_cnpj\",},\r\n    {Index: 6,  Text: \"Brazil\", Id: \"br_cpf\",},\r\n    {Index: 7,  Text: \"Bulgaria\", Id: \"eu_vat\",},\r\n    {Index: 8,  Text: \"Canada\", Id: \"ca_bn\",},\r\n    {Index: 9,  Text: \"Canada\", Id: \"ca_gst_hst\",},\r\n    {Index: 10, Text: \"Canada\", Id: \"ca_pst_bc\",},\r\n    {Index: 11, Text: \"Canada\", Id: \"ca_pst_mb\",},\r\n    {Index: 12, Text: \"Canada\", Id: \"ca_pst_sk\",},\r\n    {Index: 13, Text: \"Canada\", Id: \"ca_qst\",},\r\n    {Index: 14, Text: \"Chile\", Id: \"cl_tin\",},\r\n    {Index: 15, Text: \"Croatia\", Id: \"eu_vat\",},\r\n    {Index: 16, Text: \"Cyprus\", Id: \"eu_vat\",},\r\n    {Index: 17, Text: \"Czech Republic\", Id: \"eu_vat\",},\r\n    {Index: 18, Text: \"Denmark\", Id: \"eu_vat\",},\r\n    {Index: 19, Text: \"Estonia\", Id: \"eu_vat\",},\r\n    {Index: 20, Text: \"Finland\", Id: \"eu_vat\",},\r\n    {Index: 21, Text: \"France\", Id: \"eu_vat\",},\r\n    {Index: 22, Text: \"Georgia\", Id: \"ge_vat\",},\r\n    {Index: 23, Text: \"Germany\", Id: \"eu_vat\",},\r\n    {Index: 24, Text: \"Greece\", Id: \"eu_vat\",},\r\n    {Index: 25, Text: \"Hong Kong\", Id: \"hk_br\",},\r\n    {Index: 26, Text: \"Hungary\", Id: \"eu_vat\",},\r\n    {Index: 27, Text: \"India\", Id: \"in_gst\",},\r\n    {Index: 28, Text: \"Indonesia\", Id: \"id_npwp\",},\r\n    {Index: 29, Text: \"Ireland\", Id: \"eu_vat\",},\r\n    {Index: 30, Text: \"Israel\", Id: \"il_vat\",},\r\n    {Index: 31, Text: \"Italy\", Id: \"eu_vat\",},\r\n    {Index: 32, Text: \"Japan\", Id: \"jp_cn\",},\r\n    {Index: 33, Text: \"Japan\", Id: \"jp_rn\",},\r\n    {Index: 34,Text: \"Korea, Republic of\", Id: \"kr_brn\",},\r\n    {Index: 35,Text: \"Latvia\", Id: \"eu_vat\",},\r\n    {Index: 36,Text: \"Liechtenstein\", Id: \"li_uid\",},\r\n    {Index: 37,Text: \"Lithuania\", Id: \"eu_vat\",},\r\n    {Index: 38,Text: \"Luxembourg\", Id: \"eu_vat\",},\r\n    {Index: 39,Text: \"Malaysia\", Id: \"my_frp\",},\r\n    {Index: 40,Text: \"Malaysia\", Id: \"my_itn\",},\r\n    {Index: 41,Text: \"Malaysia\", Id: \"my_sst\",},\r\n    {Index: 42,Text: \"Malta\", Id: \"eu_vat\",},\r\n    {Index: 43,Text: \"Mexico\", Id: \"mx_rfc\",},\r\n    {Index: 44,Text: \"Netherlands\", Id: \"eu_vat\",},\r\n    {Index: 45,Text: \"New Zealand\", Id: \"nz_gst\",},\r\n    {Index: 46,Text: \"Norway\", Id: \"no_vat\",},\r\n    {Index: 47,Text: \"Poland\", Id: \"eu_vat\",},\r\n    {Index: 48,Text: \"Portugal\", Id: \"eu_vat\",},\r\n    {Index: 49,Text: \"Romania\", Id: \"eu_vat\",},\r\n    {Index: 50,Text: \"Russian Federation\", Id: \"ru_inn\",},\r\n    {Index: 51,Text: \"Russian Federation\", Id: \"ru_kpp\",},\r\n    {Index: 53,Text: \"Saudi Arabia\", Id: \"sa_vat\",},\r\n    {Index: 53,Text: \"Singapore\", Id: \"sg_gst\",},\r\n    {Index: 54,Text: \"Singapore\", Id: \"sg_uen\",},\r\n    {Index: 55,Text: \"Slovakia\", Id: \"eu_vat\",},\r\n    {Index: 56,Text: \"Slovenia\", Id: \"eu_vat\",},\r\n    {Index: 57,Text: \"South Africa\", Id: \"za_vat\",},\r\n    {Index: 58,Text: \"Spain\", Id: \"es_cif\",},\r\n    {Index: 59,Text: \"Spain\", Id: \"eu_vat\",},\r\n    {Index: 60,Text: \"Sweden\", Id: \"eu_vat\",},\r\n    {Index: 61,Text: \"Switzerland\", Id: \"ch_vat\",},\r\n    {Index: 62,Text: \"Taiwan\", Id: \"tw_vat\",},\r\n    {Index: 63,Text: \"Thailand\", Id: \"th_vat\",},\r\n    {Index: 64,Text: \"Ukraine\", Id: \"ua_vat\",},\r\n    {Index: 65,Text: \"United Arab Emirates\", Id: \"ae_trn\",},\r\n    {Index: 66,Text: \"United Kingdom\", Id: \"gb_vat\",},\r\n    {Index: 67,Text: \"United Kingdom\", Id: \"eu_vat\",},\r\n    {Index: 68,Text: \"United States\", Id: \"us_ein\",}]    \r\n\r\nexport default {taxData, taxOptions}","import { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { Button, Modal } from 'antd';\r\nimport React from 'react';\r\nimport { callApi } from '../../utils/apiHelper';\r\nconst { confirm } = Modal;\r\n\r\nconst RemoveDiscount = ({codeId, setDiscount}) => {\r\n    const {getAccessTokenSilently} = useAuth0();\r\n\r\n    const onDelete = async () => {\r\n        const options = {\r\n            url: `${process.env.REACT_APP_API_BASE}/customer/discounts/remove`,\r\n            method: 'post',\r\n            request: {\r\n                codeId: codeId\r\n            },\r\n            successCallback: (response) => {\r\n                setDiscount(null)\r\n            },\r\n            errorCallback: (err) => {\r\n            }\r\n        }\r\n\r\n        return await callApi(getAccessTokenSilently, options)\r\n    }\r\n\r\n    const showDeleteConfirm = () => {\r\n        confirm({\r\n            title: 'Are you sure you want to remove your current discount?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: 'The proccess is irreversible, and you will not be able to use the same discount code again!',\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            async onOk () {\r\n                try {\r\n                    await onDelete();\r\n                } catch {\r\n                    return console.log('Oops errors!');\r\n                }\r\n            },\r\n            onCancel() { },\r\n        });\r\n      };\r\n\r\n    return <>\r\n        <Button onClick={showDeleteConfirm} size=\"small\" danger>Remove Discount</Button>\r\n    </>\r\n}\r\n\r\nexport default RemoveDiscount;","import React, {useEffect, useState} from 'react'\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {getConfig} from \"../../config\";\r\nimport {Alert, Button, Card, Col, Input, Row} from \"antd\";\r\nimport {MinusOutlined, PlusOutlined, RocketOutlined} from \"@ant-design/icons\";\r\nimport moment from 'moment';\r\nimport RemoveDiscount from './RemoveDiscount';\r\n\r\nconst Tiers = (props) => {\r\n    const {tiers, upgradeDisabled, discount, setDiscount} = props\r\n\r\n    const {getAccessTokenSilently} = useAuth0();\r\n    const config = getConfig()\r\n\r\n    const [price, setPrice] = useState(\"-\")\r\n    const [discountPrice, setDiscountPrice] = useState('');\r\n    const [subscribersVolume, setSubscribersVolume] = useState(5000)\r\n    const [upgradeClicked, setUpgradeClicked] = useState(false)\r\n    const [allowedEmails, setAllowedEmails] = useState(10000)\r\n\r\n    const onVolumeChange = (volume) => {\r\n        let price = tiers[0].flatAmount\r\n        let emails = tiers[0].emails\r\n\r\n        for (let index = 1; index < tiers.length; index++) {\r\n            if (volume > tiers[index - 1].upTo && tiers[index].upTo === null){\r\n                price = tiers[tiers.length - 1].flatAmount\r\n                emails = tiers[tiers.length - 1].emails\r\n                break;\r\n            }\r\n            \r\n            if (volume > tiers[index - 1].upTo && volume <= tiers[index].upTo) {\r\n                price = tiers[index].flatAmount\r\n                emails = tiers[index].emails\r\n            }\r\n        }\r\n\r\n        setSubscribersVolume(volume)\r\n        setAllowedEmails(emails)\r\n        const formattedPrice = price !== 0 ? `${price}`.substring(0, `${price}`.length - 2) : \"-\"\r\n        setPrice(formattedPrice)\r\n\r\n        if(discount){\r\n            const discountLeftOver = new Number(price) * (new Number(discount.percentageOff) / 100);\r\n            const formattedPrice = price !== 0 ? `${price - discountLeftOver}`.substring(0, `${price - discountLeftOver}`.length - 2) : \"-\"\r\n            setDiscountPrice(formattedPrice)\r\n        }\r\n    }\r\n\r\n    const getPriceView = () => {\r\n        return price === '-' ? `${price}` : `$${price}`\r\n    }\r\n\r\n    const getDiscountPriceView = () => {\r\n        return discountPrice === '-' ? `${discountPrice}` : `$${discountPrice}`\r\n    }\r\n\r\n    const callApi = async (options) => {\r\n        const accessToken = await getAccessTokenSilently({\r\n            audience: config.audience,\r\n            scope: \"read:current_user profile email openid\",\r\n        });\r\n\r\n        fetch(options.uri, {\r\n            method: options.method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${accessToken}`,\r\n            },\r\n            body: options.data ? JSON.stringify(options.data) : null\r\n        })\r\n            .then(res => {\r\n                return res.json()\r\n            })\r\n            .then(response => {\r\n                if (response.status >= 400) {\r\n                    options.errorHandler(\"\")\r\n                } else {\r\n                    options.callback(response)\r\n                }\r\n\r\n                if (options.changeAvailability) {\r\n                    options.changeAvailability(response)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                options.errorHandler(err)\r\n            })\r\n    }\r\n\r\n    const upgrade = async (event) => {\r\n        event.preventDefault()\r\n        setUpgradeClicked(true)\r\n        const options = {\r\n            uri: `${process.env.REACT_APP_API_BASE}/customer/upgrade`,\r\n            method: 'post',\r\n            data: {\r\n                quantity: subscribersVolume\r\n            },\r\n            callback: (response) => {\r\n                setUpgradeClicked(false)\r\n            },\r\n            errorHandler: (err) => {\r\n                console.log(err.message)\r\n            }\r\n        }\r\n        await callApi(options)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!tiers.length){\r\n            setPrice(\"-\")\r\n            return;\r\n        }\r\n\r\n        const price = `${tiers[0].flatAmount}`.substring(0, `${tiers[0].flatAmount}`.length - 2)\r\n        setPrice(price)\r\n        \r\n        if(discount){\r\n            const flatAmount = tiers[0].flatAmount;\r\n            const discountLeftOver = new Number(flatAmount) * (new Number(discount.percentageOff) / 100);\r\n            const formattedPrice = price !== 0 ? `${flatAmount - discountLeftOver}`.substring(0, `${flatAmount - discountLeftOver}`.length - 2) : \"-\"\r\n            setDiscountPrice(formattedPrice)\r\n        }\r\n    }, [tiers, discount])\r\n\r\n    return <>\r\n        <Card>\r\n            {!discount ? '' : <>\r\n                <Row gutter={[16,16]}>\r\n                    <Col span={24}>\r\n                        <Alert\r\n                            style={{\r\n                                textAlign: 'left',\r\n                                fontSize: '16px'\r\n                            }}\r\n                            type=\"success\"\r\n                            showIcon\r\n                            icon={<RocketOutlined />}\r\n                            message={`You applied a discount code ${discount.code} for ${discount.percentageOff}% off all plans. Expires on ${moment(discount.expirationDate).format('MM/DD/YYYY')}`}\r\n                            action={\r\n                                <RemoveDiscount codeId={discount.codeId} setDiscount={setDiscount} />\r\n                            }\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>}\r\n            <Row gutter={[16,16]}>\r\n                <Col span={24}>\r\n                    <span style={{fontSize: !discount ? '50px' : '30px', fontWeight: 200, textDecoration: !discount ? 'none' : 'line-through'}}>{getPriceView()} </span>\r\n                </Col>\r\n                {!discount ? '' : <>\r\n                    <Col span={24}>\r\n                        <span style={{fontSize: '50px', fontWeight: 200}}>{getDiscountPriceView()} </span>\r\n                    </Col>\r\n                </>}\r\n            </Row>\r\n            <Row style={{marginTop: 10}} gutter={[16,16]}>\r\n                <Col span={12}>\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <span style={{fontSize: '20px'}}>Subscribers</span>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginTop: 10}} gutter={[16,16]}>\r\n                        <Col span={24}>\r\n                            <Input\r\n                                style={{textAlign: 'center'}}\r\n                                value={subscribersVolume}\r\n                                onChange={event => onVolumeChange(event.target.value)}\r\n                                size=\"large\"\r\n                                addonBefore={<>\r\n                                    <Button \r\n                                        icon={<MinusOutlined />} \r\n                                        type={\"text\"}\r\n                                        onClick={() => {\r\n                                            if (new Number(subscribersVolume) - 5000 >= 0){\r\n                                                onVolumeChange(new Number(subscribersVolume) - 5000)   \r\n                                            }else {\r\n                                                onVolumeChange(0)\r\n                                            }\r\n                                        }} />\r\n                                </>}\r\n                                addonAfter={<>\r\n                                    <Button \r\n                                        icon={<PlusOutlined />} \r\n                                        type={\"text\"}\r\n                                        onClick={() => {\r\n                                            debugger\r\n                                            onVolumeChange(new Number(subscribersVolume) + 5000)\r\n                                        }} />\r\n                                </>}/>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Row gutter={[16,16]}>\r\n                        <Col span={24}>\r\n                            <span style={{fontSize: '20px'}}>Emails</span>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginTop: 10}} gutter={[16,16]}>\r\n                        <Col span={24}>\r\n                            <Input\r\n                                style={{textAlign: 'center'}} \r\n                                size=\"large\" \r\n                                disabled \r\n                                value={allowedEmails} />\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: 10}}>\r\n                <Col span={24}>\r\n                    <Alert\r\n                        message=\"In order to Upgrade your account, you first need to fill your invoice and payment details.\"\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: 10}}>\r\n                <Col span={24}>\r\n\r\n                    <Button\r\n                        shape=\"round\" \r\n                        type=\"primary\"\r\n                        size=\"large\"\r\n                        loading={upgradeClicked}\r\n                        disabled={upgradeDisabled || upgradeClicked}\r\n                        onClick={(event) => upgrade(event)}>\r\n                        Upgrade\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    </>\r\n}\r\n\r\nexport default Tiers","import React, {useEffect, useState} from \"react\";\r\nimport StripeCheckout from \"./StripeCheckout\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport taxOptions from \"../../utils/taxOptions\";\r\nimport Tiers from \"./Tiers\";\r\nimport {CardElement} from \"@stripe/react-stripe-js\";\r\nimport {callApi} from \"../../utils/apiHelper\";\r\nimport {Alert, Card, Checkbox, Col, Input, Row, Select, Spin, message} from \"antd\";\r\nimport { getAllCountries } from \"../../utils/contriesProvider\";\r\n\r\nconst BillingInformation = () => {\r\n    const {getAccessTokenSilently} = useAuth0();\r\n\r\n    const [failed, setFailed] = useState(false)\r\n    const [messageApi, contextHolder] = message.useMessage();\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    const [tiers, setTiers] = useState([])\r\n    const [taxTypePlaceholder, setTypePlaceholder] = useState('')\r\n    const [upgradeDisabled, setUpgradeDisabled] = useState(true)\r\n    const [discountChecked, setDiscountChecked] = useState(false);\r\n    const [validationState, setValidationState] = useState({})\r\n    const [billingInfo, setBillingInfo] = useState({\r\n        taxCodeIndex: '',\r\n        businessName: '',\r\n        taxId: '',\r\n        taxCode: '',\r\n        addressCountry: null,\r\n        addressCity: '',\r\n        addressLine1: '',\r\n        addressLine2: '',\r\n        addressPostalCode: '',\r\n        addressState: '',\r\n        numberOfSubscribers: 5000,\r\n        amount: '$20',\r\n        discountCode: null\r\n    })\r\n    const [discount, setDiscount] = useState()\r\n    const [buttonsAvailability, setButtonsAvailability] = useState({\r\n        updateCustomerDetailsDisabled: false\r\n    })\r\n\r\n    const getTaxCodeData = (value) => {\r\n        const taxData = taxOptions.taxData.filter(x => {\r\n            return x.Id === value\r\n        })[0]\r\n\r\n        setTypePlaceholder(taxData.Example)\r\n        return taxData\r\n    }\r\n\r\n    const setTaxCodeData = (value) => {\r\n        const taxData = taxOptions.taxData.filter(x => {\r\n            return x.Id === value\r\n        })[0]\r\n\r\n        setBillingInfo({\r\n            ...billingInfo,\r\n            taxCodeIndex: value,\r\n            taxCode: taxData.TaxCode\r\n        })\r\n\r\n        setTypePlaceholder(taxData.Example)\r\n    }\r\n\r\n    const getPrices = async () => {\r\n        const options = {\r\n            url: `${process.env.REACT_APP_API_BASE}/prices/get`,\r\n            method: 'get',\r\n            successCallback: (response) => {\r\n                setTiers(response)\r\n            },\r\n            errorCallback: (err) => {\r\n                console.log(err.message)\r\n            }\r\n        }\r\n\r\n        await callApi(getAccessTokenSilently, options)\r\n    }\r\n\r\n    const getCustomerDetails = async () => {\r\n        const options = {\r\n            url: `${process.env.REACT_APP_API_BASE}/customer/get/business`,\r\n            method: 'get',\r\n            successCallback: (response) => {\r\n                const businessDetails = response.businessDetails;\r\n                const discountCodeInfo = response.discount;\r\n\r\n                const taxCodeData = getTaxCodeData(1)\r\n\r\n                setBillingInfo({\r\n                    ...billingInfo,\r\n                    taxCodeIndex: 1,\r\n                    taxCode: taxCodeData.TaxCode\r\n                })\r\n\r\n                if(businessDetails){\r\n                    const taxCodeData = getTaxCodeData(!businessDetails.tax ? 1 : businessDetails.tax.taxCodeIndex)\r\n\r\n                    setBillingInfo({\r\n                        taxId: !businessDetails.tax ? '' : businessDetails.tax.id,\r\n                        businessName: businessDetails.businessName,\r\n                        taxCodeIndex: !businessDetails.tax ? 1 : businessDetails.tax.taxCodeIndex,\r\n                        taxCode: taxCodeData.TaxCode,\r\n                        addressCountry: businessDetails.address ? businessDetails.address.countryCode : null,\r\n                        addressCity: businessDetails.address ? businessDetails.address.city : '',\r\n                        addressLine1: businessDetails.address ? businessDetails.address.addressLine1 : '',\r\n                        addressLine2: businessDetails.address ? businessDetails.address.addressLine2 : '',\r\n                        addressPostalCode: businessDetails.address ? businessDetails.address.postalCode : '',\r\n                        addressState: businessDetails.address ? businessDetails.address.state : '',\r\n                    })\r\n\r\n                    const customerCreated = businessDetails.businessName !== null && businessDetails.businessName.length !== 0;\r\n                    setUpgradeDisabled(!customerCreated || !response.cardAdded);\r\n                }\r\n                if(discountCodeInfo){\r\n                    setDiscount(!discountCodeInfo.codeId ? null : discountCodeInfo);\r\n                }\r\n\r\n                setLoading(false);\r\n            },\r\n            errorCallback: (err) => {\r\n                console.log(err.message)\r\n            }\r\n        }\r\n\r\n        await callApi(getAccessTokenSilently, options)\r\n    }\r\n\r\n    const confirmCard = async (clientSecret, stripe, elements, paymentMethod) => {\r\n        const confirmResponse = await stripe.confirmCardSetup(clientSecret, {\r\n            payment_method: paymentMethod.id\r\n        })\r\n\r\n        if (confirmResponse.setupIntent.status === 'succeeded') {\r\n            const options = {\r\n                url: `${process.env.REACT_APP_API_BASE}/customer/paymentmethod/confirm`,\r\n                method: 'post',\r\n                successCallback: (response) => {\r\n                    setUpgradeDisabled(false)\r\n                },\r\n                errorCallback: (err) => {\r\n                    setFailed(true)\r\n                }\r\n            }\r\n\r\n            return await callApi(getAccessTokenSilently, options)\r\n        }\r\n    }\r\n\r\n    const validateBillingDetails = () => {\r\n        debugger\r\n        const currentValidationResult = {};\r\n        const businessNameValid = billingInfo.businessName && billingInfo.businessName.length !== 0;\r\n\r\n        if (!businessNameValid){\r\n            currentValidationResult['businessName'] = true;\r\n        }else{\r\n            currentValidationResult['businessName'] = false;\r\n        }\r\n        \r\n        const countryCodeIsValid = billingInfo.addressCountry && billingInfo.addressCountry.length !== 0;\r\n\r\n        if (!countryCodeIsValid){\r\n            currentValidationResult['addressCountry'] = true;\r\n        }else{\r\n            currentValidationResult['addressCountry'] = false;\r\n        }\r\n\r\n        const addressCity = billingInfo.addressCity && billingInfo.addressCity.length !== 0;\r\n        if (!addressCity){\r\n            currentValidationResult['addressCity'] = true;\r\n        }else{\r\n            currentValidationResult['addressCity'] = false;\r\n        }\r\n\r\n        const addressLine1 = billingInfo.addressLine1 && billingInfo.addressLine1.length !== 0;\r\n        if (!addressLine1){\r\n            currentValidationResult['addressLine1'] = true;\r\n        }else{\r\n            currentValidationResult['addressLine1'] = false;\r\n        }\r\n\r\n        const addressPostalCode = billingInfo.addressPostalCode && billingInfo.addressPostalCode.length !== 0;\r\n        if (!addressPostalCode){\r\n            currentValidationResult['addressPostalCode'] = true;\r\n        }else{\r\n            currentValidationResult['addressPostalCode'] = false;\r\n        }\r\n\r\n        setValidationState(currentValidationResult)\r\n\r\n        return Object.values(currentValidationResult).every(x => !x);\r\n    }\r\n\r\n    const updateBillingDetails = async (paymentMethodResponse, stripe, elements) => {\r\n        debugger\r\n        if(!validateBillingDetails()){\r\n            setButtonsAvailability({...buttonsAvailability, updateCustomerDetailsDisabled: false})\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            businessName: billingInfo.businessName,\r\n            taxCodeIndex: billingInfo.taxCodeIndex,\r\n            taxId: billingInfo.taxId,\r\n            taxCode: billingInfo.taxCode,\r\n            paymentMethod: paymentMethodResponse.paymentMethod ? paymentMethodResponse.paymentMethod.id : null,\r\n            discountCode: discountChecked ? billingInfo.discountCode : null,\r\n            address: {\r\n                countryCode: billingInfo.addressCountry,\r\n                city: billingInfo.addressCity,\r\n                addressLine1: billingInfo.addressLine1,\r\n                addressLine2: billingInfo.addressLine2,\r\n                postalCode: billingInfo.addressPostalCode,\r\n                state: billingInfo.addressState,\r\n            }\r\n        }\r\n\r\n        const options = {\r\n            url: `${process.env.REACT_APP_API_BASE}/customer/update/business`,\r\n            method: 'post',\r\n            request: data,\r\n            successCallback: (response) => {\r\n                setButtonsAvailability({...buttonsAvailability, updateCustomerDetailsDisabled: false})\r\n                if(response.status == 400){\r\n                    messageApi.open({\r\n                        type: 'error',\r\n                        content: response.message,\r\n                    });\r\n                    return;\r\n                }\r\n                if (paymentMethodResponse.paymentMethod !== undefined && paymentMethodResponse.paymentMethod !== null) {\r\n                    confirmCard(response.clientSecret, stripe, elements, paymentMethodResponse.paymentMethod)\r\n                }\r\n\r\n                if(response.discount){\r\n                    setDiscount(response.discount)\r\n                }\r\n            },\r\n            errorCallback: (err) => {\r\n                console.log(err)\r\n                setFailed(true)\r\n                setButtonsAvailability({...buttonsAvailability, updateCustomerDetailsDisabled: false})\r\n            }\r\n        }\r\n\r\n        return await callApi(getAccessTokenSilently, options)\r\n    }\r\n\r\n    const updateCustomerDetails = async (event, elements, stripe) => {\r\n        event.preventDefault()\r\n\r\n        const paymentMethodResponse = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: elements.getElement(CardElement)\r\n        })\r\n\r\n        if (paymentMethodResponse.error && paymentMethodResponse.error.type !== 'validation_error') {\r\n            setFailed(true)\r\n            setErrorMessage(paymentMethodResponse.error.message)\r\n            return\r\n        }\r\n\r\n        await updateBillingDetails(paymentMethodResponse, stripe, elements)\r\n    }\r\n\r\n    const formatTaxCode = (taxCode) => {\r\n        return taxCode.replaceAll('_', ' ').toUpperCase()\r\n    }\r\n\r\n    const getTaxSelectMenu = () => {\r\n        return taxOptions.taxOptions.map(x => {\r\n            return <Select.Option value={x.Index}>\r\n                {x.Text + ' - ' + formatTaxCode(x.Id)}\r\n            </Select.Option>\r\n        })\r\n    }\r\n\r\n    const getCountriesSelectMenu = () => {\r\n        const allCountries = getAllCountries();\r\n        return allCountries.map(x => {\r\n            return <Select.Option value={x.CountryCode}>\r\n                {x.CountryName}\r\n            </Select.Option>\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPrices()\r\n        getCustomerDetails()\r\n    }, [])\r\n\r\n    return <>\r\n        <Spin spinning={loading}>\r\n            {contextHolder}\r\n            <Row gutter={[16, 16]}>\r\n                <Col span={8}>\r\n                    <Row gutter={[16, 16]}>\r\n                        <Col span={24}>\r\n                            <Card title=\"Invoice Settings\">\r\n                                <Row gutter={[16, 16]}>\r\n                                    <Col span={24}>\r\n                                        <Input\r\n                                            status={!validationState.businessName ? '' : 'error'}\r\n                                            placeholder=\"Business Name\"\r\n                                            value={billingInfo.businessName}\r\n                                            onChange={(event) => {\r\n                                                setBillingInfo({...billingInfo, businessName: event.target.value})\r\n                                            }}/>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                                    <Col span={12}>\r\n                                        <Select\r\n                                            style={{float: 'left', width: '100%', textAlign: 'left'}}\r\n                                            value={billingInfo.taxCodeIndex}\r\n                                            onChange={(x) => setTaxCodeData(x)}>\r\n                                            {getTaxSelectMenu()}\r\n                                        </Select>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Input\r\n                                            value={billingInfo.taxId}\r\n                                            onChange={(event) => {\r\n                                                setBillingInfo({...billingInfo, taxId: event.target.value})\r\n                                            }}\r\n                                            placeholder={taxTypePlaceholder}/>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                                    <Col span={24}>\r\n                                        <Select\r\n                                            status={!validationState.addressCountry ? '' : 'error'}\r\n                                            placeholder='Country'\r\n                                            style={{float: 'left', width: '100%', textAlign: 'left'}}\r\n                                            value={billingInfo.addressCountry}\r\n                                            onChange={(val) => setBillingInfo({...billingInfo, addressCountry: val})}\r\n                                            >\r\n                                            {getCountriesSelectMenu()}\r\n                                        </Select>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                                    <Col span={24}>\r\n                                        <Input\r\n                                            status={!validationState.addressCity ? '' : 'error'}\r\n                                            value={billingInfo.addressCity}\r\n                                            onChange={(event) => {\r\n                                                setBillingInfo({...billingInfo, addressCity: event.target.value})\r\n                                            }}\r\n                                            placeholder={'City'}/>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                                    <Col span={24}>\r\n                                        <Input\r\n                                            status={!validationState.addressLine1 ? '' : 'error'}\r\n                                            value={billingInfo.addressLine1}\r\n                                            onChange={(event) => {\r\n                                                setBillingInfo({...billingInfo, addressLine1: event.target.value})\r\n                                            }}\r\n                                            placeholder={'Address Line 1'}/>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                                    <Col span={24}>\r\n                                        <Input\r\n                                            value={billingInfo.addressLine2}\r\n                                            onChange={(event) => {\r\n                                                setBillingInfo({...billingInfo, addressLine2: event.target.value})\r\n                                            }}\r\n                                            placeholder={'(Optional) Address Line 2'}/>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                                    <Col span={24}>\r\n                                        <Input\r\n                                            status={!validationState.addressPostalCode ? '' : 'error'}\r\n                                            value={billingInfo.addressPostalCode}\r\n                                            onChange={(event) => {\r\n                                                setBillingInfo({...billingInfo, addressPostalCode: event.target.value})\r\n                                            }}\r\n                                            placeholder={'Postal Code'}/>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                                    <Col span={24}>\r\n                                        <Input\r\n                                            value={billingInfo.addressState}\r\n                                            onChange={(event) => {\r\n                                                setBillingInfo({...billingInfo, addressState: event.target.value})\r\n                                            }}\r\n                                            placeholder={'(Optional) State'}/>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                                    <Col>\r\n                                        <Checkbox checked={discountChecked} onChange={x => setDiscountChecked(x.target.checked)}>\r\n                                            I have a discount code\r\n                                        </Checkbox>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                                    <Col span={18}>\r\n                                        <Input\r\n                                            value={billingInfo.discountCode}\r\n                                            disabled={!discountChecked}\r\n                                            onChange={(event) => {\r\n                                                setBillingInfo({...billingInfo, discountCode: event.target.value})\r\n                                            }}\r\n                                            placeholder={'Enter your discount code...'}/>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{marginTop: 10}} gutter={[16,16]}>\r\n                        <Col span={24}>\r\n                            <Card title=\"Payment Details\">\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Alert\r\n                                            message=\"Provide a card number only in case you want to change your current billing card.\">  </Alert>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <StripeCheckout\r\n                                            submitDisabled={buttonsAvailability.updateCustomerDetailsDisabled}\r\n                                            submitAction={async (event, elements, stripe) => {\r\n                                                setButtonsAvailability({\r\n                                                    ...buttonsAvailability,\r\n                                                    updateCustomerDetailsDisabled: true\r\n                                                })\r\n                                                await updateCustomerDetails(event, elements, stripe)\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col span={16}>\r\n                    <Tiers discount={discount} setDiscount={setDiscount} upgradeDisabled={upgradeDisabled} tiers={tiers}/>\r\n                </Col>\r\n            </Row>\r\n        </Spin>\r\n    </>\r\n}\r\n\r\nexport default BillingInformation","export const getAllCountries = () => {\r\n    return Object.freeze([\r\n        {\r\n          \"CountryCode\": \"AD\",\r\n          \"CountryName\": \"Andorra\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"AE\",\r\n          \"CountryName\": \"United Arab Emirates\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"AF\",\r\n          \"CountryName\": \"Afghanistan\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"AG\",\r\n          \"CountryName\": \"Antigua and Barbuda\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"AI\",\r\n          \"CountryName\": \"Anguilla\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"AL\",\r\n          \"CountryName\": \"Albania\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"AM\",\r\n          \"CountryName\": \"Armenia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"AO\",\r\n          \"CountryName\": \"Angola\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"AQ\",\r\n          \"CountryName\": \"Antarctica\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"AR\",\r\n          \"CountryName\": \"Argentina\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"AS\",\r\n          \"CountryName\": \"American Samoa\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"AT\",\r\n          \"CountryName\": \"Austria\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"AU\",\r\n          \"CountryName\": \"Australia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"AW\",\r\n          \"CountryName\": \"Aruba\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"AX\",\r\n          \"CountryName\": \"Åland Islands\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"AZ\",\r\n          \"CountryName\": \"Azerbaijan\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BA\",\r\n          \"CountryName\": \"Bosnia and Herzegovina\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BB\",\r\n          \"CountryName\": \"Barbados\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BD\",\r\n          \"CountryName\": \"Bangladesh\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BE\",\r\n          \"CountryName\": \"Belgium\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BF\",\r\n          \"CountryName\": \"Burkina Faso\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BG\",\r\n          \"CountryName\": \"Bulgaria\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BH\",\r\n          \"CountryName\": \"Bahrain\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BI\",\r\n          \"CountryName\": \"Burundi\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BJ\",\r\n          \"CountryName\": \"Benin\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BL\",\r\n          \"CountryName\": \"Saint Barthélemy\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BM\",\r\n          \"CountryName\": \"Bermuda\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BN\",\r\n          \"CountryName\": \"Brunei Darussalam\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BO\",\r\n          \"CountryName\": \"Bolivia (Plurinational State of)\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BQ\",\r\n          \"CountryName\": \"Bonaire\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BR\",\r\n          \"CountryName\": \"Brazil\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BS\",\r\n          \"CountryName\": \"Bahamas\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BT\",\r\n          \"CountryName\": \"Bhutan\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BV\",\r\n          \"CountryName\": \"Bouvet Island\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BW\",\r\n          \"CountryName\": \"Botswana\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BY\",\r\n          \"CountryName\": \"Belarus\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"BZ\",\r\n          \"CountryName\": \"Belize\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CA\",\r\n          \"CountryName\": \"Canada\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CC\",\r\n          \"CountryName\": \"Cocos (Keeling) Islands\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CD\",\r\n          \"CountryName\": \"Congo\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CF\",\r\n          \"CountryName\": \"Central African Republic\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CG\",\r\n          \"CountryName\": \"Congo\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CH\",\r\n          \"CountryName\": \"Switzerland\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CI\",\r\n          \"CountryName\": \"Côte d'Ivoire\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CK\",\r\n          \"CountryName\": \"Cook Islands\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CL\",\r\n          \"CountryName\": \"Chile\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CM\",\r\n          \"CountryName\": \"Cameroon\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CN\",\r\n          \"CountryName\": \"China\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CO\",\r\n          \"CountryName\": \"Colombia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CR\",\r\n          \"CountryName\": \"Costa Rica\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CU\",\r\n          \"CountryName\": \"Cuba\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CV\",\r\n          \"CountryName\": \"Cabo Verde\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CW\",\r\n          \"CountryName\": \"Curaçao\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CX\",\r\n          \"CountryName\": \"Christmas Island\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CY\",\r\n          \"CountryName\": \"Cyprus\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"CZ\",\r\n          \"CountryName\": \"Czechia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"DE\",\r\n          \"CountryName\": \"Germany\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"DJ\",\r\n          \"CountryName\": \"Djibouti\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"DK\",\r\n          \"CountryName\": \"Denmark\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"DM\",\r\n          \"CountryName\": \"Dominica\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"DO\",\r\n          \"CountryName\": \"Dominican Republic\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"DZ\",\r\n          \"CountryName\": \"Algeria\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"EC\",\r\n          \"CountryName\": \"Ecuador\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"EE\",\r\n          \"CountryName\": \"Estonia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"EG\",\r\n          \"CountryName\": \"Egypt\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"EH\",\r\n          \"CountryName\": \"Western Sahara\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"ER\",\r\n          \"CountryName\": \"Eritrea\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"ES\",\r\n          \"CountryName\": \"Spain\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"ET\",\r\n          \"CountryName\": \"Ethiopia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"FI\",\r\n          \"CountryName\": \"Finland\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"FJ\",\r\n          \"CountryName\": \"Fiji\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"FK\",\r\n          \"CountryName\": \"Falkland Islands (Malvinas)\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"FM\",\r\n          \"CountryName\": \"Micronesia (Federated States of)\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"FO\",\r\n          \"CountryName\": \"Faroe Islands\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"FR\",\r\n          \"CountryName\": \"France\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GA\",\r\n          \"CountryName\": \"Gabon\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GB\",\r\n          \"CountryName\": \"United Kingdom of Great Britain and Northern Ireland\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GD\",\r\n          \"CountryName\": \"Grenada\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GE\",\r\n          \"CountryName\": \"Georgia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GF\",\r\n          \"CountryName\": \"French Guiana\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GG\",\r\n          \"CountryName\": \"Guernsey\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GH\",\r\n          \"CountryName\": \"Ghana\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GI\",\r\n          \"CountryName\": \"Gibraltar\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GL\",\r\n          \"CountryName\": \"Greenland\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GM\",\r\n          \"CountryName\": \"Gambia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GN\",\r\n          \"CountryName\": \"Guinea\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GP\",\r\n          \"CountryName\": \"Guadeloupe\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GQ\",\r\n          \"CountryName\": \"Equatorial Guinea\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GR\",\r\n          \"CountryName\": \"Greece\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GS\",\r\n          \"CountryName\": \"South Georgia and the South Sandwich Islands\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GT\",\r\n          \"CountryName\": \"Guatemala\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GU\",\r\n          \"CountryName\": \"Guam\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GW\",\r\n          \"CountryName\": \"Guinea-Bissau\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"GY\",\r\n          \"CountryName\": \"Guyana\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"HK\",\r\n          \"CountryName\": \"Hong Kong\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"HM\",\r\n          \"CountryName\": \"Heard Island and McDonald Islands\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"HN\",\r\n          \"CountryName\": \"Honduras\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"HR\",\r\n          \"CountryName\": \"Croatia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"HT\",\r\n          \"CountryName\": \"Haiti\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"HU\",\r\n          \"CountryName\": \"Hungary\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"ID\",\r\n          \"CountryName\": \"Indonesia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"IE\",\r\n          \"CountryName\": \"Ireland\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"IL\",\r\n          \"CountryName\": \"Israel\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"IM\",\r\n          \"CountryName\": \"Isle of Man\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"IN\",\r\n          \"CountryName\": \"India\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"IO\",\r\n          \"CountryName\": \"British Indian Ocean Territory\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"IQ\",\r\n          \"CountryName\": \"Iraq\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"IR\",\r\n          \"CountryName\": \"Iran (Islamic Republic of)\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"IS\",\r\n          \"CountryName\": \"Iceland\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"IT\",\r\n          \"CountryName\": \"Italy\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"JE\",\r\n          \"CountryName\": \"Jersey\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"JM\",\r\n          \"CountryName\": \"Jamaica\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"JO\",\r\n          \"CountryName\": \"Jordan\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"JP\",\r\n          \"CountryName\": \"Japan\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"KE\",\r\n          \"CountryName\": \"Kenya\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"KG\",\r\n          \"CountryName\": \"Kyrgyzstan\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"KH\",\r\n          \"CountryName\": \"Cambodia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"KI\",\r\n          \"CountryName\": \"Kiribati\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"KM\",\r\n          \"CountryName\": \"Comoros\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"KN\",\r\n          \"CountryName\": \"Saint Kitts and Nevis\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"KP\",\r\n          \"CountryName\": \"Korea (Democratic People's Republic of)\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"KR\",\r\n          \"CountryName\": \"Korea\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"KW\",\r\n          \"CountryName\": \"Kuwait\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"KY\",\r\n          \"CountryName\": \"Cayman Islands\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"KZ\",\r\n          \"CountryName\": \"Kazakhstan\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"LA\",\r\n          \"CountryName\": \"Lao People's Democratic Republic\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"LB\",\r\n          \"CountryName\": \"Lebanon\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"LC\",\r\n          \"CountryName\": \"Saint Lucia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"LI\",\r\n          \"CountryName\": \"Liechtenstein\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"LK\",\r\n          \"CountryName\": \"Sri Lanka\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"LR\",\r\n          \"CountryName\": \"Liberia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"LS\",\r\n          \"CountryName\": \"Lesotho\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"LT\",\r\n          \"CountryName\": \"Lithuania\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"LU\",\r\n          \"CountryName\": \"Luxembourg\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"LV\",\r\n          \"CountryName\": \"Latvia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"LY\",\r\n          \"CountryName\": \"Libya\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MA\",\r\n          \"CountryName\": \"Morocco\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MC\",\r\n          \"CountryName\": \"Monaco\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MD\",\r\n          \"CountryName\": \"Moldova\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"ME\",\r\n          \"CountryName\": \"Montenegro\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MF\",\r\n          \"CountryName\": \"Saint Martin (French part)\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MG\",\r\n          \"CountryName\": \"Madagascar\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MH\",\r\n          \"CountryName\": \"Marshall Islands\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MK\",\r\n          \"CountryName\": \"North Macedonia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"ML\",\r\n          \"CountryName\": \"Mali\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MM\",\r\n          \"CountryName\": \"Myanmar\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MN\",\r\n          \"CountryName\": \"Mongolia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MO\",\r\n          \"CountryName\": \"Macao\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MP\",\r\n          \"CountryName\": \"Northern Mariana Islands\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MQ\",\r\n          \"CountryName\": \"Martinique\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MR\",\r\n          \"CountryName\": \"Mauritania\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MS\",\r\n          \"CountryName\": \"Montserrat\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MT\",\r\n          \"CountryName\": \"Malta\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MU\",\r\n          \"CountryName\": \"Mauritius\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MV\",\r\n          \"CountryName\": \"Maldives\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MW\",\r\n          \"CountryName\": \"Malawi\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MX\",\r\n          \"CountryName\": \"Mexico\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MY\",\r\n          \"CountryName\": \"Malaysia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"MZ\",\r\n          \"CountryName\": \"Mozambique\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"NA\",\r\n          \"CountryName\": \"Namibia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"NC\",\r\n          \"CountryName\": \"New Caledonia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"NE\",\r\n          \"CountryName\": \"Niger\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"NF\",\r\n          \"CountryName\": \"Norfolk Island\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"NG\",\r\n          \"CountryName\": \"Nigeria\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"NI\",\r\n          \"CountryName\": \"Nicaragua\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"NL\",\r\n          \"CountryName\": \"Netherlands\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"NO\",\r\n          \"CountryName\": \"Norway\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"NP\",\r\n          \"CountryName\": \"Nepal\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"NR\",\r\n          \"CountryName\": \"Nauru\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"NU\",\r\n          \"CountryName\": \"Niue\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"NZ\",\r\n          \"CountryName\": \"New Zealand\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"OM\",\r\n          \"CountryName\": \"Oman\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"PA\",\r\n          \"CountryName\": \"Panama\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"PE\",\r\n          \"CountryName\": \"Peru\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"PF\",\r\n          \"CountryName\": \"French Polynesia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"PG\",\r\n          \"CountryName\": \"Papua New Guinea\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"PH\",\r\n          \"CountryName\": \"Philippines\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"PK\",\r\n          \"CountryName\": \"Pakistan\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"PL\",\r\n          \"CountryName\": \"Poland\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"PM\",\r\n          \"CountryName\": \"Saint Pierre and Miquelon\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"PN\",\r\n          \"CountryName\": \"Pitcairn\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"PR\",\r\n          \"CountryName\": \"Puerto Rico\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"PS\",\r\n          \"CountryName\": \"Palestine\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"PT\",\r\n          \"CountryName\": \"Portugal\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"PW\",\r\n          \"CountryName\": \"Palau\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"PY\",\r\n          \"CountryName\": \"Paraguay\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"QA\",\r\n          \"CountryName\": \"Qatar\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"RE\",\r\n          \"CountryName\": \"Réunion\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"RO\",\r\n          \"CountryName\": \"Romania\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"RS\",\r\n          \"CountryName\": \"Serbia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"RU\",\r\n          \"CountryName\": \"Russian Federation\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"RW\",\r\n          \"CountryName\": \"Rwanda\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SA\",\r\n          \"CountryName\": \"Saudi Arabia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SB\",\r\n          \"CountryName\": \"Solomon Islands\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SC\",\r\n          \"CountryName\": \"Seychelles\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SD\",\r\n          \"CountryName\": \"Sudan\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SE\",\r\n          \"CountryName\": \"Sweden\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SG\",\r\n          \"CountryName\": \"Singapore\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SH\",\r\n          \"CountryName\": \"Saint Helena\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SI\",\r\n          \"CountryName\": \"Slovenia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SJ\",\r\n          \"CountryName\": \"Svalbard and Jan Mayen\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SK\",\r\n          \"CountryName\": \"Slovakia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SL\",\r\n          \"CountryName\": \"Sierra Leone\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SM\",\r\n          \"CountryName\": \"San Marino\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SN\",\r\n          \"CountryName\": \"Senegal\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SO\",\r\n          \"CountryName\": \"Somalia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SR\",\r\n          \"CountryName\": \"Suriname\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SS\",\r\n          \"CountryName\": \"South Sudan\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"ST\",\r\n          \"CountryName\": \"Sao Tome and Principe\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SV\",\r\n          \"CountryName\": \"El Salvador\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SX\",\r\n          \"CountryName\": \"Sint Maarten (Dutch part)\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SY\",\r\n          \"CountryName\": \"Syrian Arab Republic\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"SZ\",\r\n          \"CountryName\": \"Eswatini\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"TC\",\r\n          \"CountryName\": \"Turks and Caicos Islands\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"TD\",\r\n          \"CountryName\": \"Chad\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"TF\",\r\n          \"CountryName\": \"French Southern Territories\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"TG\",\r\n          \"CountryName\": \"Togo\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"TH\",\r\n          \"CountryName\": \"Thailand\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"TJ\",\r\n          \"CountryName\": \"Tajikistan\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"TK\",\r\n          \"CountryName\": \"Tokelau\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"TL\",\r\n          \"CountryName\": \"Timor-Leste\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"TM\",\r\n          \"CountryName\": \"Turkmenistan\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"TN\",\r\n          \"CountryName\": \"Tunisia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"TO\",\r\n          \"CountryName\": \"Tonga\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"TR\",\r\n          \"CountryName\": \"Türkiye\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"TT\",\r\n          \"CountryName\": \"Trinidad and Tobago\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"TV\",\r\n          \"CountryName\": \"Tuvalu\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"TW\",\r\n          \"CountryName\": \"Taiwan\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"TZ\",\r\n          \"CountryName\": \"Tanzania\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"UA\",\r\n          \"CountryName\": \"Ukraine\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"UG\",\r\n          \"CountryName\": \"Uganda\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"UM\",\r\n          \"CountryName\": \"United States Minor Outlying Islands\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"US\",\r\n          \"CountryName\": \"United States of America\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"UY\",\r\n          \"CountryName\": \"Uruguay\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"UZ\",\r\n          \"CountryName\": \"Uzbekistan\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"VA\",\r\n          \"CountryName\": \"Holy See\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"VC\",\r\n          \"CountryName\": \"Saint Vincent and the Grenadines\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"VE\",\r\n          \"CountryName\": \"Venezuela (Bolivarian Republic of)\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"VG\",\r\n          \"CountryName\": \"Virgin Islands (British)\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"VI\",\r\n          \"CountryName\": \"Virgin Islands (U.S.)\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"VN\",\r\n          \"CountryName\": \"Viet Nam\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"VU\",\r\n          \"CountryName\": \"Vanuatu\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"WF\",\r\n          \"CountryName\": \"Wallis and Futuna\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"WS\",\r\n          \"CountryName\": \"Samoa\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"YE\",\r\n          \"CountryName\": \"Yemen\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"YT\",\r\n          \"CountryName\": \"Mayotte\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"ZA\",\r\n          \"CountryName\": \"South Africa\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"ZM\",\r\n          \"CountryName\": \"Zambia\"\r\n        },\r\n        {\r\n          \"CountryCode\": \"ZW\",\r\n          \"CountryName\": \"Zimbabwe\"\r\n        }\r\n      ])\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {Alert, Button, Card, Col, Popconfirm, Progress, Row, Spin, Table} from \"antd\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport {callApi} from \"../../utils/apiHelper\";\r\n\r\nconst Anchor = styled.a`\r\n    margin-left: 5px;\r\n    text-decoration: underline; \r\n    font-weight: bold; \r\n    cursor: pointer;\r\n`;\r\n\r\nconst GeneralInformation = ({isActive}) => {\r\n    const history = useHistory()\r\n    const {getAccessTokenSilently} = useAuth0();\r\n    const [accountDetails, setAccountDetails] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [cancelButtonLoading, setCancelButtonLoading] = useState(false)\r\n    const [messages, setMessages] = useState({\r\n        cancelMessage: false\r\n    })\r\n\r\n    const confirm = async () => {\r\n        setCancelButtonLoading(true)\r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/account/subscription/cancel`,\r\n            method: 'post',\r\n            request: {},\r\n            successCallback: (response) => {\r\n                setMessages({\r\n                    ...messages,\r\n                    cancelMessage: true\r\n                })\r\n                setCancelButtonLoading(false)\r\n            },\r\n            errorCallback: () => {\r\n            }\r\n        })\r\n    }\r\n\r\n    const cancel = async () => {\r\n\r\n    }\r\n\r\n    const getColumns = () => {\r\n        return [\r\n            {\r\n                title: 'Plan',\r\n                dataIndex: 'plan',\r\n            },\r\n            {\r\n                title: 'Subscribers Quantity',\r\n                dataIndex: 'subscribersQuantity',\r\n            },\r\n            {\r\n                title: 'Sent Emails',\r\n                dataIndex: 'emailsSentForPeriod'\r\n            },\r\n            {\r\n                title: 'Status',\r\n                dataIndex: 'status',\r\n            },\r\n            {\r\n                title: 'Upgrade',\r\n                dataIndex: 'upgrade',\r\n                render: () => {\r\n                    return <Button onClick={() => history.push('/profile?tab=billing')}\r\n                                   type=\"primary\"> Upgrade </Button>;\r\n                }\r\n            },\r\n            {\r\n                title: 'Cancel',\r\n                dataIndex: 'cancel',\r\n                render: () => {\r\n                    return <>\r\n                        <Popconfirm\r\n                            title=\"With this action, your subscription will be cancelled at the end of the billing period. Are you sure you want to proceed?\"\r\n                            onConfirm={confirm}\r\n                            onCancel={cancel}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button\r\n                                loading={cancelButtonLoading}\r\n                                disabled={accountDetails.accountType !== 1 || accountDetails.subscriptionStatus !== 0 || messages.cancelMessage}\r\n                                danger>Cancel</Button>\r\n                        </Popconfirm>\r\n                    </>\r\n                }\r\n            },\r\n        ]\r\n    }\r\n\r\n    const getDatasource = () => {\r\n        let subscriptionStatus = 'Active';\r\n        switch (accountDetails.subscriptionStatus) {\r\n            case 0:\r\n                subscriptionStatus = \"Active\";\r\n                break;\r\n            case 1:\r\n                subscriptionStatus = \"Failed\";\r\n                break;\r\n            case 2:\r\n                subscriptionStatus = \"Cancelled\";\r\n                break;\r\n        }\r\n        \r\n        return [\r\n            {\r\n                key: '1',\r\n                plan: accountDetails.accountType === 1 ? \"Pro\" : 'Free',\r\n                subscribersQuantity: accountDetails.quota,\r\n                status: subscriptionStatus,\r\n                emailsSentForPeriod: `${accountDetails.emailsSentForPeriod}/${accountDetails.allowedEmailsCount}`\r\n            }\r\n        ];\r\n    }\r\n\r\n    const getAccountDetails = async () => {\r\n        console.log('loading')\r\n        setMessages({\r\n            ...messages,\r\n            cancelMessage: false\r\n        })\r\n        const options = {\r\n            url: `${process.env.REACT_APP_API_BASE}/account/details`,\r\n            method: 'get',\r\n            successCallback: (response) => {\r\n                setAccountDetails(response)\r\n                if (response.subscriptionStatus === 2) {\r\n                    setMessages({\r\n                        ...messages,\r\n                        cancelMessage: true\r\n                    })\r\n                }\r\n                setLoading(false)\r\n            },\r\n            errorCallback: (err) => {\r\n                console.log(err.message)\r\n            }\r\n        }\r\n\r\n        await callApi(getAccessTokenSilently, options)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isActive){\r\n            getAccountDetails()\r\n        }\r\n    }, [isActive])\r\n\r\n    useEffect(() => {\r\n        getAccountDetails()\r\n    }, [])\r\n\r\n    return <>\r\n        <Spin spinning={loading}>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Card>\r\n                        <Row gutter={[16, 16]}>\r\n                            <Col span={1}>\r\n                                <span style={{fontWeight: 500}}>Contacts</span>\r\n                            </Col>\r\n                            <Col span={22}>\r\n                            <span style={{\r\n                                float: 'right',\r\n                                fontWeight: 500\r\n                            }}>{accountDetails.subscribersCount} of {accountDetails.quota}</span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Progress type={\"line\"}\r\n                                          percent={accountDetails.subscribersCount / accountDetails.quota * 100}/>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[16, 16]}>\r\n                            <Col span={24}>\r\n                            <span\r\n                                style={{fontWeight: 300}}>{accountDetails.quota - accountDetails.subscribersCount} contacts remaining for your current plan</span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{marginTop: 30}} gutter={[16, 16]}>\r\n                            <Col span={24}>\r\n                                <Table columns={getColumns()} dataSource={getDatasource()} size=\"middle\"\r\n                                       pagination={false}/>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            {accountDetails.subscriptionStatus === 1 ? <>\r\n                <Row gutter={[16, 16]} style={{marginTop: 10}}>\r\n                    <Col span={12}>\r\n                        <Alert\r\n                            style={{textAlign: 'left'}}\r\n                            message=\"The payment for the card provided failed.\"\r\n                            description={<>\r\n                            <span>\r\n                                The payment for the card provided failed.\r\n                            <Anchor onClick={() => history.push('/profile?tab=billing')}>\r\n                                Consider updating your card information \r\n                            </Anchor> \r\n                                 and paying\r\n                            <Anchor onClick={x => window.open(accountDetails.invoiceUrl, '_blank')}>\r\n                                your invoice\r\n                            </Anchor>.\r\n                            </span>\r\n                            </>}\r\n                        >\r\n                        </Alert>\r\n                    </Col>\r\n                </Row>\r\n            </> : \"\"}\r\n            {messages.cancelMessage ? <>\r\n                <Row gutter={[16, 16]} style={{marginTop: 10}}>\r\n                    <Col span={24}>\r\n                        <Alert\r\n                            style={{textAlign: 'left'}}\r\n                            showIcon\r\n                            type=\"warning\"\r\n                            message=\"Subscription was cancelled\"\r\n                            description={<>\r\n                                <div>\r\n                                    <span>\r\n                                        Your subscription will end at the end of the billing period.\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <span>\r\n                                        Until then, you can continue using the platform.\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <span>\r\n                                        Unfortunately at this point you can not renew it with the same tier. You can only upgrade to a higher tier.\r\n                                    </span>\r\n                                </div>\r\n                            </>}\r\n                        >\r\n                        </Alert>\r\n                    </Col>\r\n                </Row>\r\n            </> : \"\"}\r\n        </Spin>\r\n    </>\r\n}\r\n\r\nexport default GeneralInformation;","import React, {useEffect, useState} from \"react\";\r\nimport {Alert, Button, Col, Drawer, Input, Modal, notification, Row, Table, Tag, Tooltip} from \"antd\";\r\nimport {callApi} from \"../../utils/apiHelper\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {DeleteOutlined, PlusOutlined, RedoOutlined} from \"@ant-design/icons\";\r\nimport {ContainerWrapper} from \"../../reportComponents/CampaignStyles\";\r\nimport {setShouldReload} from \"../../features/subscribers/reloadAudienceReportSlice\";\r\nimport validateEmail from \"../../utils/ValueValidations\";\r\n\r\nconst SendingSettings = () => {\r\n    const {getAccessTokenSilently} = useAuth0();\r\n    \r\n    const [sendingEmails, setSendingEmails] = useState([])\r\n    const [selectedSendingEmailForDelete, setSelectedSendingEmailForDelete] = useState('');\r\n    const [deleteModalOpen, setDeleteModalOpen] = useState(false);\r\n    const [sendingEmailForAdd, setSendingEmailForAdd] = useState('')\r\n    const [addEmailDrawerOpened, setAddEmailDrawerOpened] = useState(false)\r\n    const [loading, setLoading] = useState({\r\n        tableLoading: false,\r\n        addEmailButton: false\r\n    })\r\n    \r\n    const getDatasource = async () => {\r\n        setLoading({\r\n            ...loading,\r\n            tableLoading: true\r\n        })\r\n        const options = {\r\n            url: `${process.env.REACT_APP_API_BASE}/sendingEmails/all`,\r\n            method: 'get',\r\n            successCallback: (response) => {\r\n                setSendingEmails(response.data.sendingEmails)\r\n                setLoading({\r\n                    ...loading,\r\n                    tableLoading: false\r\n                })\r\n            },\r\n            errorCallback: (err) => {\r\n                console.log(err.message)\r\n                setLoading({\r\n                    ...loading,\r\n                    tableLoading: false\r\n                })\r\n            }\r\n        }\r\n\r\n        await callApi(getAccessTokenSilently, options)\r\n    }\r\n    \r\n    const onDelete = (sendingEmailId) => {\r\n        setSelectedSendingEmailForDelete(sendingEmailId)\r\n        setDeleteModalOpen(true)\r\n    }\r\n    \r\n    const deleteSendingEmail = async () => {\r\n        if (selectedSendingEmailForDelete.length < 1){\r\n            return;    \r\n        }\r\n        const options = {\r\n            url: `${process.env.REACT_APP_API_BASE}/sendingEmails/delete`,\r\n            method: 'post',\r\n            request: {\r\n                SendingEmailId: selectedSendingEmailForDelete\r\n            },\r\n            successCallback: async (response) => {\r\n                await getDatasource();\r\n                setDeleteModalOpen(false)\r\n                debugger\r\n                if (!response.success){\r\n                    notification.error({\r\n                        message: `Error deleting a sending email!`,\r\n                        description: 'One or more campaigns/automatic emails are currently using this sending email',\r\n                        placement: \"bottomLeft\",\r\n                    });\r\n                }\r\n            },\r\n            errorCallback: (err) => {\r\n                setDeleteModalOpen(false)\r\n            }\r\n        }\r\n\r\n        await callApi(getAccessTokenSilently, options)\r\n    }\r\n\r\n    const addSendingEmail = async () => {\r\n        if (sendingEmailForAdd.length < 1){\r\n            return;\r\n        }\r\n        \r\n        setLoading({\r\n            ...loading,\r\n            addEmailButton: true\r\n        })\r\n\r\n        const options = {\r\n            url: `${process.env.REACT_APP_API_BASE}/sendingEmails/add`,\r\n            method: 'post',\r\n            request: {\r\n                email: sendingEmailForAdd\r\n            },\r\n            successCallback: async (response) => {\r\n                await getDatasource();\r\n                setAddEmailDrawerOpened(false)\r\n                setLoading({\r\n                    ...loading,\r\n                    addEmailButton: false\r\n                })\r\n            },\r\n            errorCallback: (err) => {\r\n                setAddEmailDrawerOpened(false)\r\n                setLoading({\r\n                    ...loading,\r\n                    addEmailButton: false\r\n                })\r\n            }\r\n        }\r\n\r\n        await callApi(getAccessTokenSilently, options)\r\n    }\r\n    \r\n    const getColumns = () => {\r\n        return [\r\n            {\r\n                title: 'Email',\r\n                dataIndex: 'email',\r\n            },\r\n            {\r\n                title: 'Status',\r\n                dataIndex: 'status',\r\n                render: (status) => {\r\n                    if (status === 0){\r\n                        return <Tag color=\"grey\">Pending</Tag>\r\n                    }\r\n                    \r\n                    if (status === 1){\r\n                        return <Tag color=\"green\">Verified</Tag>\r\n                    }\r\n                } \r\n            },\r\n            {\r\n                title: 'Actions',\r\n                dataIndex: 'actions',\r\n                render: (_, {id}) => {\r\n                    return <Button \r\n                        danger \r\n                        shape=\"round\" \r\n                        icon={<DeleteOutlined />}\r\n                        onClick={() => onDelete(id)}\r\n                    />\r\n                }\r\n            }\r\n        ]\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getDatasource();\r\n    }, [])\r\n    \r\n    return <>\r\n        <ContainerWrapper>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Alert\r\n                        style={{textAlign: \"left\"}}\r\n                        message=\"Note\"\r\n                        description=\"After adding the record, you will be sent an email to verify the added email address.\"\r\n                        type=\"info\"\r\n                        showIcon\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: 20}} gutter={[16,16]}>\r\n                <Col span={12}>\r\n                    <div style={{float: 'left'}}>\r\n                        <h3>Sending Emails</h3>\r\n                    </div>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <div style={{float: 'right'}}>\r\n                        <Tooltip title=\"Refresh\">\r\n                            <Button onClick={async () => await getDatasource() } shape=\"circle\" icon={<RedoOutlined />} />\r\n                        </Tooltip>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: 10}}>\r\n                <Col>\r\n                    <Button onClick={() => setAddEmailDrawerOpened(true)} shape=\"round\" icon={<PlusOutlined />}>Add email</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: 10}} gutter={[16, 16]}>\r\n                <Col span={24}>\r\n                    <Table \r\n                        loading={loading.tableLoading}\r\n                        columns={getColumns()} \r\n                        dataSource={sendingEmails} size=\"middle\"\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </ContainerWrapper>\r\n        <Modal\r\n            title=\"Delete sending email\"\r\n            style={{\r\n                top: 20,\r\n            }}\r\n            visible={deleteModalOpen}\r\n            onOk={async () => await deleteSendingEmail()}\r\n            onCancel={() => {\r\n                setSelectedSendingEmailForDelete('')\r\n                setDeleteModalOpen(false)\r\n            }}\r\n        >\r\n            <span>Are you sure you want to delete this sending email?</span>\r\n        </Modal>\r\n        <Drawer title=\"Details\" placement=\"right\" visible={addEmailDrawerOpened} onClose={() => setAddEmailDrawerOpened(false)}>\r\n            <Row gutter={[16,16]}>\r\n                <Col span={24}>\r\n                    <Input\r\n                        onChange={event => setSendingEmailForAdd(event.target.value)}\r\n                        value={sendingEmailForAdd} placeholder=\"Email\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: 10}}>\r\n                <Col>\r\n                    <Button \r\n                        disabled={!validateEmail(sendingEmailForAdd)} \r\n                        onClick={addSendingEmail} \r\n                        type=\"primary\"\r\n                        loading={loading.addEmailButton}\r\n                    >\r\n                        Add Email\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Drawer>\r\n    </>\r\n}\r\n\r\nexport default SendingSettings;","import React, {useEffect, useState} from 'react'\r\nimport PasswordManagement from \"./components/PasswordManagement\";\r\nimport BillingInformation from \"./components/BillingInformation\";\r\nimport GeneralInformation from \"./components/GeneralInformation\";\r\nimport Integrations from \"./components/integrations/Integrations\";\r\nimport { Tabs } from 'antd';\r\nimport styled from 'styled-components'\r\nimport {useHistory} from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport {RocketOutlined, WalletOutlined, SettingOutlined, ApiOutlined} from \"@ant-design/icons\";\r\nimport SendingSettings from \"./components/SendingSettings\";\r\nconst { TabPane } = Tabs;\r\n\r\nconst Container = styled.div`\r\n    margin-top: 16px;\r\n    height: 95%;\r\n    padding: 20px;\r\n    background-color: white;\r\n    border: 1px solid #e6ebf1;\r\n    border-radius: 10px;\r\n    color: #fafafb !important;\r\n`;\r\n\r\nconst Profile = (props) => {\r\n    const [activeKey, setActiveKey] = useState('1')\r\n    \r\n    const history = useHistory();\r\n    const query = queryString.parse(props.location.search)\r\n    \r\n    const onTabChange = (tab) => {\r\n        setActiveKey(tab)\r\n        switch (tab){\r\n            case 'account':\r\n                history.push('/profile')\r\n                break;\r\n            case 'billing':\r\n                history.push('/profile?tab=billing')\r\n                break;\r\n            case 'passManagement':\r\n                history.push('/profile?tab=passManagement')\r\n                break;\r\n            case 'integrations':\r\n                history.push('/profile?tab=integrations')\r\n                break;\r\n            case 'sendingSettings':\r\n                history.push('/profile?tab=sendingSettings')\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        setActiveKey(query.tab)\r\n    }, [query])\r\n    \r\n    return <>\r\n        <Container>\r\n            <Tabs onTabClick={onTabChange} activeKey={activeKey} tabPosition=\"left\" style={{height: '100%', backgroundColor: 'white'}}>\r\n                <TabPane tab={\r\n                    <span>\r\n                      <RocketOutlined />\r\n                      Account\r\n                    </span>\r\n                } key=\"account\">\r\n                    <GeneralInformation isActive={activeKey === 'account'} />\r\n                </TabPane>\r\n                <TabPane tab={\r\n                    <span>\r\n                        <WalletOutlined />\r\n                        Billing\r\n                    </span>\r\n                } key=\"billing\">\r\n                    <BillingInformation />\r\n                </TabPane>\r\n                <TabPane tab={\r\n                    <span>\r\n                        <SettingOutlined />\r\n                        Password Management\r\n                    </span>\r\n                } key=\"passManagement\">\r\n                    <PasswordManagement />\r\n                </TabPane>\r\n                {/*<TabPane tab={*/}\r\n                {/*    <span>*/}\r\n                {/*        <ApiOutlined />*/}\r\n                {/*        Integrations*/}\r\n                {/*    </span>*/}\r\n                {/*} key=\"integrations\">*/}\r\n                {/*    <Integrations />*/}\r\n                {/*</TabPane>*/}\r\n                <TabPane tab={\r\n                    <span>\r\n                        <ApiOutlined />\r\n                        Sending Settings\r\n                    </span>\r\n                } key=\"sendingSettings\">\r\n                    <SendingSettings />\r\n                </TabPane>\r\n            </Tabs>\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default Profile","import {RocketOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport {Button, Space} from \"antd\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n    float: right;\r\n    height: 0px;\r\n    color: rgb(26, 51, 83);\r\n    padding-right: 50px;\r\n`\r\n\r\nconst AnchorContainer = styled.a`\r\n    padding: 10px;\r\n`\r\n\r\nconst RightHeaderItems = () => {\r\n    const history = useHistory();\r\n\r\n    return <>\r\n        <Container>\r\n            <Space align={\"center\"}>\r\n                <Button\r\n                    size=\"middle\"\r\n                    icon={<RocketOutlined/>}\r\n                    onClick={() => history.push('/profile?tab=billing')} shape=\"round\" type=\"primary\">\r\n                    Upgrade\r\n                </Button>\r\n                <AnchorContainer\r\n                    href=\"/profile\">\r\n                    <UserOutlined style={{fontSize: '1.4rem', color: \"#455560\"}}/>\r\n                </AnchorContainer>\r\n            </Space>\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default RightHeaderItems","import {AutoComplete} from \"antd\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components'\r\n\r\nconst renderTitle = (title, url) => (\r\n    <span>\r\n        <a\r\n            href={url}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n        >\r\n      {title}\r\n    </a>\r\n  </span>\r\n);\r\n\r\nconst options = [\r\n    {\r\n        value: \"\",\r\n        innerVal: 'Dashboard',\r\n        label: renderTitle(\"Dashboard\", '/')\r\n    },\r\n    {\r\n        value: \"\",\r\n        innerVal: 'Audience Report',\r\n        label: renderTitle(\"Audience Report\", '/audience')\r\n    },\r\n    {\r\n        value: \"\",\r\n        innerVal: 'Build a Form',\r\n        label: renderTitle(\"Build a Form\", '/build-form')\r\n    },\r\n    {\r\n        value: \"\",\r\n        innerVal: 'Campaigns Report',\r\n        label: renderTitle(\"Campaigns Report\", '/campaigns')\r\n    },\r\n    {\r\n        value: \"\",\r\n        innerVal: 'Create Campaign',\r\n        label: renderTitle(\"Create Campaign\", '/campaign')\r\n    },\r\n    {\r\n        value: \"\",\r\n        innerVal: 'Automated Emails Report',\r\n        label: renderTitle(\"Automated Emails Report\", '/auto-emails')\r\n    },\r\n    {\r\n        value: \"\",\r\n        innerVal: 'Create Automated Email',\r\n        label: renderTitle(\"Create Automated Email\", '/auto-email')\r\n    },\r\n    {\r\n        value: \"\",\r\n        innerVal: 'Templates Report',\r\n        label: renderTitle(\"Templates Report\", '/templates')\r\n    },\r\n    {\r\n        value: \"\",\r\n        innerVal: 'Create Simple Template',\r\n        label: renderTitle(\"Create Simple Template\", '/simple-template')\r\n    },\r\n];\r\n\r\nconst Container = styled.div`\r\n    float: left;\r\n    margin-left: 50px;\r\n`;\r\n\r\nconst LeftHeaderItems = () => {\r\n    return <>\r\n        <Container>\r\n            <AutoComplete\r\n                size={\"large\"}\r\n                dropdownMatchSelectWidth={350}\r\n                style={{width: 350, textAlign: 'left'}}\r\n                options={options}\r\n                placeholder=\"Search Pages...\"\r\n                filterOption={(inputValue, option) => {\r\n                    return option.innerVal.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1;\r\n                }}\r\n            >\r\n            </AutoComplete>\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default LeftHeaderItems;","import grapesjs from 'grapesjs'\r\nimport 'grapesjs/dist/css/grapes.min.css'\r\nimport 'grapesjs/dist/grapes.min.js'\r\nimport 'grapesjs-preset-newsletter/dist/grapesjs-preset-newsletter.css'\r\nimport 'grapesjs-preset-newsletter/dist/grapesjs-preset-newsletter.min'\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Button, Col, Input, Row} from \"antd\";\r\nimport {WarningOutlined} from \"@ant-design/icons\";\r\nimport MergeTags from \"../SimpleEmailTemplate/components/MergeTags\";\r\nimport {callApi} from \"../utils/apiHelper\";\r\nimport queryString from \"query-string\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst EmailTemplateBuilder = (props) => {\r\n    const query = queryString.parse(props.location.search)\r\n    const {getAccessTokenSilently} = useAuth0();\r\n    const history = useHistory()\r\n    \r\n    const [editor, setEditor] = useState();\r\n    const [model, setModel] = useState({\r\n        name: ''\r\n    });\r\n    const [loading, setLoading] = useState({\r\n        button: false,\r\n        page: false\r\n    });\r\n    \r\n    const [validation, setValidation] = useState({\r\n        name: true\r\n    });\r\n\r\n    const validateFields = () => {\r\n        let validations = {\r\n            name: true,\r\n            editor: true\r\n        }\r\n        if (!model.name.length){\r\n            validations.name = false;\r\n        }\r\n\r\n        setValidation(validations)\r\n        return !Object.values(validations).some(x => x === false);\r\n    }\r\n\r\n    function replaceLast(find, replace, string) {\r\n        var lastIndex = string.lastIndexOf(find);\r\n\r\n        if (lastIndex === -1) {\r\n            return string;\r\n        }\r\n\r\n        var beginString = string.substring(0, lastIndex);\r\n        var endString = string.substring(lastIndex + find.length);\r\n\r\n        return beginString + replace + endString;\r\n    }\r\n\r\n    const save = async () => {\r\n        const validationPassed = validateFields();\r\n        if (!validationPassed){\r\n            return;\r\n        }\r\n\r\n        setLoading({\r\n            ...loading,\r\n            saveButton: true\r\n        })\r\n\r\n        let finalHtml = '';\r\n        const html = getEditorHtml();\r\n        \r\n        if (!query.id){\r\n            let htmlFirstReplaced = html.replace('body', 'div')\r\n            finalHtml = replaceLast('body', 'div', htmlFirstReplaced)    \r\n        }else {\r\n            finalHtml = html;\r\n        }\r\n        \r\n        const baseHtml = `\r\n            <!DOCTYPE html>\r\n            <html>\r\n                <body>\r\n                    <div>\r\n                        {HTML_CONTENT_HERE}\r\n                    </div>\r\n                    <div style=\"text-align: center\">\r\n                        <span>No longer interested?</span><a id=\"unsubscribe\" href=\"{{BASE_ADDRESS}}/subscribers/unsubscribe?email={{SUBSCRIBER_EMAIL}}&subscriberId={{SUBSCRIBER_ID}}&returnUrl=https://mailgen.org/unsubscribe/\">Unsubscribe</a>\r\n                    </div>\r\n                    <div id=\"platform-advertisement\" style=\"text-align: center;margin-top:25px;\">\r\n                        <a style=\"display: inline-block;vertical-align: middle;line-height: normal;text-decoration: none;color: inherit;\" href=\"https://mailgen.org\" target=\"_blank\">\r\n                            <img style=\"display: inline-block;vertical-align: middle;line-height: normal;\" alt=\"mailgen\" height=\"80\" width=\"150\" src={process.env.PUBLIC_URL + '/PoweredByMailgen.png'} />\r\n                        </a>\r\n                    </div>\r\n                </body>\r\n            </html>`;\r\n\r\n        await callApi(getAccessTokenSilently, {\r\n            url: `${process.env.REACT_APP_API_BASE}/emailTemplates/upsertTemplate`,\r\n            method: 'post',\r\n            request: {\r\n                id: query.id,\r\n                name: model.name,\r\n                html: finalHtml,\r\n                baseHtml: baseHtml,\r\n                templateType: 1\r\n            },\r\n            successCallback: (response) => {\r\n                history.push('/templates')\r\n                setLoading({\r\n                    ...loading,\r\n                    saveButton: false\r\n                })\r\n            },\r\n            errorCallback: (error) => {\r\n                setLoading({\r\n                    ...loading,\r\n                    saveButton: false\r\n                })\r\n            }\r\n        });\r\n    }\r\n    \r\n    useEffect(async () => {\r\n        var host = 'https://artf.github.io/grapesjs/';\r\n        var images = [\r\n            host + 'img/grapesjs-logo.png',\r\n            host + 'img/tmp-blocks.jpg',\r\n            host + 'img/tmp-tgl-images.jpg',\r\n            host + 'img/tmp-send-test.jpg',\r\n            host + 'img/tmp-devices.jpg',\r\n        ];\r\n\r\n        const initEditor = grapesjs.init({\r\n            container : '#gjs',\r\n            plugins: ['gjs-preset-newsletter'],\r\n            assetManager: {\r\n                assets: images,\r\n                upload: false,\r\n                uploadText: 'Uploading is not available in this demo',\r\n            },\r\n            pluginsOpts: {\r\n                'gjs-preset-newsletter': {\r\n                    modalTitleImport: 'Import template',\r\n                    // ... other options\r\n                }\r\n            }\r\n        });\r\n        \r\n        setEditor(initEditor);\r\n\r\n        if (query.id) {\r\n            setLoading({\r\n                ...loading,\r\n                page: true\r\n            })\r\n            await callApi(getAccessTokenSilently, {\r\n                url: `${process.env.REACT_APP_API_BASE}/emailTemplates/getById?id=${query.id}`,\r\n                method: 'get',\r\n                successCallback: (response) => {\r\n                    setModel({\r\n                        name: response.template.name\r\n                    })\r\n                    \r\n                    initEditor.setComponents(response.template.html)\r\n                    \r\n                    setLoading({\r\n                        ...loading,\r\n                        page: false\r\n                    })\r\n                },\r\n                errorCallback: (error) => { }\r\n            });\r\n        } else{\r\n            initEditor.setComponents('')\r\n        }\r\n        \r\n    },[])\r\n    \r\n    const getEditorHtml = () => editor.runCommand('gjs-get-inlined-html');\r\n    \r\n    return <>\r\n        <Row gutter={[16,16]}>\r\n            <Col span={5}>\r\n                <Input\r\n                    status={validation.name ? '' : 'error'}\r\n                    prefix={validation.name ? '' : <WarningOutlined />}\r\n                    onChange={(event) => {\r\n                        setModel({\r\n                            ...model,\r\n                            name: event.target.value\r\n                        })\r\n                    }}\r\n                    value={model.name}\r\n                    placeholder=\"Name\" />\r\n            </Col>\r\n            <Col span={2}>\r\n                <MergeTags />\r\n            </Col>\r\n            <Col span={17}>\r\n                <Button style={{float: 'right'}} onClick={async e => await save()}>Save</Button>\r\n            </Col>\r\n        </Row>\r\n        <Row style={{marginTop: 10}}>\r\n            <Col span={24}>\r\n                <div id=\"gjs\"></div>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default EmailTemplateBuilder;","import {\r\n    BarChartOutlined, CalendarOutlined, ClockCircleOutlined, LogoutOutlined, MailOutlined,\r\n    RadiusSettingOutlined, ScheduleOutlined, SettingOutlined, ToolOutlined, UsergroupAddOutlined, UserOutlined,\r\n} from '@ant-design/icons';\r\nimport {Layout, Menu, Row, Col} from 'antd';\r\nimport React, { useState } from 'react';\r\nimport useStyles from \"./styles\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Dashboard from \"../Dashboard\";\r\nimport EmailTemplatesReport from \"../EmailTemplates\";\r\nimport CreateForm from \"../EmailForm\";\r\nimport Audience from \"../Audiance\";\r\nimport EmailTemplate from \"../EmailTemplate\";\r\nimport SimpleEmailTemplate from \"../SimpleEmailTemplate\";\r\nimport CampaignsReport from \"../Campaigns\";\r\nimport CampaignPageLoader from \"../CampaignPageLoader\";\r\nimport AutomationsReport from \"../AutoEmails\";\r\nimport AutoEmailLoader from \"../AutoWelcomeEmail/AutoEmailLoader\";\r\nimport Profile from \"../Profile\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport RightHeaderItems from \"./components/rightHeaderItems\";\r\nimport LeftHeaderItems from \"./components/leftHeaderItems\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport EmailTemplateBuilder from \"../EmailTemplateBuilder V2\";\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nfunction getItem(label, key, icon, style, children) {\r\n    return {\r\n        key,\r\n        icon,\r\n        children,\r\n        label,\r\n        style: style ? style : {color: 'rgb(26, 51, 83)'}\r\n    };\r\n}\r\n\r\nconst items = [\r\n    getItem('General', 'sub1', <RadiusSettingOutlined />, null,[\r\n        getItem('Dashboard', 'dashboard', <BarChartOutlined />),\r\n        getItem('Audience', 'audience', <UsergroupAddOutlined />),\r\n    ]),\r\n    getItem('Automation', 'sub2', <ClockCircleOutlined />, null, [\r\n        getItem('Campaigns', 'campaigns', <ScheduleOutlined />), \r\n        getItem('Automated Emails', 'autoEmails', <CalendarOutlined />)\r\n    ]),\r\n    getItem('Build', 'sub3', <SettingOutlined />, null, [\r\n        getItem('Templates', 'templates', <MailOutlined />),\r\n        getItem('Forms', 'forms', <ToolOutlined />)\r\n    ]),\r\n    getItem('Account', 'account', <UserOutlined />),\r\n    getItem('Logout', 'logout', <LogoutOutlined />)\r\n];\r\n\r\nconst LeftNavigation = () => {\r\n    const [collapsed, setCollapsed] = useState(false);\r\n    const styles = useStyles();\r\n    const history = useHistory();\r\n    const {logout} = useAuth0()\r\n    \r\n    const onMenuItemSelected = ({item, key}) => {\r\n        switch (key) {\r\n            case 'dashboard':\r\n                history.push(\"/\")\r\n                break;\r\n            case 'audience':\r\n                history.push(\"/audience\")\r\n                break;\r\n            case 'campaigns':\r\n                history.push(\"/campaigns\")\r\n                break;\r\n            case 'autoEmails':\r\n                history.push(\"/auto-emails\")\r\n                break;\r\n            case 'templates':\r\n                history.push(\"/templates\")\r\n                break;\r\n            case 'forms':\r\n                history.push(\"/build-form\")\r\n                break;\r\n            case 'account':\r\n                history.push(\"/profile\")\r\n                break;\r\n            case 'logout':\r\n                logout()\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    \r\n    // TODO: Visualize email not verified message \r\n    return (\r\n        <Layout\r\n            style={{\r\n                minHeight: '100vh',\r\n                color: 'rgb(26, 51, 83)',\r\n            }}\r\n        >\r\n            <Sider style={{boxShadow: 'rgb(0 0 0 / 15%) 0px 1px 4px -1px'}} theme={'light'} collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}>\r\n                <div className={styles.logo}>\r\n                    <img height={50} width={50} src=\"https://s3.amazonaws.com/unroll-images-production/projects%2F1071%2F1645905100627-Untitled+design.svg\" />\r\n                    {/*<h4 style={{color: '#455560', fontWeight: \"400\", fontSize: '16px', marginLeft: 5}}>Mailgen</h4>*/}\r\n                </div>\r\n                <Menu \r\n                    style={{fontWeight: 500, color: '#455560'}}\r\n                    defaultSelectedKeys={['1']}\r\n                    onClick={onMenuItemSelected}\r\n                    defaultOpenKeys={['sub1']}\r\n                    mode=\"inline\" \r\n                    items={items}\r\n                />\r\n            </Sider>\r\n            <Layout className=\"site-layout\">\r\n                <Header\r\n                    className={styles.siteLayoutBackground}\r\n                    style={{\r\n                        padding: 0,\r\n                        height: '70px'\r\n                    }}>\r\n                    <Row>\r\n                        <Col span={8}>\r\n                            <LeftHeaderItems />\r\n                        </Col>\r\n                        <Col span={16}>\r\n                            <RightHeaderItems />\r\n                        </Col>\r\n                    </Row>\r\n                </Header>\r\n                <Content style={{ margin: '16px 50px', }}>\r\n                    <Switch>\r\n                        <Route exact from=\"/\" render={props => <Dashboard {...props} />} />\r\n                        <Route exact path=\"/templates\" render={props => <EmailTemplatesReport {...props} />} />\r\n                        <Route exact path=\"/build-form\" render={props => <CreateForm {...props} />} />\r\n                        <Route exact path=\"/audience\" render={props => <Audience {...props} />} />\r\n                        <Route exact path=\"/template\" render={props => <EmailTemplate {...props} />} />\r\n                        <Route exact path=\"/simple-template\" render={props => <SimpleEmailTemplate {...props} />} />\r\n                        <Route exact path=\"/campaigns\" render={props => <CampaignsReport {...props} />} />\r\n                        <Route exact path=\"/campaign\" render={props => <CampaignPageLoader {...props} />} />\r\n                        <Route exact path=\"/auto-emails\" render={props => <AutomationsReport {...props} />} />\r\n                        <Route exact path=\"/auto-email\" render={props => <AutoEmailLoader {...props} />} />\r\n                        <Route exact path=\"/profile\" render={props => <Profile {...props} />} />\r\n                        <Route exact path=\"/drag-and-drop\" render={props => <EmailTemplateBuilder {...props} />} />\r\n                    </Switch>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default LeftNavigation","const subscriberType = Object.freeze({\r\n    NotSubscribed: 0,\r\n    Subscribed: 1\r\n})\r\n\r\nexport default subscriberType;","import {createSlice} from \"@reduxjs/toolkit\";\r\nimport subscriberType from \"../../Onboarding/SubscriberType\";\r\n\r\nconst initialState = {\r\n    importSubscribers: {\r\n        areSubscribers: subscriberType.Subscribed,\r\n        importedSubscribers: []\r\n    },\r\n    simpleTemplate: {},\r\n    amazonSesIntegration: {}\r\n};\r\n\r\nexport const onboardingSlice = createSlice({\r\n    name: 'onboarding',\r\n    initialState: () => initialState,\r\n    reducers: {\r\n        updateOnboarding: (state, action) => {\r\n            return {...action.payload};\r\n        }\r\n    }\r\n})\r\n\r\nexport const { updateOnboarding } = onboardingSlice.actions\r\nexport default onboardingSlice.reducer","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport scheduledCampaignGeneralReducer from '../features/scheduledCampaigns/scheduledCampaignGeneralSlice'\r\nimport scheduledCampaignSchedulingReducer from '../features/scheduledCampaigns/scheduledCampaignSchedulingSlice'\r\nimport scheduledCampaignSenderDetailsReducer from '../features/scheduledCampaigns/scheduledCampaignSenderDetailsSlice'\r\nimport tagsReducer from '../features/tagsSlice'\r\nimport sendingEmailsReducer from '../features/sendingEmailsSlice'\r\nimport scheduledCampaignValidationReducer from \"../features/scheduledCampaigns/validationSlice\";\r\nimport selectedSubscribersForDeleteReducer from \"../features/subscribers/selectedSubscribersForDelete\";\r\nimport reloadAudienceReportReducer from \"../features/subscribers/reloadAudienceReportSlice\";\r\nimport subscriberDetailsDrawerReducer from \"../features/subscribers/subscriberDetailsDrawer\";\r\nimport subscriberManagementDrawerReducer from \"../features/subscribers/subscriberManagementDrawerSlice\";\r\nimport autoEmailGeneralDetailsReducer from \"../features/autoEmails/autoEmailGeneralDetailsSlice\";\r\nimport autoEmailSenderDetailsReducer from \"../features/autoEmails/autoEmailSenderDetailsSlice\";\r\nimport autoEmailValidationsReducer from \"../features/autoEmails/autoEmailValidationsSlice\";\r\nimport onboardingReducer from \"../features/onboarding/onboardingSlice\";\r\nimport importSubscribersTransformedDataReducer from \"../features/ImportSubscribers/importSubscribersTransformedDataSlice\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        scheduledCampaignGeneral: scheduledCampaignGeneralReducer,\r\n        scheduledCampaignScheduling: scheduledCampaignSchedulingReducer,\r\n        scheduledCampaignSenderDetails: scheduledCampaignSenderDetailsReducer,\r\n        tags: tagsReducer,\r\n        sendingEmails: sendingEmailsReducer,\r\n        scheduledCampaignValidations: scheduledCampaignValidationReducer,\r\n        selectedSubscribersForDelete: selectedSubscribersForDeleteReducer,\r\n        reloadAudienceReport: reloadAudienceReportReducer,\r\n        subscriberDetailsDrawer: subscriberDetailsDrawerReducer,\r\n        subscriberManagementDrawer: subscriberManagementDrawerReducer,\r\n        autoEmailGeneralDetails: autoEmailGeneralDetailsReducer,\r\n        autoEmailSenderDetails: autoEmailSenderDetailsReducer,\r\n        autoEmailValidations: autoEmailValidationsReducer,\r\n        onboarding: onboardingReducer,\r\n        importSubscribersTransformedData: importSubscribersTransformedDataReducer\r\n    },\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: false,\r\n        }),\r\n})","import React from \"react\";\r\nimport {Button, Col, Result, Row} from \"antd\";\r\nimport {SmileOutlined} from \"@ant-design/icons\";\r\nimport history from \"../utils/history\";\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n`;\r\n\r\nconst Title = styled.h1`\r\n\r\n`;\r\nconst Subtitle = styled.p`\r\n    font-size: 1.5em;\r\n`;\r\n\r\nconst EmailNotVerified = () => {\r\n    return <>\r\n        <Container>\r\n            <Result\r\n                status=\"info\"\r\n                icon={<SmileOutlined />}\r\n                title={<Title>Almost there!</Title>}\r\n                subTitle={<>\r\n                    <Subtitle>We've sent you an email with a link to activate your account.</Subtitle>\r\n                    <Subtitle>Send us an email at contact@mailgen.org if you need additional help.</Subtitle>\r\n                </>}\r\n            />\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default EmailNotVerified;","import styled from \"styled-components\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Alert, Button, Col, Collapse, Divider, message, Row, Select, Table, Upload} from \"antd\";\r\nimport validateEmail from \"../../utils/ValueValidations\";\r\nimport Tags from \"../../components/Tags\";\r\nimport {UploadOutlined} from \"@ant-design/icons\";\r\nimport {ContainerWrapper} from \"../../reportComponents/CampaignStyles\";\r\nimport {getImportedContactsColumns} from \"../../Audiance/logic/columns\";\r\nimport * as React from \"react\";\r\nimport {updateOnboarding} from \"../../features/onboarding/onboardingSlice\";\r\nimport subscriberType from \"../SubscriberType\";\r\nimport {useState} from \"react\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {callApi} from \"../../utils/apiHelper\";\r\nimport {setShouldReload} from \"../../features/subscribers/reloadAudienceReportSlice\";\r\nimport {setSubscriberManagementDrawerState} from \"../../features/subscribers/subscriberManagementDrawerSlice\";\r\nimport ImportedContacts from \"../../Audiance/components/importComponents/ImportedContacts\";\r\nconst { Panel } = Collapse;\r\n\r\nconst subscriberTypeOptions = Object.freeze([{\r\n    id: subscriberType.Subscribed,\r\n    name: \"Subscribers\"\r\n}, {\r\n    id: subscriberType.NotSubscribed,\r\n    name: \"Not Subscribers\"\r\n}])\r\n\r\nconst Text = styled.span`\r\n    // color: #1a3353;\r\n    font-weight: 500;\r\n    font-size: 15px;\r\n`;\r\n\r\nconst OnboadingImportSubscriber = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [importErrorMessage, setImportErrorMessage] = useState('')\r\n    const [model, setModel] = useState({\r\n        areSubscribers: subscriberType.Subscribed,\r\n        importedSubscribers: []\r\n    })\r\n\r\n    const CSVToArray = ( strData, strDelimiter ) => {\r\n        strDelimiter = (strDelimiter || \",\");\r\n\r\n        let objPattern = new RegExp((\"(\\\\\" + strDelimiter + \"|\\\\r?\\\\n|\\\\r|^)\" + \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" + \"([^\\\"\\\\\" + strDelimiter + \"\\\\r\\\\n]*))\" ),\"gi\");\r\n        let arrData = [[]];\r\n        let arrMatches = null;\r\n\r\n        while (arrMatches = objPattern.exec( strData )){\r\n            let strMatchedDelimiter = arrMatches[ 1 ];\r\n\r\n            if (strMatchedDelimiter.length && strMatchedDelimiter !== strDelimiter){\r\n                arrData.push( [] );\r\n            }\r\n\r\n            let strMatchedValue;\r\n\r\n            if (arrMatches[ 2 ]){\r\n                strMatchedValue = arrMatches[ 2 ].replace(new RegExp( \"\\\"\\\"\", \"g\" ), \"\\\"\");\r\n            } else {\r\n                strMatchedValue = arrMatches[ 3 ];\r\n            }\r\n\r\n            arrData[ arrData.length - 1 ].push( strMatchedValue );\r\n        }\r\n\r\n        return( arrData );\r\n    }\r\n\r\n    const props = {\r\n        name: 'file',\r\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n        headers: {\r\n            authorization: 'authorization-text',\r\n        },\r\n        beforeUpload(file) {\r\n            const isCsv = file.type === 'text/csv';\r\n            if (!isCsv) {\r\n                message.error(`${file.name} is not a valid csv file`);\r\n            }\r\n\r\n            return isCsv || Upload.LIST_IGNORE;\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status === 'removed'){\r\n                message.success(`${info.file.name} was removed`);\r\n                setModel({\r\n                    ...model,\r\n                    importedSubscribers: []\r\n                })\r\n                return;\r\n            }\r\n\r\n            if (info.file.status !== 'uploading') {\r\n                message.info(`${info.file.name} is being processed`);\r\n            }\r\n            if (info.file.status === 'done') {\r\n                message.success(`${info.file.name} file uploaded successfully`);\r\n            } else if (info.file.status === 'error') {\r\n                message.error(`${info.file.name} file upload failed.`);\r\n            }\r\n\r\n            const fileReader = new FileReader()\r\n            fileReader.readAsText(info.file.originFileObj)\r\n            fileReader.onloadend = (fileResult) => {\r\n                const recordsArray = CSVToArray(fileResult.target.result);\r\n                const headers = recordsArray[0];\r\n                let records = [];\r\n\r\n                for (let i = 1; i < recordsArray.length; i++){\r\n                    if (recordsArray[i][0] === ''){\r\n                        continue;\r\n                    }\r\n\r\n                    let obj = {};\r\n\r\n                    headers.forEach((header, headerIndex) => {\r\n                        obj[header] = recordsArray[i][headerIndex];\r\n                    })\r\n\r\n                    records.push(obj);\r\n                }\r\n\r\n                setImportErrorMessage('')\r\n                setModel({\r\n                    ...model,\r\n                    importedSubscribers: records\r\n                })\r\n            }\r\n        },\r\n    };\r\n\r\n    return <>\r\n        <Row>\r\n            <Col style={{marginTop: 3}} span={11}>\r\n                <Text>The contacts you import are:</Text>\r\n            </Col>\r\n            <Col span={10}>\r\n                <Select\r\n                    style={{width: '100%'}}\r\n                    placeholder=\"Is Subscriber\"\r\n                    onChange={val => setModel({\r\n                        ...model,\r\n                        areSubscribers: val\r\n                    })}\r\n                    value={model.areSubscribers}>\r\n                    {subscriberTypeOptions.map((x) => <Select.Option key={x.id} value={x.id}>{x.name}</Select.Option>)}\r\n                </Select>\r\n            </Col>\r\n        </Row>\r\n        <Row style={{marginTop: 10}}>\r\n            <Col style={{marginTop: 3}} span={11}>\r\n                <Text>The contacts relate to these tags:</Text>\r\n            </Col>\r\n            <Col span={10}>\r\n                <Tags />\r\n            </Col>\r\n        </Row>\r\n        <Divider orientation=\"left\" plain>Import</Divider>\r\n        <Row style={{marginTop: 10}}>\r\n            <Col span={10}>\r\n                <Upload {...props}>\r\n                    <Button icon={<UploadOutlined />}>Upload</Button>\r\n                </Upload>\r\n            </Col>\r\n        </Row>\r\n        <Row style={{marginTop: 10}}>\r\n            <Col span={24}>\r\n                <ImportedContacts\r\n                    loading={loading}\r\n                    importedSubscribers={model.importedSubscribers} />\r\n            </Col>\r\n            <Col span={24}>\r\n                {importErrorMessage.length > 0 ?\r\n                    <Alert\r\n                        style={{marginTop: 10}}\r\n                        type=\"error\"\r\n                        showIcon\r\n                        message=\"Error\"\r\n                        description={importErrorMessage} /> : ''}\r\n            </Col>\r\n            {/*<Col style={{marginTop: 10, marginLeft: 5}}>*/}\r\n            {/*    <RowsValidity />*/}\r\n            {/*</Col>*/}\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default OnboadingImportSubscriber;","import React, {useEffect, useState} from 'react'\r\nimport './App.css';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport {Auth0Provider, useAuth0} from \"@auth0/auth0-react\";\r\nimport history from \"./utils/history\";\r\nimport {getConfig} from \"./config\";\r\nimport LeftNavigation from \"./navigation/LeftNavigation\";\r\nimport {Provider as StoreProvider} from 'react-redux'\r\nimport 'antd/dist/antd.css';\r\nimport store from \"./store/store\";\r\nimport EmailNotVerified from \"./Onboarding/EmailNotVerified\";\r\nimport {callApi} from \"./utils/apiHelper\";\r\nimport OnboardingView from \"./Onboarding/OnboardingView\";\r\n\r\nfunction App() {\r\n    const config = getConfig()\r\n\r\n    const onRedirectCallback = (appState) => {\r\n        history.push(\r\n            appState && appState.returnTo ? appState.returnTo : window.location.pathname\r\n        );\r\n    };\r\n\r\n    const providerConfig = {\r\n        domain: config.domain,\r\n        clientId: config.clientId,\r\n        ...(config.audience ? {audience: config.audience} : null),\r\n        redirectUri: window.location.origin,\r\n        scope: config.scope,\r\n        onRedirectCallback\r\n    };\r\n\r\n    const MainView = () => {\r\n        return <>\r\n            <Router>\r\n                <div className=\"App\">\r\n                    <LeftNavigation/>\r\n                </div>\r\n            </Router>\r\n        </>\r\n    }\r\n\r\n    const LoadingView = () => {\r\n        return <>\r\n            <p>Loading...</p>\r\n        </>\r\n    }\r\n\r\n    const AppStructure = () => {\r\n        const [emailVerified, setEmailVerified] = useState(true)\r\n        const [emailVerifiedCheckLoaded, setEmailVerifiedCheckLoaded] = useState(false)\r\n        const [customerIdExists, setCustomerIdExists] = useState(false)\r\n        const [customerIdLoaded, setCustomerIdLoaded] = useState(false)\r\n        const [showLoadingView, setShowLoadingView] = useState(false)\r\n        const {isLoading, isAuthenticated, loginWithRedirect, getIdTokenClaims, getAccessTokenSilently} = useAuth0()\r\n\r\n        if (!isLoading && !isAuthenticated) {\r\n            loginWithRedirect()\r\n        }\r\n\r\n        if (!isLoading && !isAuthenticated) {\r\n            setShowLoadingView(true)\r\n        }\r\n\r\n        useEffect(() => {\r\n            setEmailVerifiedCheckLoaded(false)\r\n            getIdTokenClaims()\r\n                .then(x => {\r\n                    if (x) {\r\n                        setEmailVerified(x[\"email_verified\"])\r\n                        setEmailVerifiedCheckLoaded(true)\r\n                    }\r\n                })\r\n        }, [isAuthenticated])\r\n\r\n        const getViewAfterLoading = () => {\r\n            if (!emailVerified) {\r\n                return <EmailNotVerified />;\r\n            }\r\n            \r\n            return !customerIdExists || !customerIdLoaded ? <LoadingView /> : <MainView />;\r\n        }\r\n\r\n        const createCustomer = () => {\r\n            callApi(getAccessTokenSilently, {\r\n                url: `${process.env.REACT_APP_API_BASE}/customer/create`,\r\n                method: 'post',\r\n                successCallback: (response) => {\r\n                    setCustomerIdLoaded(true)\r\n                    if (response.id.length){\r\n                        setCustomerIdExists(true)\r\n                    }\r\n                },\r\n                errorCallback: (err) => { }\r\n            });\r\n        }\r\n        \r\n        useEffect(() => {\r\n            if (emailVerified){\r\n                callApi(getAccessTokenSilently, {\r\n                    url: `${process.env.REACT_APP_API_BASE}/customer/getCustomerId`,\r\n                    method: 'get',\r\n                    successCallback: (response) => {\r\n                        setCustomerIdLoaded(true)\r\n                        if (response.id.length){\r\n                            setCustomerIdExists(true)\r\n                        }else{\r\n                            createCustomer()\r\n                        }\r\n                    },\r\n                    errorCallback: (err) => { }\r\n                });\r\n            }\r\n        }, [])\r\n\r\n        return <>\r\n            {showLoadingView || !emailVerifiedCheckLoaded ? <LoadingView /> : getViewAfterLoading()}\r\n        </>\r\n    }\r\n\r\n    return (\r\n        <StoreProvider store={store}>\r\n            <Auth0Provider {...providerConfig}>\r\n                <AppStructure/>\r\n            </Auth0Provider>\r\n        </StoreProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst rootElement = document.getElementById('root')\r\nReactDOM.render(\r\n  <App />,\r\n  rootElement\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}